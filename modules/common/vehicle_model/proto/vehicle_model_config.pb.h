// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/vehicle_model/proto/vehicle_model_config.proto

#ifndef PROTOBUF_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto__INCLUDED
#define PROTOBUF_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace jmc_auto {
namespace common {
class ComCenteredDynamicBicycleModelConfig;
class ComCenteredDynamicBicycleModelConfigDefaultTypeInternal;
extern ComCenteredDynamicBicycleModelConfigDefaultTypeInternal _ComCenteredDynamicBicycleModelConfig_default_instance_;
class MlpModelConfig;
class MlpModelConfigDefaultTypeInternal;
extern MlpModelConfigDefaultTypeInternal _MlpModelConfig_default_instance_;
class RearCenteredKinematicBicycleModelConfig;
class RearCenteredKinematicBicycleModelConfigDefaultTypeInternal;
extern RearCenteredKinematicBicycleModelConfigDefaultTypeInternal _RearCenteredKinematicBicycleModelConfig_default_instance_;
class VehicleModelConfig;
class VehicleModelConfigDefaultTypeInternal;
extern VehicleModelConfigDefaultTypeInternal _VehicleModelConfig_default_instance_;
}  // namespace common
}  // namespace jmc_auto

namespace jmc_auto {
namespace common {

namespace protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto

enum VehicleModelConfig_ModelType {
  VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL = 0,
  VehicleModelConfig_ModelType_COM_CENTERED_DYNAMIC_BICYCLE_MODEL = 1,
  VehicleModelConfig_ModelType_MLP_MODEL = 2
};
bool VehicleModelConfig_ModelType_IsValid(int value);
const VehicleModelConfig_ModelType VehicleModelConfig_ModelType_ModelType_MIN = VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig_ModelType_ModelType_MAX = VehicleModelConfig_ModelType_MLP_MODEL;
const int VehicleModelConfig_ModelType_ModelType_ARRAYSIZE = VehicleModelConfig_ModelType_ModelType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VehicleModelConfig_ModelType_descriptor();
inline const ::std::string& VehicleModelConfig_ModelType_Name(VehicleModelConfig_ModelType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VehicleModelConfig_ModelType_descriptor(), value);
}
inline bool VehicleModelConfig_ModelType_Parse(
    const ::std::string& name, VehicleModelConfig_ModelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VehicleModelConfig_ModelType>(
    VehicleModelConfig_ModelType_descriptor(), name, value);
}
// ===================================================================

class VehicleModelConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jmc_auto.common.VehicleModelConfig) */ {
 public:
  VehicleModelConfig();
  virtual ~VehicleModelConfig();

  VehicleModelConfig(const VehicleModelConfig& from);

  inline VehicleModelConfig& operator=(const VehicleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleModelConfig& default_instance();

  static inline const VehicleModelConfig* internal_default_instance() {
    return reinterpret_cast<const VehicleModelConfig*>(
               &_VehicleModelConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VehicleModelConfig* other);

  // implements Message ----------------------------------------------

  inline VehicleModelConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleModelConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleModelConfig& from);
  void MergeFrom(const VehicleModelConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleModelConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VehicleModelConfig_ModelType ModelType;
  static const ModelType REAR_CENTERED_KINEMATIC_BICYCLE_MODEL =
    VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
  static const ModelType COM_CENTERED_DYNAMIC_BICYCLE_MODEL =
    VehicleModelConfig_ModelType_COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
  static const ModelType MLP_MODEL =
    VehicleModelConfig_ModelType_MLP_MODEL;
  static inline bool ModelType_IsValid(int value) {
    return VehicleModelConfig_ModelType_IsValid(value);
  }
  static const ModelType ModelType_MIN =
    VehicleModelConfig_ModelType_ModelType_MIN;
  static const ModelType ModelType_MAX =
    VehicleModelConfig_ModelType_ModelType_MAX;
  static const int ModelType_ARRAYSIZE =
    VehicleModelConfig_ModelType_ModelType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ModelType_descriptor() {
    return VehicleModelConfig_ModelType_descriptor();
  }
  static inline const ::std::string& ModelType_Name(ModelType value) {
    return VehicleModelConfig_ModelType_Name(value);
  }
  static inline bool ModelType_Parse(const ::std::string& name,
      ModelType* value) {
    return VehicleModelConfig_ModelType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  bool has_rc_kinematic_bicycle_model() const;
  void clear_rc_kinematic_bicycle_model();
  static const int kRcKinematicBicycleModelFieldNumber = 2;
  const ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig& rc_kinematic_bicycle_model() const;
  ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* mutable_rc_kinematic_bicycle_model();
  ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* release_rc_kinematic_bicycle_model();
  void set_allocated_rc_kinematic_bicycle_model(::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model);

  // optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  bool has_comc_dynamic_bicycle_model() const;
  void clear_comc_dynamic_bicycle_model();
  static const int kComcDynamicBicycleModelFieldNumber = 3;
  const ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig& comc_dynamic_bicycle_model() const;
  ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* mutable_comc_dynamic_bicycle_model();
  ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* release_comc_dynamic_bicycle_model();
  void set_allocated_comc_dynamic_bicycle_model(::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model);

  // optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
  bool has_mlp_model() const;
  void clear_mlp_model();
  static const int kMlpModelFieldNumber = 4;
  const ::jmc_auto::common::MlpModelConfig& mlp_model() const;
  ::jmc_auto::common::MlpModelConfig* mutable_mlp_model();
  ::jmc_auto::common::MlpModelConfig* release_mlp_model();
  void set_allocated_mlp_model(::jmc_auto::common::MlpModelConfig* mlp_model);

  // optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
  bool has_model_type() const;
  void clear_model_type();
  static const int kModelTypeFieldNumber = 1;
  ::jmc_auto::common::VehicleModelConfig_ModelType model_type() const;
  void set_model_type(::jmc_auto::common::VehicleModelConfig_ModelType value);

  // @@protoc_insertion_point(class_scope:jmc_auto.common.VehicleModelConfig)
 private:
  void set_has_model_type();
  void clear_has_model_type();
  void set_has_rc_kinematic_bicycle_model();
  void clear_has_rc_kinematic_bicycle_model();
  void set_has_comc_dynamic_bicycle_model();
  void clear_has_comc_dynamic_bicycle_model();
  void set_has_mlp_model();
  void clear_has_mlp_model();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model_;
  ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model_;
  ::jmc_auto::common::MlpModelConfig* mlp_model_;
  int model_type_;
  friend struct protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RearCenteredKinematicBicycleModelConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jmc_auto.common.RearCenteredKinematicBicycleModelConfig) */ {
 public:
  RearCenteredKinematicBicycleModelConfig();
  virtual ~RearCenteredKinematicBicycleModelConfig();

  RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from);

  inline RearCenteredKinematicBicycleModelConfig& operator=(const RearCenteredKinematicBicycleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RearCenteredKinematicBicycleModelConfig& default_instance();

  static inline const RearCenteredKinematicBicycleModelConfig* internal_default_instance() {
    return reinterpret_cast<const RearCenteredKinematicBicycleModelConfig*>(
               &_RearCenteredKinematicBicycleModelConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RearCenteredKinematicBicycleModelConfig* other);

  // implements Message ----------------------------------------------

  inline RearCenteredKinematicBicycleModelConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  RearCenteredKinematicBicycleModelConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RearCenteredKinematicBicycleModelConfig& from);
  void MergeFrom(const RearCenteredKinematicBicycleModelConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RearCenteredKinematicBicycleModelConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double dt = 1;
  bool has_dt() const;
  void clear_dt();
  static const int kDtFieldNumber = 1;
  double dt() const;
  void set_dt(double value);

  // @@protoc_insertion_point(class_scope:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
 private:
  void set_has_dt();
  void clear_has_dt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double dt_;
  friend struct protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComCenteredDynamicBicycleModelConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jmc_auto.common.ComCenteredDynamicBicycleModelConfig) */ {
 public:
  ComCenteredDynamicBicycleModelConfig();
  virtual ~ComCenteredDynamicBicycleModelConfig();

  ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from);

  inline ComCenteredDynamicBicycleModelConfig& operator=(const ComCenteredDynamicBicycleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComCenteredDynamicBicycleModelConfig& default_instance();

  static inline const ComCenteredDynamicBicycleModelConfig* internal_default_instance() {
    return reinterpret_cast<const ComCenteredDynamicBicycleModelConfig*>(
               &_ComCenteredDynamicBicycleModelConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ComCenteredDynamicBicycleModelConfig* other);

  // implements Message ----------------------------------------------

  inline ComCenteredDynamicBicycleModelConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ComCenteredDynamicBicycleModelConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComCenteredDynamicBicycleModelConfig& from);
  void MergeFrom(const ComCenteredDynamicBicycleModelConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComCenteredDynamicBicycleModelConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double dt = 1;
  bool has_dt() const;
  void clear_dt();
  static const int kDtFieldNumber = 1;
  double dt() const;
  void set_dt(double value);

  // @@protoc_insertion_point(class_scope:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
 private:
  void set_has_dt();
  void clear_has_dt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double dt_;
  friend struct protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MlpModelConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jmc_auto.common.MlpModelConfig) */ {
 public:
  MlpModelConfig();
  virtual ~MlpModelConfig();

  MlpModelConfig(const MlpModelConfig& from);

  inline MlpModelConfig& operator=(const MlpModelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MlpModelConfig& default_instance();

  static inline const MlpModelConfig* internal_default_instance() {
    return reinterpret_cast<const MlpModelConfig*>(
               &_MlpModelConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MlpModelConfig* other);

  // implements Message ----------------------------------------------

  inline MlpModelConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  MlpModelConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MlpModelConfig& from);
  void MergeFrom(const MlpModelConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MlpModelConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double dt = 1;
  bool has_dt() const;
  void clear_dt();
  static const int kDtFieldNumber = 1;
  double dt() const;
  void set_dt(double value);

  // @@protoc_insertion_point(class_scope:jmc_auto.common.MlpModelConfig)
 private:
  void set_has_dt();
  void clear_has_dt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double dt_;
  friend struct protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleModelConfig

// optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
inline bool VehicleModelConfig::has_model_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VehicleModelConfig::set_has_model_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VehicleModelConfig::clear_has_model_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VehicleModelConfig::clear_model_type() {
  model_type_ = 0;
  clear_has_model_type();
}
inline ::jmc_auto::common::VehicleModelConfig_ModelType VehicleModelConfig::model_type() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.model_type)
  return static_cast< ::jmc_auto::common::VehicleModelConfig_ModelType >(model_type_);
}
inline void VehicleModelConfig::set_model_type(::jmc_auto::common::VehicleModelConfig_ModelType value) {
  assert(::jmc_auto::common::VehicleModelConfig_ModelType_IsValid(value));
  set_has_model_type();
  model_type_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.VehicleModelConfig.model_type)
}

// optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
inline bool VehicleModelConfig::has_rc_kinematic_bicycle_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VehicleModelConfig::set_has_rc_kinematic_bicycle_model() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VehicleModelConfig::clear_has_rc_kinematic_bicycle_model() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VehicleModelConfig::clear_rc_kinematic_bicycle_model() {
  if (rc_kinematic_bicycle_model_ != NULL) rc_kinematic_bicycle_model_->::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::Clear();
  clear_has_rc_kinematic_bicycle_model();
}
inline const ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig& VehicleModelConfig::rc_kinematic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return rc_kinematic_bicycle_model_ != NULL ? *rc_kinematic_bicycle_model_
                         : *::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::internal_default_instance();
}
inline ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::mutable_rc_kinematic_bicycle_model() {
  set_has_rc_kinematic_bicycle_model();
  if (rc_kinematic_bicycle_model_ == NULL) {
    rc_kinematic_bicycle_model_ = new ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return rc_kinematic_bicycle_model_;
}
inline ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::release_rc_kinematic_bicycle_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  clear_has_rc_kinematic_bicycle_model();
  ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* temp = rc_kinematic_bicycle_model_;
  rc_kinematic_bicycle_model_ = NULL;
  return temp;
}
inline void VehicleModelConfig::set_allocated_rc_kinematic_bicycle_model(::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model) {
  delete rc_kinematic_bicycle_model_;
  rc_kinematic_bicycle_model_ = rc_kinematic_bicycle_model;
  if (rc_kinematic_bicycle_model) {
    set_has_rc_kinematic_bicycle_model();
  } else {
    clear_has_rc_kinematic_bicycle_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
}

// optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
inline bool VehicleModelConfig::has_comc_dynamic_bicycle_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VehicleModelConfig::set_has_comc_dynamic_bicycle_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VehicleModelConfig::clear_has_comc_dynamic_bicycle_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VehicleModelConfig::clear_comc_dynamic_bicycle_model() {
  if (comc_dynamic_bicycle_model_ != NULL) comc_dynamic_bicycle_model_->::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::Clear();
  clear_has_comc_dynamic_bicycle_model();
}
inline const ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig& VehicleModelConfig::comc_dynamic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return comc_dynamic_bicycle_model_ != NULL ? *comc_dynamic_bicycle_model_
                         : *::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::internal_default_instance();
}
inline ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::mutable_comc_dynamic_bicycle_model() {
  set_has_comc_dynamic_bicycle_model();
  if (comc_dynamic_bicycle_model_ == NULL) {
    comc_dynamic_bicycle_model_ = new ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return comc_dynamic_bicycle_model_;
}
inline ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::release_comc_dynamic_bicycle_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  clear_has_comc_dynamic_bicycle_model();
  ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* temp = comc_dynamic_bicycle_model_;
  comc_dynamic_bicycle_model_ = NULL;
  return temp;
}
inline void VehicleModelConfig::set_allocated_comc_dynamic_bicycle_model(::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model) {
  delete comc_dynamic_bicycle_model_;
  comc_dynamic_bicycle_model_ = comc_dynamic_bicycle_model;
  if (comc_dynamic_bicycle_model) {
    set_has_comc_dynamic_bicycle_model();
  } else {
    clear_has_comc_dynamic_bicycle_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
}

// optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
inline bool VehicleModelConfig::has_mlp_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VehicleModelConfig::set_has_mlp_model() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VehicleModelConfig::clear_has_mlp_model() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VehicleModelConfig::clear_mlp_model() {
  if (mlp_model_ != NULL) mlp_model_->::jmc_auto::common::MlpModelConfig::Clear();
  clear_has_mlp_model();
}
inline const ::jmc_auto::common::MlpModelConfig& VehicleModelConfig::mlp_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.mlp_model)
  return mlp_model_ != NULL ? *mlp_model_
                         : *::jmc_auto::common::MlpModelConfig::internal_default_instance();
}
inline ::jmc_auto::common::MlpModelConfig* VehicleModelConfig::mutable_mlp_model() {
  set_has_mlp_model();
  if (mlp_model_ == NULL) {
    mlp_model_ = new ::jmc_auto::common::MlpModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.mlp_model)
  return mlp_model_;
}
inline ::jmc_auto::common::MlpModelConfig* VehicleModelConfig::release_mlp_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.mlp_model)
  clear_has_mlp_model();
  ::jmc_auto::common::MlpModelConfig* temp = mlp_model_;
  mlp_model_ = NULL;
  return temp;
}
inline void VehicleModelConfig::set_allocated_mlp_model(::jmc_auto::common::MlpModelConfig* mlp_model) {
  delete mlp_model_;
  mlp_model_ = mlp_model;
  if (mlp_model) {
    set_has_mlp_model();
  } else {
    clear_has_mlp_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.mlp_model)
}

// -------------------------------------------------------------------

// RearCenteredKinematicBicycleModelConfig

// optional double dt = 1;
inline bool RearCenteredKinematicBicycleModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RearCenteredKinematicBicycleModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RearCenteredKinematicBicycleModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RearCenteredKinematicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
inline double RearCenteredKinematicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.RearCenteredKinematicBicycleModelConfig.dt)
  return dt_;
}
inline void RearCenteredKinematicBicycleModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.RearCenteredKinematicBicycleModelConfig.dt)
}

// -------------------------------------------------------------------

// ComCenteredDynamicBicycleModelConfig

// optional double dt = 1;
inline bool ComCenteredDynamicBicycleModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComCenteredDynamicBicycleModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComCenteredDynamicBicycleModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComCenteredDynamicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
inline double ComCenteredDynamicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.ComCenteredDynamicBicycleModelConfig.dt)
  return dt_;
}
inline void ComCenteredDynamicBicycleModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.ComCenteredDynamicBicycleModelConfig.dt)
}

// -------------------------------------------------------------------

// MlpModelConfig

// optional double dt = 1;
inline bool MlpModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MlpModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MlpModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MlpModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
inline double MlpModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.MlpModelConfig.dt)
  return dt_;
}
inline void MlpModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.MlpModelConfig.dt)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace common
}  // namespace jmc_auto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::jmc_auto::common::VehicleModelConfig_ModelType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::jmc_auto::common::VehicleModelConfig_ModelType>() {
  return ::jmc_auto::common::VehicleModelConfig_ModelType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto__INCLUDED
