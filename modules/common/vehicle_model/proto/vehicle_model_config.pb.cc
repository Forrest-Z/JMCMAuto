// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/vehicle_model/proto/vehicle_model_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/common/vehicle_model/proto/vehicle_model_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace common {
class VehicleModelConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VehicleModelConfig> {
} _VehicleModelConfig_default_instance_;
class RearCenteredKinematicBicycleModelConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RearCenteredKinematicBicycleModelConfig> {
} _RearCenteredKinematicBicycleModelConfig_default_instance_;
class ComCenteredDynamicBicycleModelConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ComCenteredDynamicBicycleModelConfig> {
} _ComCenteredDynamicBicycleModelConfig_default_instance_;
class MlpModelConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MlpModelConfig> {
} _MlpModelConfig_default_instance_;

namespace protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, model_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, rc_kinematic_bicycle_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, comc_dynamic_bicycle_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VehicleModelConfig, mlp_model_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RearCenteredKinematicBicycleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RearCenteredKinematicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RearCenteredKinematicBicycleModelConfig, dt_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComCenteredDynamicBicycleModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComCenteredDynamicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComCenteredDynamicBicycleModelConfig, dt_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MlpModelConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MlpModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MlpModelConfig, dt_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(VehicleModelConfig)},
  { 13, 19, sizeof(RearCenteredKinematicBicycleModelConfig)},
  { 20, 26, sizeof(ComCenteredDynamicBicycleModelConfig)},
  { 27, 33, sizeof(MlpModelConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VehicleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RearCenteredKinematicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComCenteredDynamicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MlpModelConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/common/vehicle_model/proto/vehicle_model_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _VehicleModelConfig_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RearCenteredKinematicBicycleModelConfig_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ComCenteredDynamicBicycleModelConfig_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MlpModelConfig_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _VehicleModelConfig_default_instance_.DefaultConstruct();
  _RearCenteredKinematicBicycleModelConfig_default_instance_.DefaultConstruct();
  _ComCenteredDynamicBicycleModelConfig_default_instance_.DefaultConstruct();
  _MlpModelConfig_default_instance_.DefaultConstruct();
  _VehicleModelConfig_default_instance_.get_mutable()->rc_kinematic_bicycle_model_ = const_cast< ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig*>(
      ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::internal_default_instance());
  _VehicleModelConfig_default_instance_.get_mutable()->comc_dynamic_bicycle_model_ = const_cast< ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig*>(
      ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::internal_default_instance());
  _VehicleModelConfig_default_instance_.get_mutable()->mlp_model_ = const_cast< ::jmc_auto::common::MlpModelConfig*>(
      ::jmc_auto::common::MlpModelConfig::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n=modules/common/vehicle_model/proto/veh"
      "icle_model_config.proto\022\017jmc_auto.common"
      "\"\263\003\n\022VehicleModelConfig\022A\n\nmodel_type\030\001 "
      "\001(\0162-.jmc_auto.common.VehicleModelConfig"
      ".ModelType\022\\\n\032rc_kinematic_bicycle_model"
      "\030\002 \001(\01328.jmc_auto.common.RearCenteredKin"
      "ematicBicycleModelConfig\022Y\n\032comc_dynamic"
      "_bicycle_model\030\003 \001(\01325.jmc_auto.common.C"
      "omCenteredDynamicBicycleModelConfig\0222\n\tm"
      "lp_model\030\004 \001(\0132\037.jmc_auto.common.MlpMode"
      "lConfig\"m\n\tModelType\022)\n%REAR_CENTERED_KI"
      "NEMATIC_BICYCLE_MODEL\020\000\022&\n\"COM_CENTERED_"
      "DYNAMIC_BICYCLE_MODEL\020\001\022\r\n\tMLP_MODEL\020\002\"5"
      "\n\'RearCenteredKinematicBicycleModelConfi"
      "g\022\n\n\002dt\030\001 \001(\001\"2\n$ComCenteredDynamicBicyc"
      "leModelConfig\022\n\n\002dt\030\001 \001(\001\"\034\n\016MlpModelCon"
      "fig\022\n\n\002dt\030\001 \001(\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 655);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/common/vehicle_model/proto/vehicle_model_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto

const ::google::protobuf::EnumDescriptor* VehicleModelConfig_ModelType_descriptor() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool VehicleModelConfig_ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const VehicleModelConfig_ModelType VehicleModelConfig::REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::MLP_MODEL;
const VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MIN;
const VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MAX;
const int VehicleModelConfig::ModelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleModelConfig::kModelTypeFieldNumber;
const int VehicleModelConfig::kRcKinematicBicycleModelFieldNumber;
const int VehicleModelConfig::kComcDynamicBicycleModelFieldNumber;
const int VehicleModelConfig::kMlpModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleModelConfig::VehicleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.common.VehicleModelConfig)
}
VehicleModelConfig::VehicleModelConfig(const VehicleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rc_kinematic_bicycle_model()) {
    rc_kinematic_bicycle_model_ = new ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig(*from.rc_kinematic_bicycle_model_);
  } else {
    rc_kinematic_bicycle_model_ = NULL;
  }
  if (from.has_comc_dynamic_bicycle_model()) {
    comc_dynamic_bicycle_model_ = new ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig(*from.comc_dynamic_bicycle_model_);
  } else {
    comc_dynamic_bicycle_model_ = NULL;
  }
  if (from.has_mlp_model()) {
    mlp_model_ = new ::jmc_auto::common::MlpModelConfig(*from.mlp_model_);
  } else {
    mlp_model_ = NULL;
  }
  model_type_ = from.model_type_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.common.VehicleModelConfig)
}

void VehicleModelConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rc_kinematic_bicycle_model_, 0, reinterpret_cast<char*>(&model_type_) -
    reinterpret_cast<char*>(&rc_kinematic_bicycle_model_) + sizeof(model_type_));
}

VehicleModelConfig::~VehicleModelConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.common.VehicleModelConfig)
  SharedDtor();
}

void VehicleModelConfig::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rc_kinematic_bicycle_model_;
  }
  if (this != internal_default_instance()) {
    delete comc_dynamic_bicycle_model_;
  }
  if (this != internal_default_instance()) {
    delete mlp_model_;
  }
}

void VehicleModelConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleModelConfig::descriptor() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleModelConfig& VehicleModelConfig::default_instance() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

VehicleModelConfig* VehicleModelConfig::New(::google::protobuf::Arena* arena) const {
  VehicleModelConfig* n = new VehicleModelConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.common.VehicleModelConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_rc_kinematic_bicycle_model()) {
      GOOGLE_DCHECK(rc_kinematic_bicycle_model_ != NULL);
      rc_kinematic_bicycle_model_->::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::Clear();
    }
    if (has_comc_dynamic_bicycle_model()) {
      GOOGLE_DCHECK(comc_dynamic_bicycle_model_ != NULL);
      comc_dynamic_bicycle_model_->::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::Clear();
    }
    if (has_mlp_model()) {
      GOOGLE_DCHECK(mlp_model_ != NULL);
      mlp_model_->::jmc_auto::common::MlpModelConfig::Clear();
    }
  }
  model_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.common.VehicleModelConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::common::VehicleModelConfig_ModelType_IsValid(value)) {
            set_model_type(static_cast< ::jmc_auto::common::VehicleModelConfig_ModelType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rc_kinematic_bicycle_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_comc_dynamic_bicycle_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mlp_model()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.common.VehicleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.common.VehicleModelConfig)
  return false;
#undef DO_
}

void VehicleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.common.VehicleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->model_type(), output);
  }

  // optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rc_kinematic_bicycle_model_, output);
  }

  // optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->comc_dynamic_bicycle_model_, output);
  }

  // optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mlp_model_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.common.VehicleModelConfig)
}

::google::protobuf::uint8* VehicleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.common.VehicleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->model_type(), target);
  }

  // optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rc_kinematic_bicycle_model_, deterministic, target);
  }

  // optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->comc_dynamic_bicycle_model_, deterministic, target);
  }

  // optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->mlp_model_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.common.VehicleModelConfig)
  return target;
}

size_t VehicleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.common.VehicleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
    if (has_rc_kinematic_bicycle_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rc_kinematic_bicycle_model_);
    }

    // optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
    if (has_comc_dynamic_bicycle_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->comc_dynamic_bicycle_model_);
    }

    // optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
    if (has_mlp_model()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->mlp_model_);
    }

    // optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
    if (has_model_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->model_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.common.VehicleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.common.VehicleModelConfig)
    MergeFrom(*source);
  }
}

void VehicleModelConfig::MergeFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rc_kinematic_bicycle_model()->::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::MergeFrom(from.rc_kinematic_bicycle_model());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_comc_dynamic_bicycle_model()->::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::MergeFrom(from.comc_dynamic_bicycle_model());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_mlp_model()->::jmc_auto::common::MlpModelConfig::MergeFrom(from.mlp_model());
    }
    if (cached_has_bits & 0x00000008u) {
      model_type_ = from.model_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleModelConfig::CopyFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleModelConfig::IsInitialized() const {
  return true;
}

void VehicleModelConfig::Swap(VehicleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleModelConfig::InternalSwap(VehicleModelConfig* other) {
  std::swap(rc_kinematic_bicycle_model_, other->rc_kinematic_bicycle_model_);
  std::swap(comc_dynamic_bicycle_model_, other->comc_dynamic_bicycle_model_);
  std::swap(mlp_model_, other->mlp_model_);
  std::swap(model_type_, other->model_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VehicleModelConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VehicleModelConfig

// optional .jmc_auto.common.VehicleModelConfig.ModelType model_type = 1;
bool VehicleModelConfig::has_model_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VehicleModelConfig::set_has_model_type() {
  _has_bits_[0] |= 0x00000008u;
}
void VehicleModelConfig::clear_has_model_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void VehicleModelConfig::clear_model_type() {
  model_type_ = 0;
  clear_has_model_type();
}
::jmc_auto::common::VehicleModelConfig_ModelType VehicleModelConfig::model_type() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.model_type)
  return static_cast< ::jmc_auto::common::VehicleModelConfig_ModelType >(model_type_);
}
void VehicleModelConfig::set_model_type(::jmc_auto::common::VehicleModelConfig_ModelType value) {
  assert(::jmc_auto::common::VehicleModelConfig_ModelType_IsValid(value));
  set_has_model_type();
  model_type_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.VehicleModelConfig.model_type)
}

// optional .jmc_auto.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
bool VehicleModelConfig::has_rc_kinematic_bicycle_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VehicleModelConfig::set_has_rc_kinematic_bicycle_model() {
  _has_bits_[0] |= 0x00000001u;
}
void VehicleModelConfig::clear_has_rc_kinematic_bicycle_model() {
  _has_bits_[0] &= ~0x00000001u;
}
void VehicleModelConfig::clear_rc_kinematic_bicycle_model() {
  if (rc_kinematic_bicycle_model_ != NULL) rc_kinematic_bicycle_model_->::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::Clear();
  clear_has_rc_kinematic_bicycle_model();
}
const ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig& VehicleModelConfig::rc_kinematic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return rc_kinematic_bicycle_model_ != NULL ? *rc_kinematic_bicycle_model_
                         : *::jmc_auto::common::RearCenteredKinematicBicycleModelConfig::internal_default_instance();
}
::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::mutable_rc_kinematic_bicycle_model() {
  set_has_rc_kinematic_bicycle_model();
  if (rc_kinematic_bicycle_model_ == NULL) {
    rc_kinematic_bicycle_model_ = new ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return rc_kinematic_bicycle_model_;
}
::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::release_rc_kinematic_bicycle_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  clear_has_rc_kinematic_bicycle_model();
  ::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* temp = rc_kinematic_bicycle_model_;
  rc_kinematic_bicycle_model_ = NULL;
  return temp;
}
void VehicleModelConfig::set_allocated_rc_kinematic_bicycle_model(::jmc_auto::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model) {
  delete rc_kinematic_bicycle_model_;
  rc_kinematic_bicycle_model_ = rc_kinematic_bicycle_model;
  if (rc_kinematic_bicycle_model) {
    set_has_rc_kinematic_bicycle_model();
  } else {
    clear_has_rc_kinematic_bicycle_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.rc_kinematic_bicycle_model)
}

// optional .jmc_auto.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
bool VehicleModelConfig::has_comc_dynamic_bicycle_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VehicleModelConfig::set_has_comc_dynamic_bicycle_model() {
  _has_bits_[0] |= 0x00000002u;
}
void VehicleModelConfig::clear_has_comc_dynamic_bicycle_model() {
  _has_bits_[0] &= ~0x00000002u;
}
void VehicleModelConfig::clear_comc_dynamic_bicycle_model() {
  if (comc_dynamic_bicycle_model_ != NULL) comc_dynamic_bicycle_model_->::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::Clear();
  clear_has_comc_dynamic_bicycle_model();
}
const ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig& VehicleModelConfig::comc_dynamic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return comc_dynamic_bicycle_model_ != NULL ? *comc_dynamic_bicycle_model_
                         : *::jmc_auto::common::ComCenteredDynamicBicycleModelConfig::internal_default_instance();
}
::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::mutable_comc_dynamic_bicycle_model() {
  set_has_comc_dynamic_bicycle_model();
  if (comc_dynamic_bicycle_model_ == NULL) {
    comc_dynamic_bicycle_model_ = new ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return comc_dynamic_bicycle_model_;
}
::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::release_comc_dynamic_bicycle_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  clear_has_comc_dynamic_bicycle_model();
  ::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* temp = comc_dynamic_bicycle_model_;
  comc_dynamic_bicycle_model_ = NULL;
  return temp;
}
void VehicleModelConfig::set_allocated_comc_dynamic_bicycle_model(::jmc_auto::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model) {
  delete comc_dynamic_bicycle_model_;
  comc_dynamic_bicycle_model_ = comc_dynamic_bicycle_model;
  if (comc_dynamic_bicycle_model) {
    set_has_comc_dynamic_bicycle_model();
  } else {
    clear_has_comc_dynamic_bicycle_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.comc_dynamic_bicycle_model)
}

// optional .jmc_auto.common.MlpModelConfig mlp_model = 4;
bool VehicleModelConfig::has_mlp_model() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VehicleModelConfig::set_has_mlp_model() {
  _has_bits_[0] |= 0x00000004u;
}
void VehicleModelConfig::clear_has_mlp_model() {
  _has_bits_[0] &= ~0x00000004u;
}
void VehicleModelConfig::clear_mlp_model() {
  if (mlp_model_ != NULL) mlp_model_->::jmc_auto::common::MlpModelConfig::Clear();
  clear_has_mlp_model();
}
const ::jmc_auto::common::MlpModelConfig& VehicleModelConfig::mlp_model() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.VehicleModelConfig.mlp_model)
  return mlp_model_ != NULL ? *mlp_model_
                         : *::jmc_auto::common::MlpModelConfig::internal_default_instance();
}
::jmc_auto::common::MlpModelConfig* VehicleModelConfig::mutable_mlp_model() {
  set_has_mlp_model();
  if (mlp_model_ == NULL) {
    mlp_model_ = new ::jmc_auto::common::MlpModelConfig;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.common.VehicleModelConfig.mlp_model)
  return mlp_model_;
}
::jmc_auto::common::MlpModelConfig* VehicleModelConfig::release_mlp_model() {
  // @@protoc_insertion_point(field_release:jmc_auto.common.VehicleModelConfig.mlp_model)
  clear_has_mlp_model();
  ::jmc_auto::common::MlpModelConfig* temp = mlp_model_;
  mlp_model_ = NULL;
  return temp;
}
void VehicleModelConfig::set_allocated_mlp_model(::jmc_auto::common::MlpModelConfig* mlp_model) {
  delete mlp_model_;
  mlp_model_ = mlp_model;
  if (mlp_model) {
    set_has_mlp_model();
  } else {
    clear_has_mlp_model();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.common.VehicleModelConfig.mlp_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RearCenteredKinematicBicycleModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
}
RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
}

void RearCenteredKinematicBicycleModelConfig::SharedCtor() {
  _cached_size_ = 0;
  dt_ = 0;
}

RearCenteredKinematicBicycleModelConfig::~RearCenteredKinematicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  SharedDtor();
}

void RearCenteredKinematicBicycleModelConfig::SharedDtor() {
}

void RearCenteredKinematicBicycleModelConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RearCenteredKinematicBicycleModelConfig::descriptor() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RearCenteredKinematicBicycleModelConfig& RearCenteredKinematicBicycleModelConfig::default_instance() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

RearCenteredKinematicBicycleModelConfig* RearCenteredKinematicBicycleModelConfig::New(::google::protobuf::Arena* arena) const {
  RearCenteredKinematicBicycleModelConfig* n = new RearCenteredKinematicBicycleModelConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RearCenteredKinematicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RearCenteredKinematicBicycleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  return false;
#undef DO_
}

void RearCenteredKinematicBicycleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
}

::google::protobuf::uint8* RearCenteredKinematicBicycleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  return target;
}

size_t RearCenteredKinematicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RearCenteredKinematicBicycleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RearCenteredKinematicBicycleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearCenteredKinematicBicycleModelConfig::IsInitialized() const {
  return true;
}

void RearCenteredKinematicBicycleModelConfig::Swap(RearCenteredKinematicBicycleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RearCenteredKinematicBicycleModelConfig::InternalSwap(RearCenteredKinematicBicycleModelConfig* other) {
  std::swap(dt_, other->dt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RearCenteredKinematicBicycleModelConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RearCenteredKinematicBicycleModelConfig

// optional double dt = 1;
bool RearCenteredKinematicBicycleModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RearCenteredKinematicBicycleModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
void RearCenteredKinematicBicycleModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
void RearCenteredKinematicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
double RearCenteredKinematicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.RearCenteredKinematicBicycleModelConfig.dt)
  return dt_;
}
void RearCenteredKinematicBicycleModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.RearCenteredKinematicBicycleModelConfig.dt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComCenteredDynamicBicycleModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
}
ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
}

void ComCenteredDynamicBicycleModelConfig::SharedCtor() {
  _cached_size_ = 0;
  dt_ = 0;
}

ComCenteredDynamicBicycleModelConfig::~ComCenteredDynamicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  SharedDtor();
}

void ComCenteredDynamicBicycleModelConfig::SharedDtor() {
}

void ComCenteredDynamicBicycleModelConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComCenteredDynamicBicycleModelConfig::descriptor() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComCenteredDynamicBicycleModelConfig& ComCenteredDynamicBicycleModelConfig::default_instance() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

ComCenteredDynamicBicycleModelConfig* ComCenteredDynamicBicycleModelConfig::New(::google::protobuf::Arena* arena) const {
  ComCenteredDynamicBicycleModelConfig* n = new ComCenteredDynamicBicycleModelConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComCenteredDynamicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComCenteredDynamicBicycleModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  return false;
#undef DO_
}

void ComCenteredDynamicBicycleModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
}

::google::protobuf::uint8* ComCenteredDynamicBicycleModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  return target;
}

size_t ComCenteredDynamicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ComCenteredDynamicBicycleModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComCenteredDynamicBicycleModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComCenteredDynamicBicycleModelConfig::IsInitialized() const {
  return true;
}

void ComCenteredDynamicBicycleModelConfig::Swap(ComCenteredDynamicBicycleModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComCenteredDynamicBicycleModelConfig::InternalSwap(ComCenteredDynamicBicycleModelConfig* other) {
  std::swap(dt_, other->dt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComCenteredDynamicBicycleModelConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComCenteredDynamicBicycleModelConfig

// optional double dt = 1;
bool ComCenteredDynamicBicycleModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ComCenteredDynamicBicycleModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
void ComCenteredDynamicBicycleModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
void ComCenteredDynamicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
double ComCenteredDynamicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.ComCenteredDynamicBicycleModelConfig.dt)
  return dt_;
}
void ComCenteredDynamicBicycleModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.ComCenteredDynamicBicycleModelConfig.dt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MlpModelConfig::kDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MlpModelConfig::MlpModelConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.common.MlpModelConfig)
}
MlpModelConfig::MlpModelConfig(const MlpModelConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:jmc_auto.common.MlpModelConfig)
}

void MlpModelConfig::SharedCtor() {
  _cached_size_ = 0;
  dt_ = 0;
}

MlpModelConfig::~MlpModelConfig() {
  // @@protoc_insertion_point(destructor:jmc_auto.common.MlpModelConfig)
  SharedDtor();
}

void MlpModelConfig::SharedDtor() {
}

void MlpModelConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MlpModelConfig::descriptor() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MlpModelConfig& MlpModelConfig::default_instance() {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

MlpModelConfig* MlpModelConfig::New(::google::protobuf::Arena* arena) const {
  MlpModelConfig* n = new MlpModelConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MlpModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.common.MlpModelConfig)
  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MlpModelConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.common.MlpModelConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double dt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_dt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.common.MlpModelConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.common.MlpModelConfig)
  return false;
#undef DO_
}

void MlpModelConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.common.MlpModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.common.MlpModelConfig)
}

::google::protobuf::uint8* MlpModelConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.common.MlpModelConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.common.MlpModelConfig)
  return target;
}

size_t MlpModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.common.MlpModelConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional double dt = 1;
  if (has_dt()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MlpModelConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MlpModelConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MlpModelConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.common.MlpModelConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.common.MlpModelConfig)
    MergeFrom(*source);
  }
}

void MlpModelConfig::MergeFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dt()) {
    set_dt(from.dt());
  }
}

void MlpModelConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MlpModelConfig::CopyFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MlpModelConfig::IsInitialized() const {
  return true;
}

void MlpModelConfig::Swap(MlpModelConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MlpModelConfig::InternalSwap(MlpModelConfig* other) {
  std::swap(dt_, other->dt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MlpModelConfig::GetMetadata() const {
  protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MlpModelConfig

// optional double dt = 1;
bool MlpModelConfig::has_dt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MlpModelConfig::set_has_dt() {
  _has_bits_[0] |= 0x00000001u;
}
void MlpModelConfig::clear_has_dt() {
  _has_bits_[0] &= ~0x00000001u;
}
void MlpModelConfig::clear_dt() {
  dt_ = 0;
  clear_has_dt();
}
double MlpModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.common.MlpModelConfig.dt)
  return dt_;
}
void MlpModelConfig::set_dt(double value) {
  set_has_dt();
  dt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.common.MlpModelConfig.dt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
