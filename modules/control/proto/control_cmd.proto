syntax = "proto2";
package jmc_auto.control;

import "modules/canbus/proto/chassis.proto";
import "modules/common/proto/header.proto";
import "modules/common/proto/vehicle_signal.proto";
import "modules/control/proto/pad_msg.proto";
import "modules/common/proto/drive_state.proto";

enum TurnSignal {
  TURN_NONE = 0;
  TURN_LEFT = 1;
  TURN_RIGHT = 2;
}

message LatencyStats {
  optional double total_time_ms = 1;
  repeated double controller_time_ms = 2;
  optional bool total_time_exceeded = 3;
}

// next id : 27
message ControlCommand {
  optional jmc_auto.common.Header header = 1;
  // target non-directional steering rate, in percentage of full scale per second [0, 100]
  optional double throttle =2;
  optional double brake = 3 ;
  optional double steering_rate = 6;
  // target steering angle, in percentage of full scale [-100, 100]
  optional double steering_target = 7;//方向盘目标角度
  // target speed, in m/s
  optional double speed = 9;
  // target acceleration in m`s^-2
  optional double acceleration = 10;
 // optional double planning_acceleration = 32 ;
 // deprecated fields
  optional bool left_turn = 13 [deprecated = true];
  optional bool right_turn = 14 [deprecated = true];
  optional bool high_beam = 11 [deprecated = true];
  optional bool low_beam = 12 [deprecated = true];
  optional bool horn = 15 [deprecated = true];
  optional TurnSignal turnsignal = 21 [deprecated = true];
  // model reset
  optional bool reset_model = 16 [deprecated = true];
  // engine on/off, true: engine on
  optional bool engine_on_off = 17;
  // completion percentage of trajectory planned in last cycle
  optional double trajectory_fraction = 18;
  optional jmc_auto.canbus.Chassis.DrivingMode driving_mode = 19 [deprecated = true];
  optional jmc_auto.canbus.Chassis.GearPosition gear_location = 20;
  optional Debug debug = 22;
  optional jmc_auto.common.VehicleSignal signal = 23;
  optional LatencyStats latency_stats = 24;
  optional PadMessage pad_msg = 25;
  optional jmc_auto.common.EngageAdvice engage_advice = 26;
  optional bool is_in_safe_mode = 27 [default = false];
   //CX75
  optional double steering_torque=28;
  optional int32 pam_esp_stop_distance=29;
  optional bool ACC_StandstillReq=30;
  optional double steering_angle =31 ;
  optional bool parking_brake=33;
  //CX756 APA
//APA转向方向盘角度，deg，[-780,780],0.0238
 //APA停车距离，cm ，[0,4094] , 1
   //APA 速度 kph ，[0,25.4], 0.1
  optional int32 PAM_ESP_Target_Gear_Request = 37 ;
}

message SimpleLongitudinalDebug {
  optional double station_reference = 1;
  optional double station_error = 2;
  optional double station_error_limited = 3;
  optional double preview_station_error = 4;
  optional double speed_reference = 5;
  optional double speed_error = 6;
  optional double speed_controller_input_limited = 7;
  optional double preview_speed_reference = 8;
  optional double preview_speed_error = 9;
  optional double preview_acceleration_reference = 10;
  optional double acceleration_cmd = 12;
  optional double acceleration_cmd_closeloop = 11;
  optional double acceleration_lookup = 13;
  optional double speed_real = 14;
  optional double calibration_value = 15;
  optional bool is_full_stop = 18;
  optional double slope_offset_compensation = 19;
  optional double current_station = 20;
  optional double path_remain = 21;
  optional double preview_kappa = 22;
  optional double match_acceleration_reference = 23 ;
  optional double speed_offset = 24 ;
  optional jmc_auto.canbus.Chassis.GearPosition gear_location = 25;
}

message SimpleLateralDebug {
  optional double lateral_error = 1;
  optional double ref_heading = 2;
  optional double heading = 3;
  optional double heading_error = 4;
  optional double heading_error_rate = 5;
  optional double lateral_error_rate = 6;
  optional double curvature = 7;
  optional double steer_angle = 8;
  optional double steer_angle_feedforward = 9;
  optional double steer_angle_lateral_contribution = 10;
  optional double steer_angle_lateral_rate_contribution = 11;
  optional double steer_angle_heading_contribution = 12;
  optional double steer_angle_heading_rate_contribution = 13;
  optional double steer_angle_feedback = 14;
  optional double steering_position = 15;
  optional double ref_speed = 16;
  optional double steer_angle_limited = 17;
  optional double steer_targe_position_error = 18 ;
  optional double steering_torque=19;
// time derivative of lateral error rate, in m/s^2
  optional double lateral_acceleration = 20;
  // second time derivative of lateral error rate, in m/s^3
  optional double lateral_jerk = 21;
  optional double ref_heading_rate = 22;
  optional double heading_rate = 23;

  // heading_acceleration, as known as yaw acceleration, is the time derivative
  // of heading rate,  in rad/s^2
  optional double ref_heading_acceleration = 24;
  optional double heading_acceleration = 25;
  optional double heading_error_acceleration = 26;

  // heading_jerk, as known as yaw jerk, is the second time derivative of
  // heading rate, in rad/s^3
  optional double ref_heading_jerk = 27;
  optional double heading_jerk = 28;
  optional double heading_error_jerk = 29;

  // modified lateral_error and heading_error with look-ahead or look-back
  // station, as the feedback term for control usage
  optional double lateral_error_feedback = 30;
  optional double heading_error_feedback = 31;

  // current planning target point
  // Augmented feedback control term in addition to LQR control
  optional double steer_angle_feedback_augment = 33;
}

message InputDebug {
  optional jmc_auto.common.Header localization_header = 1;
  optional jmc_auto.common.Header canbus_header = 2;
  optional jmc_auto.common.Header trajectory_header = 3;
  }

message Debug {
  optional SimpleLongitudinalDebug simple_lon_debug = 1;
  optional SimpleLateralDebug simple_lat_debug = 2;
  optional InputDebug input_debug = 3;
}
