// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/teshun.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modules/canbus/proto/teshun.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jmc_auto {
namespace canbus {
class Epb_status_0x152_152DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Epb_status_0x152_152> {
} _Epb_status_0x152_152_default_instance_;
class Gw_abs_0x211_211DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_abs_0x211_211> {
} _Gw_abs_0x211_211_default_instance_;
class Bcm_door_0x310_310DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bcm_door_0x310_310> {
} _Bcm_door_0x310_310_default_instance_;
class Gw_vcu_sts_0x218_218DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_sts_0x218_218> {
} _Gw_vcu_sts_0x218_218_default_instance_;
class Adu_controldrive_0x120_120DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Adu_controldrive_0x120_120> {
} _Adu_controldrive_0x120_120_default_instance_;
class Gw_vcu_control2_0x131_131DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_control2_0x131_131> {
} _Gw_vcu_control2_0x131_131_default_instance_;
class Gw_scu_shiftersts_0xc8_c8DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_scu_shiftersts_0xc8_c8> {
} _Gw_scu_shiftersts_0xc8_c8_default_instance_;
class Gw_vcu_drivests_0x10a_10aDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_drivests_0x10a_10a> {
} _Gw_vcu_drivests_0x10a_10a_default_instance_;
class Adu_controlbrake_0x110_110DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Adu_controlbrake_0x110_110> {
} _Adu_controlbrake_0x110_110_default_instance_;
class Eps2_status_0x112_112DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Eps2_status_0x112_112> {
} _Eps2_status_0x112_112_default_instance_;
class Gw_mcu_power_0x226_226DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_mcu_power_0x226_226> {
} _Gw_mcu_power_0x226_226_default_instance_;
class Adu_controleps2_0x100_100DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Adu_controleps2_0x100_100> {
} _Adu_controleps2_0x100_100_default_instance_;
class Gw_mcu_output_0x225_225DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_mcu_output_0x225_225> {
} _Gw_mcu_output_0x225_225_default_instance_;
class Gw_abs_sts_0x221_221DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_abs_sts_0x221_221> {
} _Gw_abs_sts_0x221_221_default_instance_;
class Ibc_status_0x122_122DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Ibc_status_0x122_122> {
} _Ibc_status_0x122_122_default_instance_;
class Gw_vcu_whltq_0x107_107DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_whltq_0x107_107> {
} _Gw_vcu_whltq_0x107_107_default_instance_;
class Bcm_bodysts_0x344_344DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bcm_bodysts_0x344_344> {
} _Bcm_bodysts_0x344_344_default_instance_;
class Gw_bms_display_0x323_323DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_bms_display_0x323_323> {
} _Gw_bms_display_0x323_323_default_instance_;
class Adu_bodycontrol_0x333_333DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Adu_bodycontrol_0x333_333> {
} _Adu_bodycontrol_0x333_333_default_instance_;
class Gw_bms_sts_0x181_181DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_bms_sts_0x181_181> {
} _Gw_bms_sts_0x181_181_default_instance_;
class Gw_vcu_control_0x185_185DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_control_0x185_185> {
} _Gw_vcu_control_0x185_185_default_instance_;
class Ibc_status2_0x124_124DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Ibc_status2_0x124_124> {
} _Ibc_status2_0x124_124_default_instance_;
class Gw_vcu_hmi_0x358_358DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gw_vcu_hmi_0x358_358> {
} _Gw_vcu_hmi_0x358_358_default_instance_;
class TeshunDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Teshun> {
} _Teshun_default_instance_;

namespace protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[151];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, checksum_0x152_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, rolling_counter_0x152_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, epb_faultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, epb_brakelampreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, epb_sysfaultstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, epb_parkingstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Epb_status_0x152_152, epb_switchstatus_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, checksum_0x211_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, rollingcounter_0x211_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdreristatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdrelestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdfrntristatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdfrntlestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdreri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdrele_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdfrntri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_0x211_211, abs_whlspdfrntle_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_checksum_0x310_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_rolling_counter_0x310_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_rearwipersts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_frontwipersts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_chargeplugsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_enginehoodsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_trunkdoorpreunlocksts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_antitheftsts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_lockunlockfeedback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorlockststrunk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorststrunk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorlockstsrearri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorlockstsrearle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorlockstsfrntri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorlockstsfrntle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorstsrearri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorstsrearle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorstsfrntri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_door_0x310_310, bcm_doorstsfrntle_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, checksum_0x218_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, rolling_counter_0x218_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_nlockrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_plockrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_vehicle_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_engaddfuel_rq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_fan_rq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_engstart_rq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_dcu_parkrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_actualgearlevelpositionvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_actualgearlevelposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_bms_chgstart_alw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_bms_hvonoff_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_vehfailgrade_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_running_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_bp_sleep_allowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_hvil_in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_hvil_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_bp_input_cooling_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_sts_0x218_218, vcu_motor_input_cooling_temp_),
  0,
  1,
  2,
  3,
  19,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, checksum_0x120_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, rolling_counter_0x120_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, adu_controtorque_rawflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, adu_targetdrving_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, adu_controtorque_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, adu_targetgear_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controldrive_0x120_120, adu_targetgear_enable_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, checksum_0x131_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, rolling_counter_0x131_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_sts_vcu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_brake_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_tractor_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_brkpedpos_meas_vcu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_pwt_mode_dash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_mcu_motor1_capdischarge_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_mcu_motor1_trq_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control2_0x131_131, vcu_mcu_motor1_spd_req_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  8,
  7,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, checksum_0xc8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, rolling_counter_0xc8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, scu_shifterlockstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, shifterlockstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, shifterpositionfailure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, shifterposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, shifterpositioninv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_scu_shiftersts_0xc8_c8, sys_sts_scu_),
  0,
  1,
  2,
  3,
  4,
  5,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, checksum_0x10a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, rolling_counter_0x10a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_vehicleerror_intervene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_torque_controlstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_torquedriver_intervene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_gearpos_controlstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_gearposdriver_intervene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_veh_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_axlespdst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_drivests_0x10a_10a, vcu_axlespd_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  9,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, ic_checksum_0x110_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, ic_rolling_counter_0x110_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_tgt_deceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_brktmcposition_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_parkrelease_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_controbrk_standstill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_controbrk_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controlbrake_0x110_110, adu_mastercylinderpressreq_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_controlstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_driver_intervene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_steerwheelrotspd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_steeringwheelang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_torsionbartorque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_sasfailurests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_torsionbartorquedir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Eps2_status_0x112_112, eps_torsionbartorquevalid_),
  0,
  1,
  3,
  2,
  5,
  4,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, checksum_0x226_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, rolling_counter_0x226_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_serialnum_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_tm04_trqmindyn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_tm04_trqmaxdyn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_maxtrq_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_mintrq_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_power_0x226_226, mcu_sys_sts_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, adu_100h_messagechecksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, adu_100h_messagecounter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, adu_ctrsteeringwheelanglespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, adu_controsteeringwheelangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_controleps2_0x100_100, adu_controepsenable_),
  0,
  1,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, checksum_0x225_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, rolling_counter_0x225_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, mcu_work_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, mcu_ctrmode_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, mcu_capacitor_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, mcu_spd_meas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_mcu_output_0x225_225, mcu_trq_meas_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, checksum_0x221_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, rolling_counter_0x221_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_whlmilgfrntlestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_whlmilgfrntristatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_vehspdlgtstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_vehspddirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_vehspdlgt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_ebdflgflt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_absflgflt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_absctrlactv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_whlmilgfrntri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_abs_sts_0x221_221, abs_whlmilgfrntle_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, checksum_0x122_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, rolling_counter_0x122_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_parkrelease_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_faultcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_brkpedalrawposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_mastercylinderpressvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_mastercylinderpress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_brakeactive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_brakereqavailabe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_brakepressurereqack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_controlstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_driver_intervene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status_0x122_122, ibc_systemstatus_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, checksum_0x107_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, rolling_counter_0x107_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_kickdown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_accpedalratioerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_accpedalratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_accrawpedalratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_brkpedalstasus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_minindicatedtorqwhl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_whltq_0x107_107, vcu_maxindicatedtorqwhl_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_brakelampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_rearfoglampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_frontfoglampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_washerstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_wiperstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_doorlockfeedback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_hornstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_highbeamlampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_lowbeamlampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_positionlampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_hazardlampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_rightturnlampstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bcm_bodysts_0x344_344, bcm_leftturnlampstatus_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, checksum_0x323_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, rolling_counter_0x323_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, bms_consumeq_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, bms_availableeq_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, bms_soh_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_display_0x323_323, bms_socdisplay_est_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_rearfoglampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_frontfoglampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_washercontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_wipercontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_doorcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_horncontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_highbeamlampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_lowbeamlampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_positionlampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_hazardlampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_rightturnlampcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Adu_bodycontrol_0x333_333, adu_leftturnlampcontrol_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, checksum_0x181_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, rolling_counter_0x181_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_err_lev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_idu_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_batbalance_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_socactual_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_packcur_meas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_chg_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_packvol_meas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_balance_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_packnum_est_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_hvdown_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_hvonoff_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_bms_sts_0x181_181, bms_sys_sts_),
  0,
  1,
  2,
  3,
  5,
  4,
  7,
  6,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, checksum_0x185_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, rolling_counter_0x185_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, vcu_ems_engoperationstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, vcu_maxchgpwr_alw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, vcu_maxdischgpwr_alw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, vcu_mcu_asd_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_control_0x185_185, vcu_mcu_motor1_ctrmode_req_),
  0,
  1,
  3,
  2,
  5,
  4,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, checksum_0x124_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, rolling_counter_0x124_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, ibc_decelerationvaild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, ibc_deceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, ibc_brktmcpositionvaild_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ibc_status2_0x124_124, ibc_brktmcposition_),
  0,
  1,
  3,
  2,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_checksum_0x358_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_rollingcounter_0x358_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vehiclehvstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, packheatcircuiterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, packheatstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, packcoolingcircuiterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, motorcoolingcircuiterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_batteryvoltageerror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_battervoltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_targcruisespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_cruisecontrolstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_driverstatus_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_drivemode_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_vehchg_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_tbox_veh_sts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_energyrecoverymode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_vehhvil_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_mot_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_packvoltoff_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_chggearlv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_packsys_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_drvsys_err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gw_vcu_hmi_0x358_358, vcu_icm_veh_err_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, epb_status_0x152_152_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_abs_0x211_211_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, bcm_door_0x310_310_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_sts_0x218_218_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, adu_controldrive_0x120_120_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_control2_0x131_131_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_scu_shiftersts_0xc8_c8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_drivests_0x10a_10a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, adu_controlbrake_0x110_110_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, eps2_status_0x112_112_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_mcu_power_0x226_226_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, adu_controleps2_0x100_100_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_mcu_output_0x225_225_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_abs_sts_0x221_221_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, ibc_status_0x122_122_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_whltq_0x107_107_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, bcm_bodysts_0x344_344_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_bms_display_0x323_323_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, adu_bodycontrol_0x333_333_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_bms_sts_0x181_181_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_control_0x185_185_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, ibc_status2_0x124_124_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Teshun, gw_vcu_hmi_0x358_358_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 12, sizeof(Epb_status_0x152_152)},
  { 19, 34, sizeof(Gw_abs_0x211_211)},
  { 44, 68, sizeof(Bcm_door_0x310_310)},
  { 87, 112, sizeof(Gw_vcu_sts_0x218_218)},
  { 132, 144, sizeof(Adu_controldrive_0x120_120)},
  { 151, 166, sizeof(Gw_vcu_control2_0x131_131)},
  { 176, 189, sizeof(Gw_scu_shiftersts_0xc8_c8)},
  { 197, 212, sizeof(Gw_vcu_drivests_0x10a_10a)},
  { 222, 235, sizeof(Adu_controlbrake_0x110_110)},
  { 243, 256, sizeof(Eps2_status_0x112_112)},
  { 264, 277, sizeof(Gw_mcu_power_0x226_226)},
  { 285, 295, sizeof(Adu_controleps2_0x100_100)},
  { 300, 312, sizeof(Gw_mcu_output_0x225_225)},
  { 319, 336, sizeof(Gw_abs_sts_0x221_221)},
  { 348, 366, sizeof(Ibc_status_0x122_122)},
  { 379, 393, sizeof(Gw_vcu_whltq_0x107_107)},
  { 402, 420, sizeof(Bcm_bodysts_0x344_344)},
  { 433, 444, sizeof(Gw_bms_display_0x323_323)},
  { 450, 467, sizeof(Adu_bodycontrol_0x333_333)},
  { 479, 498, sizeof(Gw_bms_sts_0x181_181)},
  { 512, 524, sizeof(Gw_vcu_control_0x185_185)},
  { 531, 542, sizeof(Ibc_status2_0x124_124)},
  { 548, 576, sizeof(Gw_vcu_hmi_0x358_358)},
  { 599, 627, sizeof(Teshun)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Epb_status_0x152_152_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_abs_0x211_211_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bcm_door_0x310_310_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_sts_0x218_218_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Adu_controldrive_0x120_120_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_control2_0x131_131_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_scu_shiftersts_0xc8_c8_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_drivests_0x10a_10a_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Adu_controlbrake_0x110_110_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Eps2_status_0x112_112_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_mcu_power_0x226_226_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Adu_controleps2_0x100_100_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_mcu_output_0x225_225_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_abs_sts_0x221_221_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Ibc_status_0x122_122_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_whltq_0x107_107_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bcm_bodysts_0x344_344_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_bms_display_0x323_323_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Adu_bodycontrol_0x333_333_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_bms_sts_0x181_181_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_control_0x185_185_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Ibc_status2_0x124_124_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gw_vcu_hmi_0x358_358_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Teshun_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modules/canbus/proto/teshun.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

}  // namespace

void TableStruct::Shutdown() {
  _Epb_status_0x152_152_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Gw_abs_0x211_211_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Bcm_door_0x310_310_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Gw_vcu_sts_0x218_218_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Adu_controldrive_0x120_120_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Gw_vcu_control2_0x131_131_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Gw_scu_shiftersts_0xc8_c8_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Gw_vcu_drivests_0x10a_10a_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Adu_controlbrake_0x110_110_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Eps2_status_0x112_112_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _Gw_mcu_power_0x226_226_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _Adu_controleps2_0x100_100_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Gw_mcu_output_0x225_225_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _Gw_abs_sts_0x221_221_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Ibc_status_0x122_122_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _Gw_vcu_whltq_0x107_107_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Bcm_bodysts_0x344_344_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _Gw_bms_display_0x323_323_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _Adu_bodycontrol_0x333_333_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _Gw_bms_sts_0x181_181_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _Gw_vcu_control_0x185_185_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _Ibc_status2_0x124_124_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _Gw_vcu_hmi_0x358_358_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _Teshun_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Epb_status_0x152_152_default_instance_.DefaultConstruct();
  _Gw_abs_0x211_211_default_instance_.DefaultConstruct();
  _Bcm_door_0x310_310_default_instance_.DefaultConstruct();
  _Gw_vcu_sts_0x218_218_default_instance_.DefaultConstruct();
  _Adu_controldrive_0x120_120_default_instance_.DefaultConstruct();
  _Gw_vcu_control2_0x131_131_default_instance_.DefaultConstruct();
  _Gw_scu_shiftersts_0xc8_c8_default_instance_.DefaultConstruct();
  _Gw_vcu_drivests_0x10a_10a_default_instance_.DefaultConstruct();
  _Adu_controlbrake_0x110_110_default_instance_.DefaultConstruct();
  _Eps2_status_0x112_112_default_instance_.DefaultConstruct();
  _Gw_mcu_power_0x226_226_default_instance_.DefaultConstruct();
  _Adu_controleps2_0x100_100_default_instance_.DefaultConstruct();
  _Gw_mcu_output_0x225_225_default_instance_.DefaultConstruct();
  _Gw_abs_sts_0x221_221_default_instance_.DefaultConstruct();
  _Ibc_status_0x122_122_default_instance_.DefaultConstruct();
  _Gw_vcu_whltq_0x107_107_default_instance_.DefaultConstruct();
  _Bcm_bodysts_0x344_344_default_instance_.DefaultConstruct();
  _Gw_bms_display_0x323_323_default_instance_.DefaultConstruct();
  _Adu_bodycontrol_0x333_333_default_instance_.DefaultConstruct();
  _Gw_bms_sts_0x181_181_default_instance_.DefaultConstruct();
  _Gw_vcu_control_0x185_185_default_instance_.DefaultConstruct();
  _Ibc_status2_0x124_124_default_instance_.DefaultConstruct();
  _Gw_vcu_hmi_0x358_358_default_instance_.DefaultConstruct();
  _Teshun_default_instance_.DefaultConstruct();
  _Teshun_default_instance_.get_mutable()->epb_status_0x152_152_ = const_cast< ::jmc_auto::canbus::Epb_status_0x152_152*>(
      ::jmc_auto::canbus::Epb_status_0x152_152::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_abs_0x211_211_ = const_cast< ::jmc_auto::canbus::Gw_abs_0x211_211*>(
      ::jmc_auto::canbus::Gw_abs_0x211_211::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->bcm_door_0x310_310_ = const_cast< ::jmc_auto::canbus::Bcm_door_0x310_310*>(
      ::jmc_auto::canbus::Bcm_door_0x310_310::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_sts_0x218_218_ = const_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218*>(
      ::jmc_auto::canbus::Gw_vcu_sts_0x218_218::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->adu_controldrive_0x120_120_ = const_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120*>(
      ::jmc_auto::canbus::Adu_controldrive_0x120_120::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_control2_0x131_131_ = const_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131*>(
      ::jmc_auto::canbus::Gw_vcu_control2_0x131_131::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_scu_shiftersts_0xc8_c8_ = const_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8*>(
      ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_drivests_0x10a_10a_ = const_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a*>(
      ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->adu_controlbrake_0x110_110_ = const_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110*>(
      ::jmc_auto::canbus::Adu_controlbrake_0x110_110::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->eps2_status_0x112_112_ = const_cast< ::jmc_auto::canbus::Eps2_status_0x112_112*>(
      ::jmc_auto::canbus::Eps2_status_0x112_112::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_mcu_power_0x226_226_ = const_cast< ::jmc_auto::canbus::Gw_mcu_power_0x226_226*>(
      ::jmc_auto::canbus::Gw_mcu_power_0x226_226::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->adu_controleps2_0x100_100_ = const_cast< ::jmc_auto::canbus::Adu_controleps2_0x100_100*>(
      ::jmc_auto::canbus::Adu_controleps2_0x100_100::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_mcu_output_0x225_225_ = const_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225*>(
      ::jmc_auto::canbus::Gw_mcu_output_0x225_225::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_abs_sts_0x221_221_ = const_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221*>(
      ::jmc_auto::canbus::Gw_abs_sts_0x221_221::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->ibc_status_0x122_122_ = const_cast< ::jmc_auto::canbus::Ibc_status_0x122_122*>(
      ::jmc_auto::canbus::Ibc_status_0x122_122::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_whltq_0x107_107_ = const_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107*>(
      ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->bcm_bodysts_0x344_344_ = const_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344*>(
      ::jmc_auto::canbus::Bcm_bodysts_0x344_344::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_bms_display_0x323_323_ = const_cast< ::jmc_auto::canbus::Gw_bms_display_0x323_323*>(
      ::jmc_auto::canbus::Gw_bms_display_0x323_323::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->adu_bodycontrol_0x333_333_ = const_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333*>(
      ::jmc_auto::canbus::Adu_bodycontrol_0x333_333::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_bms_sts_0x181_181_ = const_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181*>(
      ::jmc_auto::canbus::Gw_bms_sts_0x181_181::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_control_0x185_185_ = const_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185*>(
      ::jmc_auto::canbus::Gw_vcu_control_0x185_185::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->ibc_status2_0x124_124_ = const_cast< ::jmc_auto::canbus::Ibc_status2_0x124_124*>(
      ::jmc_auto::canbus::Ibc_status2_0x124_124::internal_default_instance());
  _Teshun_default_instance_.get_mutable()->gw_vcu_hmi_0x358_358_ = const_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358*>(
      ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n!modules/canbus/proto/teshun.proto\022\017jmc"
      "_auto.canbus\"\255\010\n\024Epb_status_0x152_152\022\026\n"
      "\016checksum_0x152\030\001 \001(\005\022\035\n\025rolling_counter"
      "_0x152\030\002 \001(\005\022\025\n\repb_faultcode\030\003 \001(\005\022T\n\020e"
      "pb_brakelampreq\030\004 \001(\0162:.jmc_auto.canbus."
      "Epb_status_0x152_152.Epb_brakelampreqTyp"
      "e\022X\n\022epb_sysfaultstatus\030\005 \001(\0162<.jmc_auto"
      ".canbus.Epb_status_0x152_152.Epb_sysfaul"
      "tstatusType\022V\n\021epb_parkingstatus\030\006 \001(\0162;"
      ".jmc_auto.canbus.Epb_status_0x152_152.Ep"
      "b_parkingstatusType\022T\n\020epb_switchstatus\030"
      "\007 \001(\0162:.jmc_auto.canbus.Epb_status_0x152"
      "_152.Epb_switchstatusType\"_\n\024Epb_brakela"
      "mpreqType\022#\n\037EPB_BRAKELAMPREQ_BRAKE_LAMP"
      "_OFF\020\000\022\"\n\036EPB_BRAKELAMPREQ_BRAKE_LAMP_ON"
      "\020\001\"\227\001\n\026Epb_sysfaultstatusType\022\037\n\033EPB_SYS"
      "FAULTSTATUS_NO_FAULT\020\000\022\036\n\032EPB_SYSFAULTST"
      "ATUS_WARNING\020\001\022\034\n\030EPB_SYSFAULTSTATUS_FAU"
      "LT\020\002\022\036\n\032EPB_SYSFAULTSTATUS_RESEVED\020\003\"\276\001\n"
      "\025Epb_parkingstatusType\022\036\n\032EPB_PARKINGSTA"
      "TUS_RELEASED\020\000\022%\n!EPB_PARKINGSTATUS_RELE"
      "ASE_ONGOING\020\001\022\"\n\036EPB_PARKINGSTATUS_PARK_"
      "ONGOING\020\002\022\034\n\030EPB_PARKINGSTATUS_PARKED\020\003\022"
      "\034\n\030EPB_PARKINGSTATUS_UNKOWN\020\004\"\254\001\n\024Epb_sw"
      "itchstatusType\022(\n$EPB_SWITCHSTATUS_NO_AC"
      "TION_ON_SWITCH\020\000\022&\n\"EPB_SWITCHSTATUS_SWI"
      "TCH_TO_RELEASE\020\001\022#\n\037EPB_SWITCHSTATUS_SWI"
      "TCH_TO_PARK\020\002\022\035\n\031EPB_SWITCHSTATUS_RESERV"
      "ED\020\003\"\240\007\n\020Gw_abs_0x211_211\022\026\n\016checksum_0x"
      "211\030\001 \001(\005\022\034\n\024rollingcounter_0x211\030\002 \001(\005\022"
      "X\n\024abs_whlspdreristatus\030\003 \001(\0162:.jmc_auto"
      ".canbus.Gw_abs_0x211_211.Abs_whlspdreris"
      "tatusType\022X\n\024abs_whlspdrelestatus\030\004 \001(\0162"
      ":.jmc_auto.canbus.Gw_abs_0x211_211.Abs_w"
      "hlspdrelestatusType\022\\\n\026abs_whlspdfrntris"
      "tatus\030\005 \001(\0162<.jmc_auto.canbus.Gw_abs_0x2"
      "11_211.Abs_whlspdfrntristatusType\022\\\n\026abs"
      "_whlspdfrntlestatus\030\006 \001(\0162<.jmc_auto.can"
      "bus.Gw_abs_0x211_211.Abs_whlspdfrntlesta"
      "tusType\022\026\n\016abs_whlspdreri\030\007 \001(\001\022\026\n\016abs_w"
      "hlspdrele\030\010 \001(\001\022\030\n\020abs_whlspdfrntri\030\t \001("
      "\001\022\030\n\020abs_whlspdfrntle\030\n \001(\001\"\\\n\030Abs_whlsp"
      "dreristatusType\022\036\n\032ABS_WHLSPDRERISTATUS_"
      "VALID\020\000\022 \n\034ABS_WHLSPDRERISTATUS_INVALID\020"
      "\001\"\\\n\030Abs_whlspdrelestatusType\022\036\n\032ABS_WHL"
      "SPDRELESTATUS_VALID\020\000\022 \n\034ABS_WHLSPDRELES"
      "TATUS_INVALID\020\001\"b\n\032Abs_whlspdfrntristatu"
      "sType\022 \n\034ABS_WHLSPDFRNTRISTATUS_VALID\020\000\022"
      "\"\n\036ABS_WHLSPDFRNTRISTATUS_INVALID\020\001\"b\n\032A"
      "bs_whlspdfrntlestatusType\022 \n\034ABS_WHLSPDF"
      "RNTLESTATUS_VALID\020\000\022\"\n\036ABS_WHLSPDFRNTLES"
      "TATUS_INVALID\020\001\"\227\'\n\022Bcm_door_0x310_310\022\032"
      "\n\022bcm_checksum_0x310\030\001 \001(\005\022!\n\031bcm_rollin"
      "g_counter_0x310\030\002 \001(\005\022R\n\020bcm_rearwiperst"
      "s\030\003 \001(\01628.jmc_auto.canbus.Bcm_door_0x310"
      "_310.Bcm_rearwiperstsType\022T\n\021bcm_frontwi"
      "persts\030\004 \001(\01629.jmc_auto.canbus.Bcm_door_"
      "0x310_310.Bcm_frontwiperstsType\022T\n\021bcm_c"
      "hargeplugsts\030\005 \001(\01629.jmc_auto.canbus.Bcm"
      "_door_0x310_310.Bcm_chargeplugstsType\022T\n"
      "\021bcm_enginehoodsts\030\006 \001(\01629.jmc_auto.canb"
      "us.Bcm_door_0x310_310.Bcm_enginehoodstsT"
      "ype\022d\n\031bcm_trunkdoorpreunlocksts\030\007 \001(\0162A"
      ".jmc_auto.canbus.Bcm_door_0x310_310.Bcm_"
      "trunkdoorpreunlockstsType\022R\n\020bcm_antithe"
      "ftsts\030\010 \001(\01628.jmc_auto.canbus.Bcm_door_0"
      "x310_310.Bcm_antitheftstsType\022^\n\026bcm_loc"
      "kunlockfeedback\030\t \001(\0162>.jmc_auto.canbus."
      "Bcm_door_0x310_310.Bcm_lockunlockfeedbac"
      "kType\022Z\n\024bcm_doorlockststrunk\030\n \001(\0162<.jm"
      "c_auto.canbus.Bcm_door_0x310_310.Bcm_doo"
      "rlockststrunkType\022R\n\020bcm_doorststrunk\030\013 "
      "\001(\01628.jmc_auto.canbus.Bcm_door_0x310_310"
      ".Bcm_doorststrunkType\022\\\n\025bcm_doorlocksts"
      "rearri\030\014 \001(\0162=.jmc_auto.canbus.Bcm_door_"
      "0x310_310.Bcm_doorlockstsrearriType\022\\\n\025b"
      "cm_doorlockstsrearle\030\r \001(\0162=.jmc_auto.ca"
      "nbus.Bcm_door_0x310_310.Bcm_doorlockstsr"
      "earleType\022\\\n\025bcm_doorlockstsfrntri\030\016 \001(\016"
      "2=.jmc_auto.canbus.Bcm_door_0x310_310.Bc"
      "m_doorlockstsfrntriType\022\\\n\025bcm_doorlocks"
      "tsfrntle\030\017 \001(\0162=.jmc_auto.canbus.Bcm_doo"
      "r_0x310_310.Bcm_doorlockstsfrntleType\022T\n"
      "\021bcm_doorstsrearri\030\020 \001(\01629.jmc_auto.canb"
      "us.Bcm_door_0x310_310.Bcm_doorstsrearriT"
      "ype\022T\n\021bcm_doorstsrearle\030\021 \001(\01629.jmc_aut"
      "o.canbus.Bcm_door_0x310_310.Bcm_doorstsr"
      "earleType\022T\n\021bcm_doorstsfrntri\030\022 \001(\01629.j"
      "mc_auto.canbus.Bcm_door_0x310_310.Bcm_do"
      "orstsfrntriType\022T\n\021bcm_doorstsfrntle\030\023 \001"
      "(\01629.jmc_auto.canbus.Bcm_door_0x310_310."
      "Bcm_doorstsfrntleType\"\206\001\n\024Bcm_rearwipers"
      "tsType\022\034\n\030BCM_REARWIPERSTS_NO_USED\020\000\022\030\n\024"
      "BCM_REARWIPERSTS_OFF\020\001\022\027\n\023BCM_REARWIPERS"
      "TS_ON\020\002\022\035\n\031BCM_REARWIPERSTS_RESERVED\020\003\"\210"
      "\001\n\025Bcm_frontwiperstsType\022\035\n\031BCM_FRONTWIP"
      "ERSTS_NO_USED\020\000\022\031\n\025BCM_FRONTWIPERSTS_OFF"
      "\020\001\022\031\n\025BCM_FRONTWIPERSTS_LOW\020\002\022\032\n\026BCM_FRO"
      "NTWIPERSTS_HIGH\020\003\"\215\001\n\025Bcm_chargeplugstsT"
      "ype\022\035\n\031BCM_CHARGEPLUGSTS_NO_USED\020\000\022\034\n\030BC"
      "M_CHARGEPLUGSTS_CLOSED\020\001\022\032\n\026BCM_CHARGEPL"
      "UGSTS_OPEN\020\002\022\033\n\027BCM_CHARGEPLUGSTS_FAULT\020"
      "\003\"\215\001\n\025Bcm_enginehoodstsType\022\035\n\031BCM_ENGIN"
      "EHOODSTS_NO_USED\020\000\022\034\n\030BCM_ENGINEHOODSTS_"
      "CLOSED\020\001\022\032\n\026BCM_ENGINEHOODSTS_OPEN\020\002\022\033\n\027"
      "BCM_ENGINEHOODSTS_FAULT\020\003\"{\n\035Bcm_trunkdo"
      "orpreunlockstsType\022/\n+BCM_TRUNKDOORPREUN"
      "LOCKSTS_NO_USED_NO_ACTION\020\000\022)\n%BCM_TRUNK"
      "DOORPREUNLOCKSTS_PREUNLOCKED\020\001\"\263\001\n\024Bcm_a"
      "ntitheftstsType\022\'\n#BCM_ANTITHEFTSTS_RELI"
      "EVE_ANTI_THEFT\020\000\022\037\n\033BCM_ANTITHEFTSTS_ANT"
      "I_THEFT\020\001\022$\n BCM_ANTITHEFTSTS_ANTI_THEFT"
      "_PASS\020\002\022+\n\'BCM_ANTITHEFTSTS_ANTI_THEFT_F"
      "AULT_ALARM\020\003\"\334\007\n\032Bcm_lockunlockfeedbackT"
      "ype\0220\n,BCM_LOCKUNLOCKFEEDBACK_NO_LOCK_UN"
      "LOCK_ACTION\020\000\022\"\n\036BCM_LOCKUNLOCKFEEDBACK_"
      "PE_LOCK\020\001\022#\n\037BCM_LOCKUNLOCKFEEDBACK_RKE_"
      "LOCK\020\002\022-\n)BCM_LOCKUNLOCKFEEDBACK_LEAVE_V"
      "EHICLE_LOCK\020\003\0222\n.BCM_LOCKUNLOCKFEEDBACK_"
      "MASTER_LOCK_D6_D8_CB_F8\020\004\022>\n:BCM_LOCKUNL"
      "OCKFEEDBACK_FINGER_LOCK_BB_FA_B3_D7_C9_C"
      "F_CB_F8\020\005\022=\n9BCM_LOCKUNLOCKFEEDBACK_RKE_"
      "30S_AUTOLOCK_BF_D8_D7_AF_BB_C0\020\006\022*\n&BCM_"
      "LOCKUNLOCKFEEDBACK_PE_30S_AUTOLOCK\020\007\0227\n3"
      "BCM_LOCKUNLOCKFEEDBACK_NEAR_TO_VEHICLE_3"
      "0S_AUTOLOCK\020\010\022)\n%BCM_LOCKUNLOCKFEEDBACK_"
      "ANY_OTHER_LOCK\020\017\022$\n BCM_LOCKUNLOCKFEEDBA"
      "CK_PE_UNLOCK\020\021\022%\n!BCM_LOCKUNLOCKFEEDBACK"
      "_RKE_UNLOCK\020\022\0221\n-BCM_LOCKUNLOCKFEEDBACK_"
      "NEAR_TO_VEHICLE_UNLOCK\020\023\0224\n0BCM_LOCKUNLO"
      "CKFEEDBACK_MASTER_UNLOCK_D6_E2_CB_F8\020\024\022:"
      "\n6BCM_LOCKUNLOCKFEEDBACK_FINGER_UNLOCK_B"
      "B_FA_B3_E2_CB_F8\020\025\0228\n4BCM_LOCKUNLOCKFEED"
      "BACK_CRASHUNLOCK_C5_F6_BD_E2_CB_F8\020\026\022=\n9"
      "BCM_LOCKUNLOCKFEEDBACK_KEYREMOVALUNLOCK_"
      "B0_CE_B3_E2_CB_F8\020\027\0229\n5BCM_LOCKUNLOCKFEE"
      "DBACK_ENGOFFUNLOCK_BB_F0_BD_E2_CB_F8\020\030\022+"
      "\n\'BCM_LOCKUNLOCKFEEDBACK_ANY_OTHER_UNLOC"
      "K\020\037\"\240\001\n\030Bcm_doorlockststrunkType\022 \n\034BCM_"
      "DOORLOCKSTSTRUNK_NO_USED\020\000\022\037\n\033BCM_DOORLO"
      "CKSTSTRUNK_LOCKED\020\001\022!\n\035BCM_DOORLOCKSTSTR"
      "UNK_UNLOCKED\020\002\022\036\n\032BCM_DOORLOCKSTSTRUNK_F"
      "AULT\020\003\"\210\001\n\024Bcm_doorststrunkType\022\034\n\030BCM_D"
      "OORSTSTRUNK_NO_USED\020\000\022\033\n\027BCM_DOORSTSTRUN"
      "K_CLOSED\020\001\022\031\n\025BCM_DOORSTSTRUNK_OPEN\020\002\022\032\n"
      "\026BCM_DOORSTSTRUNK_FAULT\020\003\"\245\001\n\031Bcm_doorlo"
      "ckstsrearriType\022!\n\035BCM_DOORLOCKSTSREARRI"
      "_NO_USED\020\000\022 \n\034BCM_DOORLOCKSTSREARRI_LOCK"
      "ED\020\001\022\"\n\036BCM_DOORLOCKSTSREARRI_UNLOCKED\020\002"
      "\022\037\n\033BCM_DOORLOCKSTSREARRI_FAULT\020\003\"\245\001\n\031Bc"
      "m_doorlockstsrearleType\022!\n\035BCM_DOORLOCKS"
      "TSREARLE_NO_USED\020\000\022 \n\034BCM_DOORLOCKSTSREA"
      "RLE_LOCKED\020\001\022\"\n\036BCM_DOORLOCKSTSREARLE_UN"
      "LOCKED\020\002\022\037\n\033BCM_DOORLOCKSTSREARLE_FAULT\020"
      "\003\"\245\001\n\031Bcm_doorlockstsfrntriType\022!\n\035BCM_D"
      "OORLOCKSTSFRNTRI_NO_USED\020\000\022 \n\034BCM_DOORLO"
      "CKSTSFRNTRI_LOCKED\020\001\022\"\n\036BCM_DOORLOCKSTSF"
      "RNTRI_UNLOCKED\020\002\022\037\n\033BCM_DOORLOCKSTSFRNTR"
      "I_FAULT\020\003\"\245\001\n\031Bcm_doorlockstsfrntleType\022"
      "!\n\035BCM_DOORLOCKSTSFRNTLE_NO_USED\020\000\022 \n\034BC"
      "M_DOORLOCKSTSFRNTLE_LOCKED\020\001\022\"\n\036BCM_DOOR"
      "LOCKSTSFRNTLE_UNLOCKED\020\002\022\037\n\033BCM_DOORLOCK"
      "STSFRNTLE_FAULT\020\003\"\215\001\n\025Bcm_doorstsrearriT"
      "ype\022\035\n\031BCM_DOORSTSREARRI_NO_USED\020\000\022\034\n\030BC"
      "M_DOORSTSREARRI_CLOSED\020\001\022\032\n\026BCM_DOORSTSR"
      "EARRI_OPEN\020\002\022\033\n\027BCM_DOORSTSREARRI_FAULT\020"
      "\003\"\215\001\n\025Bcm_doorstsrearleType\022\035\n\031BCM_DOORS"
      "TSREARLE_NO_USED\020\000\022\034\n\030BCM_DOORSTSREARLE_"
      "CLOSED\020\001\022\032\n\026BCM_DOORSTSREARLE_OPEN\020\002\022\033\n\027"
      "BCM_DOORSTSREARLE_FAULT\020\003\"\215\001\n\025Bcm_doorst"
      "sfrntriType\022\035\n\031BCM_DOORSTSFRNTRI_NO_USED"
      "\020\000\022\034\n\030BCM_DOORSTSFRNTRI_CLOSED\020\001\022\032\n\026BCM_"
      "DOORSTSFRNTRI_OPEN\020\002\022\033\n\027BCM_DOORSTSFRNTR"
      "I_FAULT\020\003\"\215\001\n\025Bcm_doorstsfrntleType\022\035\n\031B"
      "CM_DOORSTSFRNTLE_NO_USED\020\000\022\034\n\030BCM_DOORST"
      "SFRNTLE_CLOSED\020\001\022\032\n\026BCM_DOORSTSFRNTLE_OP"
      "EN\020\002\022\033\n\027BCM_DOORSTSFRNTLE_FAULT\020\003\"\365\034\n\024Gw"
      "_vcu_sts_0x218_218\022\026\n\016checksum_0x218\030\001 \001"
      "(\005\022\035\n\025rolling_counter_0x218\030\002 \001(\005\022T\n\020vcu"
      "_nlockrequest\030\003 \001(\0162:.jmc_auto.canbus.Gw"
      "_vcu_sts_0x218_218.Vcu_nlockrequestType\022"
      "T\n\020vcu_plockrequest\030\004 \001(\0162:.jmc_auto.can"
      "bus.Gw_vcu_sts_0x218_218.Vcu_plockreques"
      "tType\022T\n\020vcu_vehicle_mode\030\005 \001(\0162:.jmc_au"
      "to.canbus.Gw_vcu_sts_0x218_218.Vcu_vehic"
      "le_modeType\022V\n\021vcu_engaddfuel_rq\030\006 \001(\0162;"
      ".jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vc"
      "u_engaddfuel_rqType\022H\n\nvcu_fan_rq\030\007 \001(\0162"
      "4.jmc_auto.canbus.Gw_vcu_sts_0x218_218.V"
      "cu_fan_rqType\022R\n\017vcu_engstart_rq\030\010 \001(\01629"
      ".jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vc"
      "u_engstart_rqType\022Z\n\023vcu_dcu_parkrequest"
      "\030\t \001(\0162=.jmc_auto.canbus.Gw_vcu_sts_0x21"
      "8_218.Vcu_dcu_parkrequestType\022t\n vcu_act"
      "ualgearlevelpositionvalid\030\n \001(\0162J.jmc_au"
      "to.canbus.Gw_vcu_sts_0x218_218.Vcu_actua"
      "lgearlevelpositionvalidType\022j\n\033vcu_actua"
      "lgearlevelposition\030\013 \001(\0162E.jmc_auto.canb"
      "us.Gw_vcu_sts_0x218_218.Vcu_actualgearle"
      "velpositionType\022\\\n\024vcu_bms_chgstart_alw\030"
      "\014 \001(\0162>.jmc_auto.canbus.Gw_vcu_sts_0x218"
      "_218.Vcu_bms_chgstart_alwType\022Z\n\023vcu_bms"
      "_hvonoff_req\030\r \001(\0162=.jmc_auto.canbus.Gw_"
      "vcu_sts_0x218_218.Vcu_bms_hvonoff_reqTyp"
      "e\022\\\n\024vcu_vehfailgrade_err\030\016 \001(\0162>.jmc_au"
      "to.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfa"
      "ilgrade_errType\022T\n\020vcu_running_mode\030\017 \001("
      "\0162:.jmc_auto.canbus.Gw_vcu_sts_0x218_218"
      ".Vcu_running_modeType\022\\\n\024vcu_bp_sleep_al"
      "lowed\030\020 \001(\0162>.jmc_auto.canbus.Gw_vcu_sts"
      "_0x218_218.Vcu_bp_sleep_allowedType\022J\n\013v"
      "cu_hvil_in\030\021 \001(\01625.jmc_auto.canbus.Gw_vc"
      "u_sts_0x218_218.Vcu_hvil_inType\022L\n\014vcu_h"
      "vil_out\030\022 \001(\01626.jmc_auto.canbus.Gw_vcu_s"
      "ts_0x218_218.Vcu_hvil_outType\022!\n\031vcu_bp_"
      "input_cooling_temp\030\023 \001(\005\022$\n\034vcu_motor_in"
      "put_cooling_temp\030\024 \001(\005\"\211\001\n\024Vcu_nlockrequ"
      "estType\022\033\n\027VCU_NLOCKREQUEST_NO_USE\020\000\022\031\n\025"
      "VCU_NLOCKREQUEST_LOCK\020\001\022\033\n\027VCU_NLOCKREQU"
      "EST_UNLOCK\020\002\022\034\n\030VCU_NLOCKREQUEST_INVALID"
      "\020\003\"\211\001\n\024Vcu_plockrequestType\022\033\n\027VCU_PLOCK"
      "REQUEST_NO_USE\020\000\022\031\n\025VCU_PLOCKREQUEST_LOC"
      "K\020\001\022\033\n\027VCU_PLOCKREQUEST_UNLOCK\020\002\022\034\n\030VCU_"
      "PLOCKREQUEST_INVALID\020\003\"\312\002\n\024Vcu_vehicle_m"
      "odeType\022(\n$VCU_VEHICLE_MODE_STANDBY_IG_O"
      "FF_MODE\020\001\022\'\n#VCU_VEHICLE_MODE_VEHICLE_RE"
      "SET_MODE\020\002\022\'\n#VCU_VEHICLE_MODE_HV_ACTIVA"
      "TION_MODE\020\003\022!\n\035VCU_VEHICLE_MODE_DRIVING_"
      "MODE\020\004\022(\n$VCU_VEHICLE_MODE_HV_TERMINATIO"
      "N_MODE\020\005\022\"\n\036VCU_VEHICLE_MODE_CHARGING_MO"
      "DE\020\006\022\035\n\031VCU_VEHICLE_MODE_RESERVED\020\007\022&\n\"V"
      "CU_VEHICLE_MODE_EMER_DRIVING_MODE\020\010\"N\n\025V"
      "cu_engaddfuel_rqType\022\033\n\027VCU_ENGADDFUEL_R"
      "Q_NO_RQ\020\000\022\030\n\024VCU_ENGADDFUEL_RQ_RQ\020\001\"]\n\016V"
      "cu_fan_rqType\022\024\n\020VCU_FAN_RQ_NO_RQ\020\000\022\031\n\025V"
      "CU_FAN_RQ_FAN_LOW_RQ\020\001\022\032\n\026VCU_FAN_RQ_FAN"
      "_HIGH_RQ\020\004\"H\n\023Vcu_engstart_rqType\022\031\n\025VCU"
      "_ENGSTART_RQ_NO_RQ\020\000\022\026\n\022VCU_ENGSTART_RQ_"
      "RQ\020\001\"\225\001\n\027Vcu_dcu_parkrequestType\022\033\n\027VCU_"
      "DCU_PARKREQUEST_OFF\020\000\022\034\n\030VCU_DCU_PARKREQ"
      "UEST_PARK\020\001\022\036\n\032VCU_DCU_PARKREQUEST_UNPAR"
      "K\020\002\022\037\n\033VCU_DCU_PARKREQUEST_INVALID\020\003\"\200\001\n"
      "$Vcu_actualgearlevelpositionvalidType\022*\n"
      "&VCU_ACTUALGEARLEVELPOSITIONVALID_VALID\020"
      "\000\022,\n(VCU_ACTUALGEARLEVELPOSITIONVALID_IN"
      "VALID\020\001\"\232\002\n\037Vcu_actualgearlevelpositionT"
      "ype\022\'\n#VCU_ACTUALGEARLEVELPOSITION_INITI"
      "AL\020\000\022&\n\"VCU_ACTUALGEARLEVELPOSITION_P_PA"
      "RK\020\001\022)\n%VCU_ACTUALGEARLEVELPOSITION_R_RE"
      "VERSE\020\002\022)\n%VCU_ACTUALGEARLEVELPOSITION_N"
      "_NEUTRAL\020\003\022\'\n#VCU_ACTUALGEARLEVELPOSITIO"
      "N_D_DRIVE\020\004\022\'\n#VCU_ACTUALGEARLEVELPOSITI"
      "ON_INVALID\020\005\"[\n\030Vcu_bms_chgstart_alwType"
      "\022\037\n\033VCU_BMS_CHGSTART_ALW_FORBID\020\000\022\036\n\032VCU"
      "_BMS_CHGSTART_ALW_ALLOW\020\001\"X\n\027Vcu_bms_hvo"
      "noff_reqType\022\036\n\032VCU_BMS_HVONOFF_REQ_FORB"
      "ID\020\000\022\035\n\031VCU_BMS_HVONOFF_REQ_ALLOW\020\001\"\236\001\n\030"
      "Vcu_vehfailgrade_errType\022\037\n\033VCU_VEHFAILG"
      "RADE_ERR_NORMAL\020\000\022\037\n\033VCU_VEHFAILGRADE_ER"
      "R_LEVEL1\020\001\022\037\n\033VCU_VEHFAILGRADE_ERR_LEVEL"
      "2\020\002\022\037\n\033VCU_VEHFAILGRADE_ERR_LEVEL3\020\003\"t\n\024"
      "Vcu_running_modeType\022\034\n\030VCU_RUNNING_MODE"
      "_STANDBY\020\000\022\034\n\030VCU_RUNNING_MODE_EV_MODE\020\001"
      "\022 \n\034VCU_RUNNING_MODE_HYBIRD_MODE\020\002\"b\n\030Vc"
      "u_bp_sleep_allowedType\022$\n VCU_BP_SLEEP_A"
      "LLOWED_NOT_ALLOWED\020\000\022 \n\034VCU_BP_SLEEP_ALL"
      "OWED_ALLOWED\020\001\":\n\017Vcu_hvil_inType\022\023\n\017VCU"
      "_HVIL_IN_OFF\020\000\022\022\n\016VCU_HVIL_IN_ON\020\001\"=\n\020Vc"
      "u_hvil_outType\022\024\n\020VCU_HVIL_OUT_OFF\020\000\022\023\n\017"
      "VCU_HVIL_OUT_ON\020\001\"\324\010\n\032Adu_controldrive_0"
      "x120_120\022\026\n\016checksum_0x120\030\001 \001(\005\022\035\n\025roll"
      "ing_counter_0x120\030\002 \001(\005\022j\n\030adu_controtor"
      "que_rawflag\030\003 \001(\0162H.jmc_auto.canbus.Adu_"
      "controldrive_0x120_120.Adu_controtorque_"
      "rawflagType\022\037\n\027adu_targetdrving_torque\030\004"
      " \001(\005\022h\n\027adu_controtorque_enable\030\005 \001(\0162G."
      "jmc_auto.canbus.Adu_controldrive_0x120_1"
      "20.Adu_controtorque_enableType\022h\n\027adu_ta"
      "rgetgear_position\030\006 \001(\0162G.jmc_auto.canbu"
      "s.Adu_controldrive_0x120_120.Adu_targetg"
      "ear_positionType\022d\n\025adu_targetgear_enabl"
      "e\030\007 \001(\0162E.jmc_auto.canbus.Adu_controldri"
      "ve_0x120_120.Adu_targetgear_enableType\"m"
      "\n\034Adu_controtorque_rawflagType\022\'\n#ADU_CO"
      "NTROTORQUE_RAWFLAG_NO_FILTERS\020\000\022$\n ADU_C"
      "ONTROTORQUE_RAWFLAG_FILTERS\020\001\"f\n\033Adu_con"
      "trotorque_enableType\022#\n\037ADU_CONTROTORQUE"
      "_ENABLE_DISABLE\020\000\022\"\n\036ADU_CONTROTORQUE_EN"
      "ABLE_ENABLE\020\001\"\376\001\n\033Adu_targetgear_positio"
      "nType\022#\n\037ADU_TARGETGEAR_POSITION_INITIAL"
      "\020\000\022\"\n\036ADU_TARGETGEAR_POSITION_P_PARK\020\001\022%"
      "\n!ADU_TARGETGEAR_POSITION_R_REVERSE\020\002\022%\n"
      "!ADU_TARGETGEAR_POSITION_N_NEUTRAL\020\003\022#\n\037"
      "ADU_TARGETGEAR_POSITION_D_DRIVE\020\004\022#\n\037ADU"
      "_TARGETGEAR_POSITION_INVALID\020\005\"`\n\031Adu_ta"
      "rgetgear_enableType\022!\n\035ADU_TARGETGEAR_EN"
      "ABLE_DISABLE\020\000\022 \n\034ADU_TARGETGEAR_ENABLE_"
      "ENABLE\020\001\"\235\n\n\031Gw_vcu_control2_0x131_131\022\026"
      "\n\016checksum_0x131\030\001 \001(\005\022\035\n\025rolling_counte"
      "r_0x131\030\002 \001(\005\022O\n\013vcu_sts_vcu\030\003 \001(\0162:.jmc"
      "_auto.canbus.Gw_vcu_control2_0x131_131.V"
      "cu_sts_vcuType\022U\n\016vcu_brake_flag\030\004 \001(\0162="
      ".jmc_auto.canbus.Gw_vcu_control2_0x131_1"
      "31.Vcu_brake_flagType\022Y\n\020vcu_tractor_fla"
      "g\030\005 \001(\0162\?.jmc_auto.canbus.Gw_vcu_control"
      "2_0x131_131.Vcu_tractor_flagType\022\036\n\026vcu_"
      "brkpedpos_meas_vcu\030\006 \001(\001\022[\n\021vcu_pwt_mode"
      "_dash\030\007 \001(\0162@.jmc_auto.canbus.Gw_vcu_con"
      "trol2_0x131_131.Vcu_pwt_mode_dashType\022w\n"
      "\037vcu_mcu_motor1_capdischarge_req\030\010 \001(\0162N"
      ".jmc_auto.canbus.Gw_vcu_control2_0x131_1"
      "31.Vcu_mcu_motor1_capdischarge_reqType\022\036"
      "\n\026vcu_mcu_motor1_trq_req\030\t \001(\001\022\036\n\026vcu_mc"
      "u_motor1_spd_req\030\n \001(\005\"v\n\017Vcu_sts_vcuTyp"
      "e\022\034\n\030VCU_STS_VCU_INITIALIZING\020\000\022\025\n\021VCU_S"
      "TS_VCU_READY\020\001\022\027\n\023VCU_STS_VCU_WARNING\020\002\022"
      "\025\n\021VCU_STS_VCU_FAULT\020\003\"M\n\022Vcu_brake_flag"
      "Type\022\034\n\030VCU_BRAKE_FLAG_NO_ACTIVE\020\000\022\031\n\025VC"
      "U_BRAKE_FLAG_ACTIVE\020\001\"S\n\024Vcu_tractor_fla"
      "gType\022\036\n\032VCU_TRACTOR_FLAG_NO_ACTIVE\020\000\022\033\n"
      "\027VCU_TRACTOR_FLAG_ACTIVE\020\001\"\354\001\n\025Vcu_pwt_m"
      "ode_dashType\022\034\n\030VCU_PWT_MODE_DASH_ECOHEV"
      "\020\000\022\034\n\030VCU_PWT_MODE_DASH_ECO_EV\020\001\022\034\n\030VCU_"
      "PWT_MODE_DASH_PWRHEV\020\002\022\033\n\027VCU_PWT_MODE_D"
      "ASH_PWREV\020\003\022\034\n\030VCU_PWT_MODE_DASH_EV_ECO\020"
      "\004\022\036\n\032VCU_PWT_MODE_DASH_EV_POWER\020\005\022\036\n\032VCU"
      "_PWT_MODE_DASH_RESERVED\020\007\"\204\001\n#Vcu_mcu_mo"
      "tor1_capdischarge_reqType\022.\n*VCU_MCU_MOT"
      "OR1_CAPDISCHARGE_REQ_NO_REQUEST\020\000\022-\n)VCU"
      "_MCU_MOTOR1_CAPDISCHARGE_REQ_DISCHARGE\020\001"
      "\"\205\016\n\031Gw_scu_shiftersts_0xc8_c8\022\025\n\rchecks"
      "um_0xc8\030\001 \001(\005\022\034\n\024rolling_counter_0xc8\030\002 "
      "\001(\005\022c\n\025scu_shifterlockstatus\030\003 \001(\0162D.jmc"
      "_auto.canbus.Gw_scu_shiftersts_0xc8_c8.S"
      "cu_shifterlockstatusType\022[\n\021shifterlocks"
      "tatus\030\004 \001(\0162@.jmc_auto.canbus.Gw_scu_shi"
      "ftersts_0xc8_c8.ShifterlockstatusType\022e\n"
      "\026shifterpositionfailure\030\005 \001(\0162E.jmc_auto"
      ".canbus.Gw_scu_shiftersts_0xc8_c8.Shifte"
      "rpositionfailureType\022W\n\017shifterposition\030"
      "\006 \001(\0162>.jmc_auto.canbus.Gw_scu_shifterst"
      "s_0xc8_c8.ShifterpositionType\022]\n\022shifter"
      "positioninv\030\007 \001(\0162A.jmc_auto.canbus.Gw_s"
      "cu_shiftersts_0xc8_c8.Shifterpositioninv"
      "Type\022O\n\013sys_sts_scu\030\010 \001(\0162:.jmc_auto.can"
      "bus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_sc"
      "uType\"\202\001\n\031Scu_shifterlockstatusType\022\"\n\036S"
      "CU_SHIFTERLOCKSTATUS_UNLOCKED\020\000\022 \n\034SCU_S"
      "HIFTERLOCKSTATUS_LOCKED\020\001\022\037\n\033SCU_SHIFTER"
      "LOCKSTATUS_FAULT\020\003\"r\n\025ShifterlockstatusT"
      "ype\022\036\n\032SHIFTERLOCKSTATUS_UNLOCKED\020\000\022\034\n\030S"
      "HIFTERLOCKSTATUS_LOCKED\020\001\022\033\n\027SHIFTERLOCK"
      "STATUS_FAULT\020\003\"\201\002\n\032Shifterpositionfailur"
      "eType\022\"\n\036SHIFTERPOSITIONFAILURE_NOFAULT\020"
      "\000\0221\n-SHIFTERPOSITIONFAILURE_MODESELECTOR"
      "SENSORFAIL\020\001\0223\n/SHIFTERPOSITIONFAILURE_R"
      "OTARYPOSITIONSENSORFAIL\020\002\022.\n*SHIFTERPOSI"
      "TIONFAILURE_CANBUSCOMMUNICATION\020\003\022\'\n#SHI"
      "FTERPOSITIONFAILURE_SOLENOIDFAIL\020\004\"\374\001\n\023S"
      "hifterpositionType\022\031\n\025SHIFTERPOSITION_ER"
      "ROR\020\000\022\037\n\033SHIFTERPOSITION_MANUAL_MODE\020\003\022\031"
      "\n\025SHIFTERPOSITION_DRIVE\020\005\022\033\n\027SHIFTERPOSI"
      "TION_NEUTRAL\020\006\022\033\n\027SHIFTERPOSITION_REVERS"
      "E\020\007\022\030\n\024SHIFTERPOSITION_PARK\020\010\022\033\n\027SHIFTER"
      "POSITION_UPSHIFT\020\t\022\035\n\031SHIFTERPOSITION_DO"
      "WNSHIFT\020\n\"\227\002\n\026ShifterpositioninvType\022 \n\034"
      "SHIFTERPOSITIONINV_DOWNSHIFT\020\005\022\036\n\032SHIFTE"
      "RPOSITIONINV_UPSHIFT\020\006\022\033\n\027SHIFTERPOSITIO"
      "NINV_PARK\020\007\022\036\n\032SHIFTERPOSITIONINV_REVERS"
      "E\020\010\022\036\n\032SHIFTERPOSITIONINV_NEUTRAL\020\t\022\034\n\030S"
      "HIFTERPOSITIONINV_DRIVE\020\n\022\"\n\036SHIFTERPOSI"
      "TIONINV_MANUAL_MODE\020\014\022\034\n\030SHIFTERPOSITION"
      "INV_ERROR\020\017\"k\n\017Sys_sts_scuType\022\024\n\020SYS_ST"
      "S_SCU_INIT\020\000\022\022\n\016SYS_STS_SCU_OK\020\001\022\027\n\023SYS_"
      "STS_SCU_WARNING\020\002\022\025\n\021SYS_STS_SCU_FAULT\020\003"
      "\"\352\r\n\031Gw_vcu_drivests_0x10a_10a\022\026\n\016checks"
      "um_0x10a\030\001 \001(\005\022\035\n\025rolling_counter_0x10a\030"
      "\002 \001(\005\022m\n\032vcu_vehicleerror_intervene\030\003 \001("
      "\0162I.jmc_auto.canbus.Gw_vcu_drivests_0x10"
      "a_10a.Vcu_vehicleerror_interveneType\022i\n\030"
      "vcu_torque_controlstatus\030\004 \001(\0162G.jmc_aut"
      "o.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_t"
      "orque_controlstatusType\022m\n\032vcu_torquedri"
      "ver_intervene\030\005 \001(\0162I.jmc_auto.canbus.Gw"
      "_vcu_drivests_0x10a_10a.Vcu_torquedriver"
      "_interveneType\022k\n\031vcu_gearpos_controlsta"
      "tus\030\006 \001(\0162H.jmc_auto.canbus.Gw_vcu_drive"
      "sts_0x10a_10a.Vcu_gearpos_controlstatusT"
      "ype\022o\n\033vcu_gearposdriver_intervene\030\007 \001(\016"
      "2J.jmc_auto.canbus.Gw_vcu_drivests_0x10a"
      "_10a.Vcu_gearposdriver_interveneType\022O\n\013"
      "vcu_veh_sts\030\010 \001(\0162:.jmc_auto.canbus.Gw_v"
      "cu_drivests_0x10a_10a.Vcu_veh_stsType\022S\n"
      "\rvcu_axlespdst\030\t \001(\0162<.jmc_auto.canbus.G"
      "w_vcu_drivests_0x10a_10a.Vcu_axlespdstTy"
      "pe\022\023\n\013vcu_axlespd\030\n \001(\001\"w\n\036Vcu_vehicleer"
      "ror_interveneType\022+\n\'VCU_VEHICLEERROR_IN"
      "TERVENE_NOTINTERVENE\020\000\022(\n$VCU_VEHICLEERR"
      "OR_INTERVENE_INTERVENE\020\001\"\330\001\n\034Vcu_torque_"
      "controlstatusType\0220\n,VCU_TORQUE_CONTROLS"
      "TATUS_TEMPORARILY_INHIBIT\020\000\0220\n,VCU_TORQU"
      "E_CONTROLSTATUS_AVAILABLEFORCONTROL\020\001\022#\n"
      "\037VCU_TORQUE_CONTROLSTATUS_ACTIVE\020\002\022/\n+VC"
      "U_TORQUE_CONTROLSTATUS_PERMANENTLY_FAILE"
      "D\020\003\"w\n\036Vcu_torquedriver_interveneType\022+\n"
      "\'VCU_TORQUEDRIVER_INTERVENE_NOTINTERVENE"
      "\020\000\022(\n$VCU_TORQUEDRIVER_INTERVENE_INTERVE"
      "NE\020\001\"\335\001\n\035Vcu_gearpos_controlstatusType\0221"
      "\n-VCU_GEARPOS_CONTROLSTATUS_TEMPORARILY_"
      "INHIBIT\020\000\0221\n-VCU_GEARPOS_CONTROLSTATUS_A"
      "VAILABLEFORCONTROL\020\001\022$\n VCU_GEARPOS_CONT"
      "ROLSTATUS_ACTIVE\020\002\0220\n,VCU_GEARPOS_CONTRO"
      "LSTATUS_PERMANENTLY_FAILED\020\003\"z\n\037Vcu_gear"
      "posdriver_interveneType\022,\n(VCU_GEARPOSDR"
      "IVER_INTERVENE_NOTINTERVENE\020\000\022)\n%VCU_GEA"
      "RPOSDRIVER_INTERVENE_INTERVENE\020\001\"B\n\017Vcu_"
      "veh_stsType\022\030\n\024VCU_VEH_STS_NOTREADY\020\000\022\025\n"
      "\021VCU_VEH_STS_READY\020\001\"G\n\021Vcu_axlespdstTyp"
      "e\022\031\n\025VCU_AXLESPDST_NOERROR\020\000\022\027\n\023VCU_AXLE"
      "SPDST_ERROR\020\001\"\343\006\n\032Adu_controlbrake_0x110"
      "_110\022\031\n\021ic_checksum_0x110\030\001 \001(\005\022 \n\030ic_ro"
      "lling_counter_0x110\030\002 \001(\005\022\034\n\024adu_tgt_dec"
      "eleration\030\003 \001(\001\022\036\n\026adu_brktmcposition_re"
      "q\030\004 \001(\001\022`\n\023adu_parkrelease_req\030\005 \001(\0162C.j"
      "mc_auto.canbus.Adu_controlbrake_0x110_11"
      "0.Adu_parkrelease_reqType\022j\n\030adu_controb"
      "rk_standstill\030\006 \001(\0162H.jmc_auto.canbus.Ad"
      "u_controlbrake_0x110_110.Adu_controbrk_s"
      "tandstillType\022b\n\024adu_controbrk_enable\030\007 "
      "\001(\0162D.jmc_auto.canbus.Adu_controlbrake_0"
      "x110_110.Adu_controbrk_enableType\022\"\n\032adu"
      "_mastercylinderpressreq\030\010 \001(\005\"\236\001\n\027Adu_pa"
      "rkrelease_reqType\022\"\n\036ADU_PARKRELEASE_REQ"
      "_NO_CONTROL\020\000\022\037\n\033ADU_PARKRELEASE_REQ_REL"
      "EASE\020\001\022\034\n\030ADU_PARKRELEASE_REQ_PARK\020\002\022 \n\034"
      "ADU_PARKRELEASE_REQ_RESERVED\020\003\"t\n\034Adu_co"
      "ntrobrk_standstillType\022+\n\'ADU_CONTROBRK_"
      "STANDSTILL_NOT_STANDSTILL\020\000\022\'\n#ADU_CONTR"
      "OBRK_STANDSTILL_STANDSTILL\020\001\"]\n\030Adu_cont"
      "robrk_enableType\022 \n\034ADU_CONTROBRK_ENABLE"
      "_DISABLE\020\000\022\037\n\033ADU_CONTROBRK_ENABLE_ENABL"
      "E\020\001\"\351\t\n\025Eps2_status_0x112_112\022W\n\021eps_con"
      "trolstatus\030\001 \001(\0162<.jmc_auto.canbus.Eps2_"
      "status_0x112_112.Eps_controlstatusType\022]"
      "\n\024eps_driver_intervene\030\002 \001(\0162\?.jmc_auto."
      "canbus.Eps2_status_0x112_112.Eps_driver_"
      "interveneType\022\034\n\024eps_steerwheelrotspd\030\003 "
      "\001(\005\022\034\n\024eps_steeringwheelang\030\004 \001(\001\022\034\n\024eps"
      "_torsionbartorque\030\005 \001(\001\022W\n\021eps_sasfailur"
      "ests\030\006 \001(\0162<.jmc_auto.canbus.Eps2_status"
      "_0x112_112.Eps_sasfailurestsType\022c\n\027eps_"
      "torsionbartorquedir\030\007 \001(\0162B.jmc_auto.can"
      "bus.Eps2_status_0x112_112.Eps_torsionbar"
      "torquedirType\022g\n\031eps_torsionbartorqueval"
      "id\030\010 \001(\0162D.jmc_auto.canbus.Eps2_status_0"
      "x112_112.Eps_torsionbartorquevalidType\"\267"
      "\001\n\025Eps_controlstatusType\022)\n%EPS_CONTROLS"
      "TATUS_TEMPORARILY_INHIBIT\020\000\022+\n\'EPS_CONTR"
      "OLSTATUS_AVAILABLE_FOR_CONTROL\020\001\022\034\n\030EPS_"
      "CONTROLSTATUS_ACTIVE\020\002\022(\n$EPS_CONTROLSTA"
      "TUS_PERMANENTLY_FAILED\020\003\"f\n\030Eps_driver_i"
      "nterveneType\022&\n\"EPS_DRIVER_INTERVENE_NOT"
      "_INTERVENE\020\000\022\"\n\036EPS_DRIVER_INTERVENE_INT"
      "ERVENE\020\001\"\234\001\n\025Eps_sasfailurestsType\022S\nOEP"
      "S_SASFAILURESTS_SENSOR_INFORMATION_INVAL"
      "ID__AN_INTERNAL_SENSOR_FAULT_OCCURRED\020\000\022"
      ".\n*EPS_SASFAILURESTS_SENSOR_INFORMATION_"
      "VALID\020\001\"i\n\033Eps_torsionbartorquedirType\022$"
      "\n EPS_TORSIONBARTORQUEDIR_POSITIVE\020\000\022$\n "
      "EPS_TORSIONBARTORQUEDIR_NEGATIVE\020\001\"k\n\035Ep"
      "s_torsionbartorquevalidType\022%\n!EPS_TORSI"
      "ONBARTORQUEVALID_INVALID\020\000\022#\n\037EPS_TORSIO"
      "NBARTORQUEVALID_VALID\020\001\"\215\003\n\026Gw_mcu_power"
      "_0x226_226\022\026\n\016checksum_0x226\030\001 \001(\005\022\035\n\025ro"
      "lling_counter_0x226\030\002 \001(\005\022\031\n\021mcu_serialn"
      "um_est\030\003 \001(\010\022\032\n\022mcu_tm04_trqmindyn\030\004 \001(\005"
      "\022\032\n\022mcu_tm04_trqmaxdyn\030\005 \001(\005\022\026\n\016mcu_maxt"
      "rq_est\030\006 \001(\005\022\026\n\016mcu_mintrq_est\030\007 \001(\005\022L\n\013"
      "mcu_sys_sts\030\010 \001(\01627.jmc_auto.canbus.Gw_m"
      "cu_power_0x226_226.Mcu_sys_stsType\"k\n\017Mc"
      "u_sys_stsType\022\024\n\020MCU_SYS_STS_INIT\020\000\022\022\n\016M"
      "CU_SYS_STS_OK\020\001\022\027\n\023MCU_SYS_STS_WARNING\020\002"
      "\022\025\n\021MCU_SYS_STS_FAULT\020\003\"\351\002\n\031Adu_controle"
      "ps2_0x100_100\022 \n\030adu_100h_messagechecksu"
      "m\030\001 \001(\005\022\037\n\027adu_100h_messagecounter\030\002 \001(\005"
      "\022&\n\036adu_ctrsteeringwheelanglespeed\030\003 \001(\005"
      "\022$\n\034adu_controsteeringwheelangle\030\004 \001(\001\022_"
      "\n\023adu_controepsenable\030\005 \001(\0162B.jmc_auto.c"
      "anbus.Adu_controleps2_0x100_100.Adu_cont"
      "roepsenableType\"Z\n\027Adu_controepsenableTy"
      "pe\022\037\n\033ADU_CONTROEPSENABLE_DISABLE\020\000\022\036\n\032A"
      "DU_CONTROEPSENABLE_ENABLE\020\001\"\210\t\n\027Gw_mcu_o"
      "utput_0x225_225\022\026\n\016checksum_0x225\030\001 \001(\005\022"
      "\035\n\025rolling_counter_0x225\030\002 \001(\005\022O\n\014mcu_wo"
      "rk_sts\030\003 \001(\01629.jmc_auto.canbus.Gw_mcu_ou"
      "tput_0x225_225.Mcu_work_stsType\022U\n\017mcu_c"
      "trmode_sts\030\004 \001(\0162<.jmc_auto.canbus.Gw_mc"
      "u_output_0x225_225.Mcu_ctrmode_stsType\022Y"
      "\n\021mcu_capacitor_sts\030\005 \001(\0162>.jmc_auto.can"
      "bus.Gw_mcu_output_0x225_225.Mcu_capacito"
      "r_stsType\022\024\n\014mcu_spd_meas\030\006 \001(\005\022\024\n\014mcu_t"
      "rq_meas\030\007 \001(\005\"\216\001\n\020Mcu_work_stsType\022\027\n\023MC"
      "U_WORK_STS_CONSUM\020\000\022\031\n\025MCU_WORK_STS_GENE"
      "RATE\020\001\022\024\n\020MCU_WORK_STS_OFF\020\002\022\026\n\022MCU_WORK"
      "_STS_READY\020\003\022\030\n\024MCU_WORK_STS_INVALID\020\004\"\242"
      "\003\n\023Mcu_ctrmode_stsType\022\"\n\036MCU_CTRMODE_ST"
      "S_INITIALIZATION\020\000\022\035\n\031MCU_CTRMODE_STS_PR"
      "ECHARGE\020\001\022\033\n\027MCU_CTRMODE_STS_DISABLE\020\002\022\033"
      "\n\027MCU_CTRMODE_STS_STANDBY\020\003\022\034\n\030MCU_CTRMO"
      "DE_STS_ANTISLIP\020\004\022\037\n\033MCU_CTRMODE_STS_ALO"
      "FFSETCAL\020\005\022\033\n\027MCU_CTRMODE_STS_NCTLINT\020\007\022"
      "\031\n\025MCU_CTRMODE_STS_TRQCT\020\010\022\035\n\031MCU_CTRMOD"
      "E_STS_ASCACTIVE\020\t\022\034\n\030MCU_CTRMODE_STS_AFT"
      "ERRUN\020\013\022\036\n\032MCU_CTRMODE_STS_PREFAILURE\020\014\022"
      "\033\n\027MCU_CTRMODE_STS_FAILURE\020\r\022\035\n\031MCU_CTRM"
      "ODE_STS_DISCHARGE\020\016\"\320\001\n\025Mcu_capacitor_st"
      "sType\022\"\n\036MCU_CAPACITOR_STS_FORBIDCHARGE\020"
      "\000\022 \n\034MCU_CAPACITOR_STS_WAITCHARGE\020\001\022$\n M"
      "CU_CAPACITOR_STS_ALLOWDISCHARGE\020\002\022%\n!MCU"
      "_CAPACITOR_STS_FORBIDDISCHARGE\020\003\022$\n MCU_"
      "CAPACITOR_STS_ERRORDISCHARGE\020\004\"\242\013\n\024Gw_ab"
      "s_sts_0x221_221\022\026\n\016checksum_0x221\030\001 \001(\005\022"
      "\035\n\025rolling_counter_0x221\030\002 \001(\005\022b\n\027abs_wh"
      "lmilgfrntlestatus\030\003 \001(\0162A.jmc_auto.canbu"
      "s.Gw_abs_sts_0x221_221.Abs_whlmilgfrntle"
      "statusType\022b\n\027abs_whlmilgfrntristatus\030\004 "
      "\001(\0162A.jmc_auto.canbus.Gw_abs_sts_0x221_2"
      "21.Abs_whlmilgfrntristatusType\022Z\n\023abs_ve"
      "hspdlgtstatus\030\005 \001(\0162=.jmc_auto.canbus.Gw"
      "_abs_sts_0x221_221.Abs_vehspdlgtstatusTy"
      "pe\022Z\n\023abs_vehspddirection\030\006 \001(\0162=.jmc_au"
      "to.canbus.Gw_abs_sts_0x221_221.Abs_vehsp"
      "ddirectionType\022\025\n\rabs_vehspdlgt\030\007 \001(\001\022N\n"
      "\rabs_ebdflgflt\030\010 \001(\01627.jmc_auto.canbus.G"
      "w_abs_sts_0x221_221.Abs_ebdflgfltType\022N\n"
      "\rabs_absflgflt\030\t \001(\01627.jmc_auto.canbus.G"
      "w_abs_sts_0x221_221.Abs_absflgfltType\022R\n"
      "\017abs_absctrlactv\030\n \001(\01629.jmc_auto.canbus"
      ".Gw_abs_sts_0x221_221.Abs_absctrlactvTyp"
      "e\022\031\n\021abs_whlmilgfrntri\030\013 \001(\005\022\031\n\021abs_whlm"
      "ilgfrntle\030\014 \001(\005\"e\n\033Abs_whlmilgfrntlestat"
      "usType\022!\n\035ABS_WHLMILGFRNTLESTATUS_VALID\020"
      "\000\022#\n\037ABS_WHLMILGFRNTLESTATUS_INVALID\020\001\"e"
      "\n\033Abs_whlmilgfrntristatusType\022!\n\035ABS_WHL"
      "MILGFRNTRISTATUS_VALID\020\000\022#\n\037ABS_WHLMILGF"
      "RNTRISTATUS_INVALID\020\001\"w\n\027Abs_vehspdlgtst"
      "atusType\022\035\n\031ABS_VEHSPDLGTSTATUS_VALID\020\000\022"
      "\037\n\033ABS_VEHSPDLGTSTATUS_INVALID\020\001\022\034\n\030ABS_"
      "VEHSPDLGTSTATUS_INIT\020\002\"\\\n\027Abs_vehspddire"
      "ctionType\022\037\n\033ABS_VEHSPDDIRECTION_FORWARD"
      "\020\000\022 \n\034ABS_VEHSPDDIRECTION_BACKWARD\020\001\"L\n\021"
      "Abs_ebdflgfltType\022\034\n\030ABS_EBDFLGFLT_NO_FA"
      "ILURE\020\000\022\031\n\025ABS_EBDFLGFLT_FAILURE\020\001\"L\n\021Ab"
      "s_absflgfltType\022\034\n\030ABS_ABSFLGFLT_NO_FAIL"
      "URE\020\000\022\031\n\025ABS_ABSFLGFLT_FAILURE\020\001\"Q\n\023Abs_"
      "absctrlactvType\022\036\n\032ABS_ABSCTRLACTV_NOT_A"
      "CTIVE\020\000\022\032\n\026ABS_ABSCTRLACTV_ACTIVE\020\001\"\255\017\n\024"
      "Ibc_status_0x122_122\022\026\n\016checksum_0x122\030\001"
      " \001(\005\022\035\n\025rolling_counter_0x122\030\002 \001(\005\022Z\n\023i"
      "bc_parkrelease_req\030\003 \001(\0162=.jmc_auto.canb"
      "us.Ibc_status_0x122_122.Ibc_parkrelease_"
      "reqType\022\025\n\ribc_faultcode\030\004 \001(\005\022\037\n\027ibc_br"
      "kpedalrawposition\030\005 \001(\001\022l\n\034ibc_mastercyl"
      "inderpressvalid\030\006 \001(\0162F.jmc_auto.canbus."
      "Ibc_status_0x122_122.Ibc_mastercylinderp"
      "ressvalidType\022\037\n\027ibc_mastercylinderpress"
      "\030\007 \001(\005\022R\n\017ibc_brakeactive\030\010 \001(\01629.jmc_au"
      "to.canbus.Ibc_status_0x122_122.Ibc_brake"
      "activeType\022\\\n\024ibc_brakereqavailabe\030\t \001(\016"
      "2>.jmc_auto.canbus.Ibc_status_0x122_122."
      "Ibc_brakereqavailabeType\022b\n\027ibc_brakepre"
      "ssurereqack\030\n \001(\0162A.jmc_auto.canbus.Ibc_"
      "status_0x122_122.Ibc_brakepressurereqack"
      "Type\022V\n\021ibc_controlstatus\030\013 \001(\0162;.jmc_au"
      "to.canbus.Ibc_status_0x122_122.Ibc_contr"
      "olstatusType\022\\\n\024ibc_driver_intervene\030\014 \001"
      "(\0162>.jmc_auto.canbus.Ibc_status_0x122_12"
      "2.Ibc_driver_interveneType\022T\n\020ibc_system"
      "status\030\r \001(\0162:.jmc_auto.canbus.Ibc_statu"
      "s_0x122_122.Ibc_systemstatusType\"\245\001\n\027Ibc"
      "_parkrelease_reqType\022\"\n\036IBC_PARKRELEASE_"
      "REQ_NO_CONTROL\020\000\022\037\n\033IBC_PARKRELEASE_REQ_"
      "RELEASE\020\001\022\034\n\030IBC_PARKRELEASE_REQ_PARK\020\002\022"
      "\'\n#IBC_PARKRELEASE_REQ_DYNAMIC_PARKING\020\003"
      "\"t\n Ibc_mastercylinderpressvalidType\022(\n$"
      "IBC_MASTERCYLINDERPRESSVALID_INVAILD\020\000\022&"
      "\n\"IBC_MASTERCYLINDERPRESSVALID_VALID\020\001\"["
      "\n\023Ibc_brakeactiveType\022\"\n\036IBC_BRAKEACTIVE"
      "_BRAKE_INACTIVE\020\000\022 \n\034IBC_BRAKEACTIVE_BRA"
      "KE_ACTIVE\020\001\"r\n\030Ibc_brakereqavailabeType\022"
      ",\n(IBC_BRAKEREQAVAILABE_BRAKE_NOT_AVAILA"
      "BLE\020\000\022(\n$IBC_BRAKEREQAVAILABE_BRAKE_AVAI"
      "LABLE\020\001\"c\n\033Ibc_brakepressurereqackType\022#"
      "\n\037IBC_BRAKEPRESSUREREQACK_NOT_ACK\020\000\022\037\n\033I"
      "BC_BRAKEPRESSUREREQACK_ACK\020\001\"\267\001\n\025Ibc_con"
      "trolstatusType\022)\n%IBC_CONTROLSTATUS_TEMP"
      "ORARILY_INHIBIT\020\000\022+\n\'IBC_CONTROLSTATUS_A"
      "VAILABLE_FOR_CONTROL\020\001\022\034\n\030IBC_CONTROLSTA"
      "TUS_ACTIVE\020\002\022(\n$IBC_CONTROLSTATUS_PERMAN"
      "ENTLY_FAILED\020\003\"f\n\030Ibc_driver_interveneTy"
      "pe\022&\n\"IBC_DRIVER_INTERVENE_NOT_INTERVENE"
      "\020\000\022\"\n\036IBC_DRIVER_INTERVENE_INTERVENE\020\001\"\242"
      "\001\n\024Ibc_systemstatusType\022$\n IBC_SYSTEMSTA"
      "TUS_SYSTEM_NO_FAULT\020\000\022\"\n\036IBC_SYSTEMSTATU"
      "S_SYSTEM_WARING\020\001\022!\n\035IBC_SYSTEMSTATUS_SY"
      "STEM_FAULT\020\002\022\035\n\031IBC_SYSTEMSTATUS_RESERVE"
      "D\020\003\"\244\006\n\026Gw_vcu_whltq_0x107_107\022\026\n\016checks"
      "um_0x107\030\001 \001(\005\022\035\n\025rolling_counter_0x107\030"
      "\002 \001(\005\022N\n\014vcu_kickdown\030\003 \001(\01628.jmc_auto.c"
      "anbus.Gw_vcu_whltq_0x107_107.Vcu_kickdow"
      "nType\022b\n\026vcu_accpedalratioerror\030\004 \001(\0162B."
      "jmc_auto.canbus.Gw_vcu_whltq_0x107_107.V"
      "cu_accpedalratioerrorType\022\031\n\021vcu_accpeda"
      "lratio\030\005 \001(\001\022\034\n\024vcu_accrawpedalratio\030\006 \001"
      "(\001\022Z\n\022vcu_brkpedalstasus\030\007 \001(\0162>.jmc_aut"
      "o.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkp"
      "edalstasusType\022\037\n\027vcu_minindicatedtorqwh"
      "l\030\010 \001(\005\022\037\n\027vcu_maxindicatedtorqwhl\030\t \001(\005"
      "\"G\n\020Vcu_kickdownType\022\032\n\026VCU_KICKDOWN_NOT"
      "ACTIVE\020\000\022\027\n\023VCU_KICKDOWN_ACTIVE\020\001\"b\n\032Vcu"
      "_accpedalratioerrorType\022\"\n\036VCU_ACCPEDALR"
      "ATIOERROR_NOERROR\020\000\022 \n\034VCU_ACCPEDALRATIO"
      "ERROR_ERROR\020\001\"\232\001\n\026Vcu_brkpedalstasusType"
      "\022!\n\035VCU_BRKPEDALSTASUS_NOTPRESSED\020\000\022\036\n\032V"
      "CU_BRKPEDALSTASUS_PRESSED\020\001\022\037\n\033VCU_BRKPE"
      "DALSTASUS_RESERVED\020\002\022\034\n\030VCU_BRKPEDALSTAS"
      "US_ERROR\020\003\"\353\031\n\025Bcm_bodysts_0x344_344\022[\n\023"
      "bcm_brakelampstatus\030\001 \001(\0162>.jmc_auto.can"
      "bus.Bcm_bodysts_0x344_344.Bcm_brakelamps"
      "tatusType\022_\n\025bcm_rearfoglampstatus\030\002 \001(\016"
      "2@.jmc_auto.canbus.Bcm_bodysts_0x344_344"
      ".Bcm_rearfoglampstatusType\022a\n\026bcm_frontf"
      "oglampstatus\030\003 \001(\0162A.jmc_auto.canbus.Bcm"
      "_bodysts_0x344_344.Bcm_frontfoglampstatu"
      "sType\022U\n\020bcm_washerstatus\030\004 \001(\0162;.jmc_au"
      "to.canbus.Bcm_bodysts_0x344_344.Bcm_wash"
      "erstatusType\022S\n\017bcm_wiperstatus\030\005 \001(\0162:."
      "jmc_auto.canbus.Bcm_bodysts_0x344_344.Bc"
      "m_wiperstatusType\022]\n\024bcm_doorlockfeedbac"
      "k\030\006 \001(\0162\?.jmc_auto.canbus.Bcm_bodysts_0x"
      "344_344.Bcm_doorlockfeedbackType\022Q\n\016bcm_"
      "hornstatus\030\007 \001(\01629.jmc_auto.canbus.Bcm_b"
      "odysts_0x344_344.Bcm_hornstatusType\022a\n\026b"
      "cm_highbeamlampstatus\030\010 \001(\0162A.jmc_auto.c"
      "anbus.Bcm_bodysts_0x344_344.Bcm_highbeam"
      "lampstatusType\022_\n\025bcm_lowbeamlampstatus\030"
      "\t \001(\0162@.jmc_auto.canbus.Bcm_bodysts_0x34"
      "4_344.Bcm_lowbeamlampstatusType\022a\n\026bcm_p"
      "ositionlampstatus\030\n \001(\0162A.jmc_auto.canbu"
      "s.Bcm_bodysts_0x344_344.Bcm_positionlamp"
      "statusType\022]\n\024bcm_hazardlampstatus\030\013 \001(\016"
      "2\?.jmc_auto.canbus.Bcm_bodysts_0x344_344"
      ".Bcm_hazardlampstatusType\022c\n\027bcm_righttu"
      "rnlampstatus\030\014 \001(\0162B.jmc_auto.canbus.Bcm"
      "_bodysts_0x344_344.Bcm_rightturnlampstat"
      "usType\022a\n\026bcm_leftturnlampstatus\030\r \001(\0162A"
      ".jmc_auto.canbus.Bcm_bodysts_0x344_344.B"
      "cm_leftturnlampstatusType\"q\n\027Bcm_brakela"
      "mpstatusType\022+\n\'BCM_BRAKELAMPSTATUS_BRAK"
      "E_LAMP_INACTIVE\020\000\022)\n%BCM_BRAKELAMPSTATUS"
      "_BRAKE_LAMP_ACTIVE\020\001\"\237\001\n\031Bcm_rearfoglamp"
      "statusType\022!\n\035BCM_REARFOGLAMPSTATUS_INVA"
      "LID\020\000\022\035\n\031BCM_REARFOGLAMPSTATUS_OFF\020\001\022\034\n\030"
      "BCM_REARFOGLAMPSTATUS_ON\020\002\022\"\n\036BCM_REARFO"
      "GLAMPSTATUS_RESERVED\020\003\"\244\001\n\032Bcm_frontfogl"
      "ampstatusType\022\"\n\036BCM_FRONTFOGLAMPSTATUS_"
      "INVALID\020\000\022\036\n\032BCM_FRONTFOGLAMPSTATUS_OFF\020"
      "\001\022\035\n\031BCM_FRONTFOGLAMPSTATUS_ON\020\002\022#\n\037BCM_"
      "FRONTFOGLAMPSTATUS_RESERVED\020\003\"\206\001\n\024Bcm_wa"
      "sherstatusType\022\034\n\030BCM_WASHERSTATUS_INVAL"
      "ID\020\000\022\030\n\024BCM_WASHERSTATUS_OFF\020\001\022\027\n\023BCM_WA"
      "SHERSTATUS_ON\020\002\022\035\n\031BCM_WASHERSTATUS_RESE"
      "RVED\020\003\"\250\001\n\023Bcm_wiperstatusType\022\033\n\027BCM_WI"
      "PERSTATUS_INVALID\020\000\022\027\n\023BCM_WIPERSTATUS_O"
      "FF\020\001\022\035\n\031BCM_WIPERSTATUS_LOW_SPEED\020\002\022\036\n\032B"
      "CM_WIPERSTATUS_HIGH_SPEED\020\003\022\034\n\030BCM_WIPER"
      "STATUS_RESERVED\020\007\"\255\001\n\030Bcm_doorlockfeedba"
      "ckType\022 \n\034BCM_DOORLOCKFEEDBACK_INVALID\020\000"
      "\022$\n BCM_DOORLOCKFEEDBACK_LOCK_ACTION\020\001\022&"
      "\n\"BCM_DOORLOCKFEEDBACK_UNLOCK_ACTION\020\002\022!"
      "\n\035BCM_DOORLOCKFEEDBACK_RESERVED\020\003\"|\n\022Bcm"
      "_hornstatusType\022\032\n\026BCM_HORNSTATUS_INVALI"
      "D\020\000\022\026\n\022BCM_HORNSTATUS_OFF\020\001\022\025\n\021BCM_HORNS"
      "TATUS_ON\020\002\022\033\n\027BCM_HORNSTATUS_RESERVED\020\003\""
      "\244\001\n\032Bcm_highbeamlampstatusType\022\"\n\036BCM_HI"
      "GHBEAMLAMPSTATUS_INVALID\020\000\022\036\n\032BCM_HIGHBE"
      "AMLAMPSTATUS_OFF\020\001\022\035\n\031BCM_HIGHBEAMLAMPST"
      "ATUS_ON\020\002\022#\n\037BCM_HIGHBEAMLAMPSTATUS_RESE"
      "RVED\020\003\"\237\001\n\031Bcm_lowbeamlampstatusType\022!\n\035"
      "BCM_LOWBEAMLAMPSTATUS_INVALID\020\000\022\035\n\031BCM_L"
      "OWBEAMLAMPSTATUS_OFF\020\001\022\034\n\030BCM_LOWBEAMLAM"
      "PSTATUS_ON\020\002\022\"\n\036BCM_LOWBEAMLAMPSTATUS_RE"
      "SERVED\020\003\"\244\001\n\032Bcm_positionlampstatusType\022"
      "\"\n\036BCM_POSITIONLAMPSTATUS_INVALID\020\000\022\036\n\032B"
      "CM_POSITIONLAMPSTATUS_OFF\020\001\022\035\n\031BCM_POSIT"
      "IONLAMPSTATUS_ON\020\002\022#\n\037BCM_POSITIONLAMPST"
      "ATUS_RESERVED\020\003\"\235\001\n\030Bcm_hazardlampstatus"
      "Type\022 \n\034BCM_HAZARDLAMPSTATUS_INVALID\020\000\022\034"
      "\n\030BCM_HAZARDLAMPSTATUS_OFF\020\001\022\036\n\032BCM_HAZA"
      "RDLAMPSTATUS_BLINK\020\002\022!\n\035BCM_HAZARDLAMPST"
      "ATUS_RESERVED\020\003\"\254\001\n\033Bcm_rightturnlampsta"
      "tusType\022#\n\037BCM_RIGHTTURNLAMPSTATUS_INVAL"
      "ID\020\000\022\037\n\033BCM_RIGHTTURNLAMPSTATUS_OFF\020\001\022!\n"
      "\035BCM_RIGHTTURNLAMPSTATUS_BLINK\020\002\022$\n BCM_"
      "RIGHTTURNLAMPSTATUS_RESERVED\020\003\"\247\001\n\032Bcm_l"
      "eftturnlampstatusType\022\"\n\036BCM_LEFTTURNLAM"
      "PSTATUS_INVALID\020\000\022\036\n\032BCM_LEFTTURNLAMPSTA"
      "TUS_OFF\020\001\022 \n\034BCM_LEFTTURNLAMPSTATUS_BLIN"
      "K\020\002\022#\n\037BCM_LEFTTURNLAMPSTATUS_RESERVED\020\003"
      "\"\271\001\n\030Gw_bms_display_0x323_323\022\026\n\016checksu"
      "m_0x323\030\001 \001(\005\022\035\n\025rolling_counter_0x323\030\002"
      " \001(\005\022\030\n\020bms_consumeq_est\030\003 \001(\001\022\033\n\023bms_av"
      "ailableeq_est\030\004 \001(\001\022\023\n\013bms_soh_est\030\005 \001(\001"
      "\022\032\n\022bms_socdisplay_est\030\006 \001(\001\"\235\031\n\031Adu_bod"
      "ycontrol_0x333_333\022e\n\026adu_rearfoglampcon"
      "trol\030\001 \001(\0162E.jmc_auto.canbus.Adu_bodycon"
      "trol_0x333_333.Adu_rearfoglampcontrolTyp"
      "e\022g\n\027adu_frontfoglampcontrol\030\002 \001(\0162F.jmc"
      "_auto.canbus.Adu_bodycontrol_0x333_333.A"
      "du_frontfoglampcontrolType\022[\n\021adu_washer"
      "control\030\003 \001(\0162@.jmc_auto.canbus.Adu_body"
      "control_0x333_333.Adu_washercontrolType\022"
      "Y\n\020adu_wipercontrol\030\004 \001(\0162\?.jmc_auto.can"
      "bus.Adu_bodycontrol_0x333_333.Adu_wiperc"
      "ontrolType\022W\n\017adu_doorcontrol\030\005 \001(\0162>.jm"
      "c_auto.canbus.Adu_bodycontrol_0x333_333."
      "Adu_doorcontrolType\022W\n\017adu_horncontrol\030\006"
      " \001(\0162>.jmc_auto.canbus.Adu_bodycontrol_0"
      "x333_333.Adu_horncontrolType\022g\n\027adu_high"
      "beamlampcontrol\030\007 \001(\0162F.jmc_auto.canbus."
      "Adu_bodycontrol_0x333_333.Adu_highbeamla"
      "mpcontrolType\022e\n\026adu_lowbeamlampcontrol\030"
      "\010 \001(\0162E.jmc_auto.canbus.Adu_bodycontrol_"
      "0x333_333.Adu_lowbeamlampcontrolType\022g\n\027"
      "adu_positionlampcontrol\030\t \001(\0162F.jmc_auto"
      ".canbus.Adu_bodycontrol_0x333_333.Adu_po"
      "sitionlampcontrolType\022c\n\025adu_hazardlampc"
      "ontrol\030\n \001(\0162D.jmc_auto.canbus.Adu_bodyc"
      "ontrol_0x333_333.Adu_hazardlampcontrolTy"
      "pe\022i\n\030adu_rightturnlampcontrol\030\013 \001(\0162G.j"
      "mc_auto.canbus.Adu_bodycontrol_0x333_333"
      ".Adu_rightturnlampcontrolType\022g\n\027adu_lef"
      "tturnlampcontrol\030\014 \001(\0162F.jmc_auto.canbus"
      ".Adu_bodycontrol_0x333_333.Adu_leftturnl"
      "ampcontrolType\"\244\001\n\032Adu_rearfoglampcontro"
      "lType\022\"\n\036ADU_REARFOGLAMPCONTROL_INVALID\020"
      "\000\022\036\n\032ADU_REARFOGLAMPCONTROL_OFF\020\001\022\035\n\031ADU"
      "_REARFOGLAMPCONTROL_ON\020\002\022#\n\037ADU_REARFOGL"
      "AMPCONTROL_RESERVED\020\003\"\251\001\n\033Adu_frontfogla"
      "mpcontrolType\022#\n\037ADU_FRONTFOGLAMPCONTROL"
      "_INVALID\020\000\022\037\n\033ADU_FRONTFOGLAMPCONTROL_OF"
      "F\020\001\022\036\n\032ADU_FRONTFOGLAMPCONTROL_ON\020\002\022$\n A"
      "DU_FRONTFOGLAMPCONTROL_RESERVED\020\003\"\213\001\n\025Ad"
      "u_washercontrolType\022\035\n\031ADU_WASHERCONTROL"
      "_INVALID\020\000\022\031\n\025ADU_WASHERCONTROL_OFF\020\001\022\030\n"
      "\024ADU_WASHERCONTROL_ON\020\002\022\036\n\032ADU_WASHERCON"
      "TROL_RESERVED\020\003\"\336\001\n\024Adu_wipercontrolType"
      "\022\034\n\030ADU_WIPERCONTROL_INVALID\020\000\022\030\n\024ADU_WI"
      "PERCONTROL_OFF\020\001\0226\n2ADU_WIPERCONTROL_LOW"
      "_SPEED_A3_A8_B5_CD_CB_B5_A3_A9\020\002\0227\n3ADU_"
      "WIPERCONTROL_HIGH_SPEED_A3_A8_B8_DF_CB_B"
      "5_A3_A9\020\003\022\035\n\031ADU_WIPERCONTROL_RESERVED\020\007"
      "\"\206\001\n\023Adu_doorcontrolType\022\033\n\027ADU_DOORCONT"
      "ROL_INVALID\020\000\022\030\n\024ADU_DOORCONTROL_LOCK\020\001\022"
      "\032\n\026ADU_DOORCONTROL_UNLOCK\020\002\022\034\n\030ADU_DOORC"
      "ONTROL_RESERVED\020\003\"\201\001\n\023Adu_horncontrolTyp"
      "e\022\033\n\027ADU_HORNCONTROL_INVALID\020\000\022\027\n\023ADU_HO"
      "RNCONTROL_OFF\020\001\022\026\n\022ADU_HORNCONTROL_ON\020\002\022"
      "\034\n\030ADU_HORNCONTROL_RESERVED\020\003\"\251\001\n\033Adu_hi"
      "ghbeamlampcontrolType\022#\n\037ADU_HIGHBEAMLAM"
      "PCONTROL_INVALID\020\000\022\037\n\033ADU_HIGHBEAMLAMPCO"
      "NTROL_OFF\020\001\022\036\n\032ADU_HIGHBEAMLAMPCONTROL_O"
      "N\020\002\022$\n ADU_HIGHBEAMLAMPCONTROL_RESERVED\020"
      "\003\"\244\001\n\032Adu_lowbeamlampcontrolType\022\"\n\036ADU_"
      "LOWBEAMLAMPCONTROL_INVALID\020\000\022\036\n\032ADU_LOWB"
      "EAMLAMPCONTROL_OFF\020\001\022\035\n\031ADU_LOWBEAMLAMPC"
      "ONTROL_ON\020\002\022#\n\037ADU_LOWBEAMLAMPCONTROL_RE"
      "SERVED\020\003\"\251\001\n\033Adu_positionlampcontrolType"
      "\022#\n\037ADU_POSITIONLAMPCONTROL_INVALID\020\000\022\037\n"
      "\033ADU_POSITIONLAMPCONTROL_OFF\020\001\022\036\n\032ADU_PO"
      "SITIONLAMPCONTROL_ON\020\002\022$\n ADU_POSITIONLA"
      "MPCONTROL_RESERVED\020\003\"\242\001\n\031Adu_hazardlampc"
      "ontrolType\022!\n\035ADU_HAZARDLAMPCONTROL_INVA"
      "LID\020\000\022\035\n\031ADU_HAZARDLAMPCONTROL_OFF\020\001\022\037\n\033"
      "ADU_HAZARDLAMPCONTROL_BLINK\020\002\022\"\n\036ADU_HAZ"
      "ARDLAMPCONTROL_RESERVED\020\003\"\261\001\n\034Adu_rightt"
      "urnlampcontrolType\022$\n ADU_RIGHTTURNLAMPC"
      "ONTROL_INVALID\020\000\022 \n\034ADU_RIGHTTURNLAMPCON"
      "TROL_OFF\020\001\022\"\n\036ADU_RIGHTTURNLAMPCONTROL_B"
      "LINK\020\002\022%\n!ADU_RIGHTTURNLAMPCONTROL_RESER"
      "VED\020\003\"\254\001\n\033Adu_leftturnlampcontrolType\022#\n"
      "\037ADU_LEFTTURNLAMPCONTROL_INVALID\020\000\022\037\n\033AD"
      "U_LEFTTURNLAMPCONTROL_OFF\020\001\022!\n\035ADU_LEFTT"
      "URNLAMPCONTROL_BLINK\020\002\022$\n ADU_LEFTTURNLA"
      "MPCONTROL_RESERVED\020\003\"\241\016\n\024Gw_bms_sts_0x18"
      "1_181\022\026\n\016checksum_0x181\030\001 \001(\005\022\035\n\025rolling"
      "_counter_0x181\030\002 \001(\005\022J\n\013bms_err_lev\030\003 \001("
      "\01625.jmc_auto.canbus.Gw_bms_sts_0x181_181"
      ".Bms_err_levType\022P\n\016bms_idu_status\030\004 \001(\016"
      "28.jmc_auto.canbus.Gw_bms_sts_0x181_181."
      "Bms_idu_statusType\022X\n\022bms_batbalance_err"
      "\030\005 \001(\0162<.jmc_auto.canbus.Gw_bms_sts_0x18"
      "1_181.Bms_batbalance_errType\022\031\n\021bms_soca"
      "ctual_est\030\006 \001(\001\022\030\n\020bms_packcur_meas\030\007 \001("
      "\001\022J\n\013bms_chg_sts\030\010 \001(\01625.jmc_auto.canbus"
      ".Gw_bms_sts_0x181_181.Bms_chg_stsType\022\030\n"
      "\020bms_packvol_meas\030\t \001(\001\022R\n\017bms_balance_s"
      "ts\030\n \001(\01629.jmc_auto.canbus.Gw_bms_sts_0x"
      "181_181.Bms_balance_stsType\022\027\n\017bms_packn"
      "um_est\030\013 \001(\005\022P\n\016bms_hvdown_req\030\014 \001(\01628.j"
      "mc_auto.canbus.Gw_bms_sts_0x181_181.Bms_"
      "hvdown_reqType\022R\n\017bms_hvonoff_sts\030\r \001(\0162"
      "9.jmc_auto.canbus.Gw_bms_sts_0x181_181.B"
      "ms_hvonoff_stsType\022J\n\013bms_sys_sts\030\016 \001(\0162"
      "5.jmc_auto.canbus.Gw_bms_sts_0x181_181.B"
      "ms_sys_stsType\"\205\001\n\017Bms_err_levType\022\030\n\024BM"
      "S_ERR_LEV_NO_ERROR\020\000\022\034\n\030BMS_ERR_LEV_LEVE"
      "L1_ERROR\020\001\022\034\n\030BMS_ERR_LEV_LEVEL2_ERROR\020\002"
      "\022\034\n\030BMS_ERR_LEV_LEVEL3_ERROR\020\003\"\275\001\n\022Bms_i"
      "du_statusType\022\031\n\025BMS_IDU_STATUS_NORMAL\020\000"
      "\022%\n!BMS_IDU_STATUS_LEVEL1_600_A6_B8_V\020\001\022"
      "%\n!BMS_IDU_STATUS_LEVEL2_500_A6_B8_V\020\002\022>"
      "\n:BMS_IDU_STATUS_LEVEL3_CHARGE_100_A6_B8"
      "_V_DRIVE_400_A6_B8_V\020\003\"U\n\026Bms_batbalance"
      "_errType\022\035\n\031BMS_BATBALANCE_ERR_NORMAL\020\000\022"
      "\034\n\030BMS_BATBALANCE_ERR_ERROR\020\001\"\240\001\n\017Bms_ch"
      "g_stsType\022\031\n\025BMS_CHG_STS_NOT_READY\020\000\022!\n\035"
      "BMS_CHG_STS_READY_TO_CHARGING\020\001\022\030\n\024BMS_C"
      "HG_STS_CHARGING\020\002\022\033\n\027BMS_CHG_STS_CHARGEE"
      "RROR\020\003\022\030\n\024BMS_CHG_STS_CHARGEOK\020\004\"O\n\023Bms_"
      "balance_stsType\022\034\n\030BMS_BALANCE_STS_INACT"
      "IVE\020\000\022\032\n\026BMS_BALANCE_STS_ACTIVE\020\001\"O\n\022Bms"
      "_hvdown_reqType\022\035\n\031BMS_HVDOWN_REQ_NO_REQ"
      "UEST\020\000\022\032\n\026BMS_HVDOWN_REQ_REQUEST\020\001\"\216\001\n\023B"
      "ms_hvonoff_stsType\022\032\n\026BMS_HVONOFF_STS_HV"
      "_OFF\020\000\022\035\n\031BMS_HVONOFF_STS_PRECHARGE\020\001\022\031\n"
      "\025BMS_HVONOFF_STS_HV_ON\020\002\022!\n\035BMS_HVONOFF_"
      "STS_FAIL_TO_HV_ON\020\003\"k\n\017Bms_sys_stsType\022\024"
      "\n\020BMS_SYS_STS_INIT\020\000\022\022\n\016BMS_SYS_STS_OK\020\001"
      "\022\027\n\023BMS_SYS_STS_WARNING\020\002\022\025\n\021BMS_SYS_STS"
      "_FAULT\020\003\"\262\010\n\030Gw_vcu_control_0x185_185\022\026\n"
      "\016checksum_0x185\030\001 \001(\005\022\035\n\025rolling_counter"
      "_0x185\030\002 \001(\005\022l\n\032vcu_ems_engoperationstat"
      "us\030\003 \001(\0162H.jmc_auto.canbus.Gw_vcu_contro"
      "l_0x185_185.Vcu_ems_engoperationstatusTy"
      "pe\022\031\n\021vcu_maxchgpwr_alw\030\004 \001(\001\022\034\n\024vcu_max"
      "dischgpwr_alw\030\005 \001(\001\022V\n\017vcu_mcu_asd_req\030\006"
      " \001(\0162=.jmc_auto.canbus.Gw_vcu_control_0x"
      "185_185.Vcu_mcu_asd_reqType\022l\n\032vcu_mcu_m"
      "otor1_ctrmode_req\030\007 \001(\0162H.jmc_auto.canbu"
      "s.Gw_vcu_control_0x185_185.Vcu_mcu_motor"
      "1_ctrmode_reqType\"\214\002\n\036Vcu_ems_engoperati"
      "onstatusType\022&\n\"VCU_EMS_ENGOPERATIONSTAT"
      "US_STOPPED\020\000\022&\n\"VCU_EMS_ENGOPERATIONSTAT"
      "US_RUNNING\020\001\022#\n\037VCU_EMS_ENGOPERATIONSTAT"
      "US_IDLE\020\002\022#\n\037VCU_EMS_ENGOPERATIONSTATUS_"
      "DFCO\020\003\022\'\n#VCU_EMS_ENGOPERATIONSTATUS_CRA"
      "NKING\020\004\022\'\n#VCU_EMS_ENGOPERATIONSTATUS_ST"
      "ALLING\020\005\"F\n\023Vcu_mcu_asd_reqType\022\026\n\022VCU_M"
      "CU_ASD_REQ_ON\020\000\022\027\n\023VCU_MCU_ASD_REQ_OFF\020\001"
      "\"\232\002\n\036Vcu_mcu_motor1_ctrmode_reqType\022&\n\"V"
      "CU_MCU_MOTOR1_CTRMODE_REQ_DISABLE\020\000\022&\n\"V"
      "CU_MCU_MOTOR1_CTRMODE_REQ_STANDBY\020\001\022(\n$V"
      "CU_MCU_MOTOR1_CTRMODE_REQ_SPEEDMODE\020\002\022)\n"
      "%VCU_MCU_MOTOR1_CTRMODE_REQ_TORQUEMODE\020\003"
      "\022\'\n#VCU_MCU_MOTOR1_CTRMODE_REQ_ANTISLIP\020"
      "\004\022*\n&VCU_MCU_MOTOR1_CTRMODE_REQ_ALOFFSET"
      "CAL\020\005\"\222\004\n\025Ibc_status2_0x124_124\022\026\n\016check"
      "sum_0x124\030\001 \001(\005\022\035\n\025rolling_counter_0x124"
      "\030\002 \001(\005\022_\n\025ibc_decelerationvaild\030\003 \001(\0162@."
      "jmc_auto.canbus.Ibc_status2_0x124_124.Ib"
      "c_decelerationvaildType\022\030\n\020ibc_decelerat"
      "ion\030\004 \001(\001\022c\n\027ibc_brktmcpositionvaild\030\005 \001"
      "(\0162B.jmc_auto.canbus.Ibc_status2_0x124_1"
      "24.Ibc_brktmcpositionvaildType\022\032\n\022ibc_br"
      "ktmcposition\030\006 \001(\001\"_\n\031Ibc_decelerationva"
      "ildType\022!\n\035IBC_DECELERATIONVAILD_INVAILD"
      "\020\000\022\037\n\033IBC_DECELERATIONVAILD_VALID\020\001\"e\n\033I"
      "bc_brktmcpositionvaildType\022#\n\037IBC_BRKTMC"
      "POSITIONVAILD_INVAILD\020\000\022!\n\035IBC_BRKTMCPOS"
      "ITIONVAILD_VALID\020\001\"\367\037\n\024Gw_vcu_hmi_0x358_"
      "358\022\032\n\022vcu_checksum_0x358\030\001 \001(\005\022 \n\030vcu_r"
      "ollingcounter_0x358\030\002 \001(\005\022R\n\017vehiclehvst"
      "atus\030\003 \001(\01629.jmc_auto.canbus.Gw_vcu_hmi_"
      "0x358_358.VehiclehvstatusType\022\\\n\024packhea"
      "tcircuiterror\030\004 \001(\0162>.jmc_auto.canbus.Gw"
      "_vcu_hmi_0x358_358.PackheatcircuiterrorT"
      "ype\022P\n\016packheatstatus\030\005 \001(\01628.jmc_auto.c"
      "anbus.Gw_vcu_hmi_0x358_358.Packheatstatu"
      "sType\022b\n\027packcoolingcircuiterror\030\006 \001(\0162A"
      ".jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Pa"
      "ckcoolingcircuiterrorType\022d\n\030motorcoolin"
      "gcircuiterror\030\007 \001(\0162B.jmc_auto.canbus.Gw"
      "_vcu_hmi_0x358_358.Motorcoolingcircuiter"
      "rorType\022b\n\027vcu_batteryvoltageerror\030\010 \001(\016"
      "2A.jmc_auto.canbus.Gw_vcu_hmi_0x358_358."
      "Vcu_batteryvoltageerrorType\022\031\n\021vcu_batte"
      "rvoltage\030\t \001(\001\022\033\n\023vcu_targcruisespeed\030\n "
      "\001(\001\022b\n\027vcu_cruisecontrolstatus\030\013 \001(\0162A.j"
      "mc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_"
      "cruisecontrolstatusType\022\\\n\024vcu_driversta"
      "tus_sts\030\014 \001(\0162>.jmc_auto.canbus.Gw_vcu_h"
      "mi_0x358_358.Vcu_driverstatus_stsType\022V\n"
      "\021vcu_drivemode_sts\030\r \001(\0162;.jmc_auto.canb"
      "us.Gw_vcu_hmi_0x358_358.Vcu_drivemode_st"
      "sType\022P\n\016vcu_vehchg_sts\030\016 \001(\01628.jmc_auto"
      ".canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_"
      "stsType\022T\n\020vcu_tbox_veh_sts\030\017 \001(\0162:.jmc_"
      "auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbo"
      "x_veh_stsType\022h\n\032vcu_icm_energyrecoverym"
      "ode\030\020 \001(\0162D.jmc_auto.canbus.Gw_vcu_hmi_0"
      "x358_358.Vcu_icm_energyrecoverymodeType\022"
      "Z\n\023vcu_icm_vehhvil_err\030\021 \001(\0162=.jmc_auto."
      "canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehh"
      "vil_errType\022R\n\017vcu_icm_mot_err\030\022 \001(\01629.j"
      "mc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_"
      "icm_mot_errType\022b\n\027vcu_icm_packvoltoff_e"
      "rr\030\023 \001(\0162A.jmc_auto.canbus.Gw_vcu_hmi_0x"
      "358_358.Vcu_icm_packvoltoff_errType\022V\n\021v"
      "cu_icm_chggearlv\030\024 \001(\0162;.jmc_auto.canbus"
      ".Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvT"
      "ype\022Z\n\023vcu_icm_packsys_err\030\025 \001(\0162=.jmc_a"
      "uto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_"
      "packsys_errType\022X\n\022vcu_icm_drvsys_err\030\026 "
      "\001(\0162<.jmc_auto.canbus.Gw_vcu_hmi_0x358_3"
      "58.Vcu_icm_drvsys_errType\022R\n\017vcu_icm_veh"
      "_err\030\027 \001(\01629.jmc_auto.canbus.Gw_vcu_hmi_"
      "0x358_358.Vcu_icm_veh_errType\"\217\001\n\023Vehicl"
      "ehvstatusType\022\035\n\031VEHICLEHVSTATUS_NOT_REA"
      "DY\020\000\022\031\n\025VEHICLEHVSTATUS_HV_ON\020\001\022 \n\034VEHIC"
      "LEHVSTATUS_READYTODRIVE\020\002\022\034\n\030VEHICLEHVST"
      "ATUS_RESERVED\020\003\"[\n\030PackheatcircuiterrorT"
      "ype\022\037\n\033PACKHEATCIRCUITERROR_NORMAL\020\000\022\036\n\032"
      "PACKHEATCIRCUITERROR_ERROR\020\001\"L\n\022Packheat"
      "statusType\022\033\n\027PACKHEATSTATUS_INACTIVE\020\000\022"
      "\031\n\025PACKHEATSTATUS_ACTIVE\020\001\"d\n\033Packcoolin"
      "gcircuiterrorType\022\"\n\036PACKCOOLINGCIRCUITE"
      "RROR_NORMAL\020\000\022!\n\035PACKCOOLINGCIRCUITERROR"
      "_ERROR\020\001\"g\n\034MotorcoolingcircuiterrorType"
      "\022#\n\037MOTORCOOLINGCIRCUITERROR_NORMAL\020\000\022\"\n"
      "\036MOTORCOOLINGCIRCUITERROR_ERROR\020\001\"j\n\033Vcu"
      "_batteryvoltageerrorType\022&\n\"VCU_BATTERYV"
      "OLTAGEERROR_NO_WARNING\020\000\022#\n\037VCU_BATTERYV"
      "OLTAGEERROR_WARNING\020\001\"\270\001\n\033Vcu_cruisecont"
      "rolstatusType\022-\n)VCU_CRUISECONTROLSTATUS"
      "_CRUISECONTROLOOFF\020\000\022\"\n\036VCU_CRUISECONTRO"
      "LSTATUS_ACTIVE\020\001\022#\n\037VCU_CRUISECONTROLSTA"
      "TUS_STANDBY\020\002\022!\n\035VCU_CRUISECONTROLSTATUS"
      "_ERROR\020\003\"b\n\030Vcu_driverstatus_stsType\022!\n\035"
      "VCU_DRIVERSTATUS_STS_NO_DRIVE\020\000\022#\n\037VCU_D"
      "RIVERSTATUS_STS_DRIVE_MODE\020\001\"\207\001\n\025Vcu_dri"
      "vemode_stsType\022\035\n\031VCU_DRIVEMODE_STS_INVA"
      "LID\020\000\022\030\n\024VCU_DRIVEMODE_STS_EV\020\001\022\031\n\025VCU_D"
      "RIVEMODE_STS_HEV\020\002\022\032\n\026VCU_DRIVEMODE_STS_"
      "FUEL\020\003\"\260\001\n\022Vcu_vehchg_stsType\022\032\n\026VCU_VEH"
      "CHG_STS_INVALID\020\000\022\035\n\031VCU_VEHCHG_STS_STOP"
      "CHARGE\020\001\022\036\n\032VCU_VEHCHG_STS_DRIVECHARGE\020\002"
      "\022\033\n\027VCU_VEHCHG_STS_NOCHARGE\020\003\022\"\n\036VCU_VEH"
      "CHG_STS_CHARGECOMPLETED\020\004\"\206\001\n\024Vcu_tbox_v"
      "eh_stsType\022\034\n\030VCU_TBOX_VEH_STS_INVALID\020\000"
      "\022\032\n\026VCU_TBOX_VEH_STS_START\020\001\022\030\n\024VCU_TBOX"
      "_VEH_STS_OFF\020\002\022\032\n\026VCU_TBOX_VEH_STS_OTHER"
      "\020\003\"\270\001\n\036Vcu_icm_energyrecoverymodeType\022!\n"
      "\035VCU_ICM_ENERGYRECOVERYMODE_NO\020\000\022%\n!VCU_"
      "ICM_ENERGYRECOVERYMODE_LEVEL1\020\001\022%\n!VCU_I"
      "CM_ENERGYRECOVERYMODE_LEVEL2\020\002\022%\n!VCU_IC"
      "M_ENERGYRECOVERYMODE_LEVEL3\020\003\"X\n\027Vcu_icm"
      "_vehhvil_errType\022\036\n\032VCU_ICM_VEHHVIL_ERR_"
      "NORMAL\020\000\022\035\n\031VCU_ICM_VEHHVIL_ERR_ERROR\020\001\""
      "L\n\023Vcu_icm_mot_errType\022\032\n\026VCU_ICM_MOT_ER"
      "R_NORMAL\020\000\022\031\n\025VCU_ICM_MOT_ERR_ERROR\020\001\"d\n"
      "\033Vcu_icm_packvoltoff_errType\022\"\n\036VCU_ICM_"
      "PACKVOLTOFF_ERR_NORMAL\020\000\022!\n\035VCU_ICM_PACK"
      "VOLTOFF_ERR_ERROR\020\001\"p\n\025Vcu_icm_chggearlv"
      "Type\022 \n\034VCU_ICM_CHGGEARLV_NO_WARNING\020\000\0225"
      "\n1VCU_ICM_CHGGEARLV_PLEASE_SET_GEARPOSIT"
      "ION_TO_PARK\020\001\"X\n\027Vcu_icm_packsys_errType"
      "\022\036\n\032VCU_ICM_PACKSYS_ERR_NORMAL\020\000\022\035\n\031VCU_"
      "ICM_PACKSYS_ERR_ERROR\020\001\"U\n\026Vcu_icm_drvsy"
      "s_errType\022\035\n\031VCU_ICM_DRVSYS_ERR_NORMAL\020\000"
      "\022\034\n\030VCU_ICM_DRVSYS_ERR_ERROR\020\001\"L\n\023Vcu_ic"
      "m_veh_errType\022\032\n\026VCU_ICM_VEH_ERR_NORMAL\020"
      "\000\022\031\n\025VCU_ICM_VEH_ERR_ERROR\020\001\"\235\r\n\006Teshun\022"
      "C\n\024epb_status_0x152_152\030\001 \001(\0132%.jmc_auto"
      ".canbus.Epb_status_0x152_152\022;\n\020gw_abs_0"
      "x211_211\030\002 \001(\0132!.jmc_auto.canbus.Gw_abs_"
      "0x211_211\022\?\n\022bcm_door_0x310_310\030\003 \001(\0132#."
      "jmc_auto.canbus.Bcm_door_0x310_310\022C\n\024gw"
      "_vcu_sts_0x218_218\030\004 \001(\0132%.jmc_auto.canb"
      "us.Gw_vcu_sts_0x218_218\022O\n\032adu_controldr"
      "ive_0x120_120\030\005 \001(\0132+.jmc_auto.canbus.Ad"
      "u_controldrive_0x120_120\022M\n\031gw_vcu_contr"
      "ol2_0x131_131\030\006 \001(\0132*.jmc_auto.canbus.Gw"
      "_vcu_control2_0x131_131\022M\n\031gw_scu_shifte"
      "rsts_0xc8_c8\030\007 \001(\0132*.jmc_auto.canbus.Gw_"
      "scu_shiftersts_0xc8_c8\022M\n\031gw_vcu_drivest"
      "s_0x10a_10a\030\010 \001(\0132*.jmc_auto.canbus.Gw_v"
      "cu_drivests_0x10a_10a\022O\n\032adu_controlbrak"
      "e_0x110_110\030\t \001(\0132+.jmc_auto.canbus.Adu_"
      "controlbrake_0x110_110\022E\n\025eps2_status_0x"
      "112_112\030\n \001(\0132&.jmc_auto.canbus.Eps2_sta"
      "tus_0x112_112\022G\n\026gw_mcu_power_0x226_226\030"
      "\013 \001(\0132\'.jmc_auto.canbus.Gw_mcu_power_0x2"
      "26_226\022M\n\031adu_controleps2_0x100_100\030\014 \001("
      "\0132*.jmc_auto.canbus.Adu_controleps2_0x10"
      "0_100\022I\n\027gw_mcu_output_0x225_225\030\r \001(\0132("
      ".jmc_auto.canbus.Gw_mcu_output_0x225_225"
      "\022C\n\024gw_abs_sts_0x221_221\030\016 \001(\0132%.jmc_aut"
      "o.canbus.Gw_abs_sts_0x221_221\022C\n\024ibc_sta"
      "tus_0x122_122\030\017 \001(\0132%.jmc_auto.canbus.Ib"
      "c_status_0x122_122\022G\n\026gw_vcu_whltq_0x107"
      "_107\030\020 \001(\0132\'.jmc_auto.canbus.Gw_vcu_whlt"
      "q_0x107_107\022E\n\025bcm_bodysts_0x344_344\030\021 \001"
      "(\0132&.jmc_auto.canbus.Bcm_bodysts_0x344_3"
      "44\022K\n\030gw_bms_display_0x323_323\030\022 \001(\0132).j"
      "mc_auto.canbus.Gw_bms_display_0x323_323\022"
      "M\n\031adu_bodycontrol_0x333_333\030\023 \001(\0132*.jmc"
      "_auto.canbus.Adu_bodycontrol_0x333_333\022C"
      "\n\024gw_bms_sts_0x181_181\030\024 \001(\0132%.jmc_auto."
      "canbus.Gw_bms_sts_0x181_181\022K\n\030gw_vcu_co"
      "ntrol_0x185_185\030\025 \001(\0132).jmc_auto.canbus."
      "Gw_vcu_control_0x185_185\022E\n\025ibc_status2_"
      "0x124_124\030\026 \001(\0132&.jmc_auto.canbus.Ibc_st"
      "atus2_0x124_124\022C\n\024gw_vcu_hmi_0x358_358\030"
      "\027 \001(\0132%.jmc_auto.canbus.Gw_vcu_hmi_0x358"
      "_358"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 41004);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modules/canbus/proto/teshun.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto

const ::google::protobuf::EnumDescriptor* Epb_status_0x152_152_Epb_brakelampreqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[0];
}
bool Epb_status_0x152_152_Epb_brakelampreqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Epb_status_0x152_152_Epb_brakelampreqType Epb_status_0x152_152::EPB_BRAKELAMPREQ_BRAKE_LAMP_OFF;
const Epb_status_0x152_152_Epb_brakelampreqType Epb_status_0x152_152::EPB_BRAKELAMPREQ_BRAKE_LAMP_ON;
const Epb_status_0x152_152_Epb_brakelampreqType Epb_status_0x152_152::Epb_brakelampreqType_MIN;
const Epb_status_0x152_152_Epb_brakelampreqType Epb_status_0x152_152::Epb_brakelampreqType_MAX;
const int Epb_status_0x152_152::Epb_brakelampreqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Epb_status_0x152_152_Epb_sysfaultstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[1];
}
bool Epb_status_0x152_152_Epb_sysfaultstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::EPB_SYSFAULTSTATUS_NO_FAULT;
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::EPB_SYSFAULTSTATUS_WARNING;
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::EPB_SYSFAULTSTATUS_FAULT;
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::EPB_SYSFAULTSTATUS_RESEVED;
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::Epb_sysfaultstatusType_MIN;
const Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::Epb_sysfaultstatusType_MAX;
const int Epb_status_0x152_152::Epb_sysfaultstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Epb_status_0x152_152_Epb_parkingstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[2];
}
bool Epb_status_0x152_152_Epb_parkingstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::EPB_PARKINGSTATUS_RELEASED;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::EPB_PARKINGSTATUS_RELEASE_ONGOING;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::EPB_PARKINGSTATUS_PARK_ONGOING;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::EPB_PARKINGSTATUS_PARKED;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::EPB_PARKINGSTATUS_UNKOWN;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::Epb_parkingstatusType_MIN;
const Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::Epb_parkingstatusType_MAX;
const int Epb_status_0x152_152::Epb_parkingstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Epb_status_0x152_152_Epb_switchstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[3];
}
bool Epb_status_0x152_152_Epb_switchstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::EPB_SWITCHSTATUS_NO_ACTION_ON_SWITCH;
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::EPB_SWITCHSTATUS_SWITCH_TO_RELEASE;
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::EPB_SWITCHSTATUS_SWITCH_TO_PARK;
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::EPB_SWITCHSTATUS_RESERVED;
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::Epb_switchstatusType_MIN;
const Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::Epb_switchstatusType_MAX;
const int Epb_status_0x152_152::Epb_switchstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_0x211_211_Abs_whlspdreristatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[4];
}
bool Gw_abs_0x211_211_Abs_whlspdreristatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_0x211_211_Abs_whlspdreristatusType Gw_abs_0x211_211::ABS_WHLSPDRERISTATUS_VALID;
const Gw_abs_0x211_211_Abs_whlspdreristatusType Gw_abs_0x211_211::ABS_WHLSPDRERISTATUS_INVALID;
const Gw_abs_0x211_211_Abs_whlspdreristatusType Gw_abs_0x211_211::Abs_whlspdreristatusType_MIN;
const Gw_abs_0x211_211_Abs_whlspdreristatusType Gw_abs_0x211_211::Abs_whlspdreristatusType_MAX;
const int Gw_abs_0x211_211::Abs_whlspdreristatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_0x211_211_Abs_whlspdrelestatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[5];
}
bool Gw_abs_0x211_211_Abs_whlspdrelestatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_0x211_211_Abs_whlspdrelestatusType Gw_abs_0x211_211::ABS_WHLSPDRELESTATUS_VALID;
const Gw_abs_0x211_211_Abs_whlspdrelestatusType Gw_abs_0x211_211::ABS_WHLSPDRELESTATUS_INVALID;
const Gw_abs_0x211_211_Abs_whlspdrelestatusType Gw_abs_0x211_211::Abs_whlspdrelestatusType_MIN;
const Gw_abs_0x211_211_Abs_whlspdrelestatusType Gw_abs_0x211_211::Abs_whlspdrelestatusType_MAX;
const int Gw_abs_0x211_211::Abs_whlspdrelestatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_0x211_211_Abs_whlspdfrntristatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[6];
}
bool Gw_abs_0x211_211_Abs_whlspdfrntristatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_0x211_211_Abs_whlspdfrntristatusType Gw_abs_0x211_211::ABS_WHLSPDFRNTRISTATUS_VALID;
const Gw_abs_0x211_211_Abs_whlspdfrntristatusType Gw_abs_0x211_211::ABS_WHLSPDFRNTRISTATUS_INVALID;
const Gw_abs_0x211_211_Abs_whlspdfrntristatusType Gw_abs_0x211_211::Abs_whlspdfrntristatusType_MIN;
const Gw_abs_0x211_211_Abs_whlspdfrntristatusType Gw_abs_0x211_211::Abs_whlspdfrntristatusType_MAX;
const int Gw_abs_0x211_211::Abs_whlspdfrntristatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_0x211_211_Abs_whlspdfrntlestatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[7];
}
bool Gw_abs_0x211_211_Abs_whlspdfrntlestatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_0x211_211_Abs_whlspdfrntlestatusType Gw_abs_0x211_211::ABS_WHLSPDFRNTLESTATUS_VALID;
const Gw_abs_0x211_211_Abs_whlspdfrntlestatusType Gw_abs_0x211_211::ABS_WHLSPDFRNTLESTATUS_INVALID;
const Gw_abs_0x211_211_Abs_whlspdfrntlestatusType Gw_abs_0x211_211::Abs_whlspdfrntlestatusType_MIN;
const Gw_abs_0x211_211_Abs_whlspdfrntlestatusType Gw_abs_0x211_211::Abs_whlspdfrntlestatusType_MAX;
const int Gw_abs_0x211_211::Abs_whlspdfrntlestatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_rearwiperstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[8];
}
bool Bcm_door_0x310_310_Bcm_rearwiperstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::BCM_REARWIPERSTS_NO_USED;
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::BCM_REARWIPERSTS_OFF;
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::BCM_REARWIPERSTS_ON;
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::BCM_REARWIPERSTS_RESERVED;
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::Bcm_rearwiperstsType_MIN;
const Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::Bcm_rearwiperstsType_MAX;
const int Bcm_door_0x310_310::Bcm_rearwiperstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_frontwiperstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[9];
}
bool Bcm_door_0x310_310_Bcm_frontwiperstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::BCM_FRONTWIPERSTS_NO_USED;
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::BCM_FRONTWIPERSTS_OFF;
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::BCM_FRONTWIPERSTS_LOW;
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::BCM_FRONTWIPERSTS_HIGH;
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::Bcm_frontwiperstsType_MIN;
const Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::Bcm_frontwiperstsType_MAX;
const int Bcm_door_0x310_310::Bcm_frontwiperstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_chargeplugstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[10];
}
bool Bcm_door_0x310_310_Bcm_chargeplugstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::BCM_CHARGEPLUGSTS_NO_USED;
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::BCM_CHARGEPLUGSTS_CLOSED;
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::BCM_CHARGEPLUGSTS_OPEN;
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::BCM_CHARGEPLUGSTS_FAULT;
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::Bcm_chargeplugstsType_MIN;
const Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::Bcm_chargeplugstsType_MAX;
const int Bcm_door_0x310_310::Bcm_chargeplugstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_enginehoodstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[11];
}
bool Bcm_door_0x310_310_Bcm_enginehoodstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::BCM_ENGINEHOODSTS_NO_USED;
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::BCM_ENGINEHOODSTS_CLOSED;
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::BCM_ENGINEHOODSTS_OPEN;
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::BCM_ENGINEHOODSTS_FAULT;
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::Bcm_enginehoodstsType_MIN;
const Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::Bcm_enginehoodstsType_MAX;
const int Bcm_door_0x310_310::Bcm_enginehoodstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[12];
}
bool Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType Bcm_door_0x310_310::BCM_TRUNKDOORPREUNLOCKSTS_NO_USED_NO_ACTION;
const Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType Bcm_door_0x310_310::BCM_TRUNKDOORPREUNLOCKSTS_PREUNLOCKED;
const Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType Bcm_door_0x310_310::Bcm_trunkdoorpreunlockstsType_MIN;
const Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType Bcm_door_0x310_310::Bcm_trunkdoorpreunlockstsType_MAX;
const int Bcm_door_0x310_310::Bcm_trunkdoorpreunlockstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_antitheftstsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[13];
}
bool Bcm_door_0x310_310_Bcm_antitheftstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::BCM_ANTITHEFTSTS_RELIEVE_ANTI_THEFT;
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::BCM_ANTITHEFTSTS_ANTI_THEFT;
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::BCM_ANTITHEFTSTS_ANTI_THEFT_PASS;
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::BCM_ANTITHEFTSTS_ANTI_THEFT_FAULT_ALARM;
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::Bcm_antitheftstsType_MIN;
const Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::Bcm_antitheftstsType_MAX;
const int Bcm_door_0x310_310::Bcm_antitheftstsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_lockunlockfeedbackType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[14];
}
bool Bcm_door_0x310_310_Bcm_lockunlockfeedbackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 31:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_NO_LOCK_UNLOCK_ACTION;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_PE_LOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_RKE_LOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_LEAVE_VEHICLE_LOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_MASTER_LOCK_D6_D8_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_FINGER_LOCK_BB_FA_B3_D7_C9_CF_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_RKE_30S_AUTOLOCK_BF_D8_D7_AF_BB_C0;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_PE_30S_AUTOLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_NEAR_TO_VEHICLE_30S_AUTOLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_ANY_OTHER_LOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_PE_UNLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_RKE_UNLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_NEAR_TO_VEHICLE_UNLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_MASTER_UNLOCK_D6_E2_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_FINGER_UNLOCK_BB_FA_B3_E2_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_CRASHUNLOCK_C5_F6_BD_E2_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_KEYREMOVALUNLOCK_B0_CE_B3_E2_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_ENGOFFUNLOCK_BB_F0_BD_E2_CB_F8;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::BCM_LOCKUNLOCKFEEDBACK_ANY_OTHER_UNLOCK;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::Bcm_lockunlockfeedbackType_MIN;
const Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::Bcm_lockunlockfeedbackType_MAX;
const int Bcm_door_0x310_310::Bcm_lockunlockfeedbackType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorlockststrunkType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[15];
}
bool Bcm_door_0x310_310_Bcm_doorlockststrunkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::BCM_DOORLOCKSTSTRUNK_NO_USED;
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::BCM_DOORLOCKSTSTRUNK_LOCKED;
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::BCM_DOORLOCKSTSTRUNK_UNLOCKED;
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::BCM_DOORLOCKSTSTRUNK_FAULT;
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::Bcm_doorlockststrunkType_MIN;
const Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::Bcm_doorlockststrunkType_MAX;
const int Bcm_door_0x310_310::Bcm_doorlockststrunkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorststrunkType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[16];
}
bool Bcm_door_0x310_310_Bcm_doorststrunkType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::BCM_DOORSTSTRUNK_NO_USED;
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::BCM_DOORSTSTRUNK_CLOSED;
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::BCM_DOORSTSTRUNK_OPEN;
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::BCM_DOORSTSTRUNK_FAULT;
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::Bcm_doorststrunkType_MIN;
const Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::Bcm_doorststrunkType_MAX;
const int Bcm_door_0x310_310::Bcm_doorststrunkType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorlockstsrearriType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[17];
}
bool Bcm_door_0x310_310_Bcm_doorlockstsrearriType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARRI_NO_USED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARRI_LOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARRI_UNLOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARRI_FAULT;
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::Bcm_doorlockstsrearriType_MIN;
const Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::Bcm_doorlockstsrearriType_MAX;
const int Bcm_door_0x310_310::Bcm_doorlockstsrearriType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorlockstsrearleType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[18];
}
bool Bcm_door_0x310_310_Bcm_doorlockstsrearleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARLE_NO_USED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARLE_LOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARLE_UNLOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::BCM_DOORLOCKSTSREARLE_FAULT;
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::Bcm_doorlockstsrearleType_MIN;
const Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::Bcm_doorlockstsrearleType_MAX;
const int Bcm_door_0x310_310::Bcm_doorlockstsrearleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorlockstsfrntriType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[19];
}
bool Bcm_door_0x310_310_Bcm_doorlockstsfrntriType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTRI_NO_USED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTRI_LOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTRI_UNLOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTRI_FAULT;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::Bcm_doorlockstsfrntriType_MIN;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::Bcm_doorlockstsfrntriType_MAX;
const int Bcm_door_0x310_310::Bcm_doorlockstsfrntriType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorlockstsfrntleType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[20];
}
bool Bcm_door_0x310_310_Bcm_doorlockstsfrntleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTLE_NO_USED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTLE_LOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTLE_UNLOCKED;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::BCM_DOORLOCKSTSFRNTLE_FAULT;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::Bcm_doorlockstsfrntleType_MIN;
const Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::Bcm_doorlockstsfrntleType_MAX;
const int Bcm_door_0x310_310::Bcm_doorlockstsfrntleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorstsrearriType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[21];
}
bool Bcm_door_0x310_310_Bcm_doorstsrearriType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::BCM_DOORSTSREARRI_NO_USED;
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::BCM_DOORSTSREARRI_CLOSED;
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::BCM_DOORSTSREARRI_OPEN;
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::BCM_DOORSTSREARRI_FAULT;
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::Bcm_doorstsrearriType_MIN;
const Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::Bcm_doorstsrearriType_MAX;
const int Bcm_door_0x310_310::Bcm_doorstsrearriType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorstsrearleType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[22];
}
bool Bcm_door_0x310_310_Bcm_doorstsrearleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::BCM_DOORSTSREARLE_NO_USED;
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::BCM_DOORSTSREARLE_CLOSED;
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::BCM_DOORSTSREARLE_OPEN;
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::BCM_DOORSTSREARLE_FAULT;
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::Bcm_doorstsrearleType_MIN;
const Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::Bcm_doorstsrearleType_MAX;
const int Bcm_door_0x310_310::Bcm_doorstsrearleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorstsfrntriType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[23];
}
bool Bcm_door_0x310_310_Bcm_doorstsfrntriType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::BCM_DOORSTSFRNTRI_NO_USED;
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::BCM_DOORSTSFRNTRI_CLOSED;
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::BCM_DOORSTSFRNTRI_OPEN;
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::BCM_DOORSTSFRNTRI_FAULT;
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::Bcm_doorstsfrntriType_MIN;
const Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::Bcm_doorstsfrntriType_MAX;
const int Bcm_door_0x310_310::Bcm_doorstsfrntriType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_door_0x310_310_Bcm_doorstsfrntleType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[24];
}
bool Bcm_door_0x310_310_Bcm_doorstsfrntleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::BCM_DOORSTSFRNTLE_NO_USED;
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::BCM_DOORSTSFRNTLE_CLOSED;
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::BCM_DOORSTSFRNTLE_OPEN;
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::BCM_DOORSTSFRNTLE_FAULT;
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::Bcm_doorstsfrntleType_MIN;
const Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::Bcm_doorstsfrntleType_MAX;
const int Bcm_door_0x310_310::Bcm_doorstsfrntleType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_nlockrequestType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[25];
}
bool Gw_vcu_sts_0x218_218_Vcu_nlockrequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::VCU_NLOCKREQUEST_NO_USE;
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::VCU_NLOCKREQUEST_LOCK;
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::VCU_NLOCKREQUEST_UNLOCK;
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::VCU_NLOCKREQUEST_INVALID;
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::Vcu_nlockrequestType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::Vcu_nlockrequestType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_nlockrequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_plockrequestType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[26];
}
bool Gw_vcu_sts_0x218_218_Vcu_plockrequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::VCU_PLOCKREQUEST_NO_USE;
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::VCU_PLOCKREQUEST_LOCK;
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::VCU_PLOCKREQUEST_UNLOCK;
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::VCU_PLOCKREQUEST_INVALID;
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::Vcu_plockrequestType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::Vcu_plockrequestType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_plockrequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[27];
}
bool Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_STANDBY_IG_OFF_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_VEHICLE_RESET_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_HV_ACTIVATION_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_DRIVING_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_HV_TERMINATION_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_CHARGING_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_RESERVED;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::VCU_VEHICLE_MODE_EMER_DRIVING_MODE;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::Vcu_vehicle_modeType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::Vcu_vehicle_modeType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_vehicle_modeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[28];
}
bool Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType Gw_vcu_sts_0x218_218::VCU_ENGADDFUEL_RQ_NO_RQ;
const Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType Gw_vcu_sts_0x218_218::VCU_ENGADDFUEL_RQ_RQ;
const Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType Gw_vcu_sts_0x218_218::Vcu_engaddfuel_rqType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType Gw_vcu_sts_0x218_218::Vcu_engaddfuel_rqType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_engaddfuel_rqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_fan_rqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[29];
}
bool Gw_vcu_sts_0x218_218_Vcu_fan_rqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::VCU_FAN_RQ_NO_RQ;
const Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::VCU_FAN_RQ_FAN_LOW_RQ;
const Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::VCU_FAN_RQ_FAN_HIGH_RQ;
const Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::Vcu_fan_rqType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::Vcu_fan_rqType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_fan_rqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_engstart_rqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[30];
}
bool Gw_vcu_sts_0x218_218_Vcu_engstart_rqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_engstart_rqType Gw_vcu_sts_0x218_218::VCU_ENGSTART_RQ_NO_RQ;
const Gw_vcu_sts_0x218_218_Vcu_engstart_rqType Gw_vcu_sts_0x218_218::VCU_ENGSTART_RQ_RQ;
const Gw_vcu_sts_0x218_218_Vcu_engstart_rqType Gw_vcu_sts_0x218_218::Vcu_engstart_rqType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_engstart_rqType Gw_vcu_sts_0x218_218::Vcu_engstart_rqType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_engstart_rqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[31];
}
bool Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::VCU_DCU_PARKREQUEST_OFF;
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::VCU_DCU_PARKREQUEST_PARK;
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::VCU_DCU_PARKREQUEST_UNPARK;
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::VCU_DCU_PARKREQUEST_INVALID;
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::Vcu_dcu_parkrequestType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::Vcu_dcu_parkrequestType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_dcu_parkrequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[32];
}
bool Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITIONVALID_VALID;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITIONVALID_INVALID;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionvalidType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionvalidType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionvalidType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[33];
}
bool Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_INITIAL;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_P_PARK;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_R_REVERSE;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_N_NEUTRAL;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_D_DRIVE;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::VCU_ACTUALGEARLEVELPOSITION_INVALID;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_actualgearlevelpositionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[34];
}
bool Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType Gw_vcu_sts_0x218_218::VCU_BMS_CHGSTART_ALW_FORBID;
const Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType Gw_vcu_sts_0x218_218::VCU_BMS_CHGSTART_ALW_ALLOW;
const Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType Gw_vcu_sts_0x218_218::Vcu_bms_chgstart_alwType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType Gw_vcu_sts_0x218_218::Vcu_bms_chgstart_alwType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_bms_chgstart_alwType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[35];
}
bool Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType Gw_vcu_sts_0x218_218::VCU_BMS_HVONOFF_REQ_FORBID;
const Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType Gw_vcu_sts_0x218_218::VCU_BMS_HVONOFF_REQ_ALLOW;
const Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType Gw_vcu_sts_0x218_218::Vcu_bms_hvonoff_reqType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType Gw_vcu_sts_0x218_218::Vcu_bms_hvonoff_reqType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_bms_hvonoff_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[36];
}
bool Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::VCU_VEHFAILGRADE_ERR_NORMAL;
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::VCU_VEHFAILGRADE_ERR_LEVEL1;
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::VCU_VEHFAILGRADE_ERR_LEVEL2;
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::VCU_VEHFAILGRADE_ERR_LEVEL3;
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::Vcu_vehfailgrade_errType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::Vcu_vehfailgrade_errType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_vehfailgrade_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_running_modeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[37];
}
bool Gw_vcu_sts_0x218_218_Vcu_running_modeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::VCU_RUNNING_MODE_STANDBY;
const Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::VCU_RUNNING_MODE_EV_MODE;
const Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::VCU_RUNNING_MODE_HYBIRD_MODE;
const Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::Vcu_running_modeType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::Vcu_running_modeType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_running_modeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[38];
}
bool Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType Gw_vcu_sts_0x218_218::VCU_BP_SLEEP_ALLOWED_NOT_ALLOWED;
const Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType Gw_vcu_sts_0x218_218::VCU_BP_SLEEP_ALLOWED_ALLOWED;
const Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType Gw_vcu_sts_0x218_218::Vcu_bp_sleep_allowedType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType Gw_vcu_sts_0x218_218::Vcu_bp_sleep_allowedType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_bp_sleep_allowedType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_hvil_inType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[39];
}
bool Gw_vcu_sts_0x218_218_Vcu_hvil_inType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_hvil_inType Gw_vcu_sts_0x218_218::VCU_HVIL_IN_OFF;
const Gw_vcu_sts_0x218_218_Vcu_hvil_inType Gw_vcu_sts_0x218_218::VCU_HVIL_IN_ON;
const Gw_vcu_sts_0x218_218_Vcu_hvil_inType Gw_vcu_sts_0x218_218::Vcu_hvil_inType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_hvil_inType Gw_vcu_sts_0x218_218::Vcu_hvil_inType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_hvil_inType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_sts_0x218_218_Vcu_hvil_outType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[40];
}
bool Gw_vcu_sts_0x218_218_Vcu_hvil_outType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_sts_0x218_218_Vcu_hvil_outType Gw_vcu_sts_0x218_218::VCU_HVIL_OUT_OFF;
const Gw_vcu_sts_0x218_218_Vcu_hvil_outType Gw_vcu_sts_0x218_218::VCU_HVIL_OUT_ON;
const Gw_vcu_sts_0x218_218_Vcu_hvil_outType Gw_vcu_sts_0x218_218::Vcu_hvil_outType_MIN;
const Gw_vcu_sts_0x218_218_Vcu_hvil_outType Gw_vcu_sts_0x218_218::Vcu_hvil_outType_MAX;
const int Gw_vcu_sts_0x218_218::Vcu_hvil_outType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controldrive_0x120_120_Adu_controtorque_rawflagType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[41];
}
bool Adu_controldrive_0x120_120_Adu_controtorque_rawflagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controldrive_0x120_120_Adu_controtorque_rawflagType Adu_controldrive_0x120_120::ADU_CONTROTORQUE_RAWFLAG_NO_FILTERS;
const Adu_controldrive_0x120_120_Adu_controtorque_rawflagType Adu_controldrive_0x120_120::ADU_CONTROTORQUE_RAWFLAG_FILTERS;
const Adu_controldrive_0x120_120_Adu_controtorque_rawflagType Adu_controldrive_0x120_120::Adu_controtorque_rawflagType_MIN;
const Adu_controldrive_0x120_120_Adu_controtorque_rawflagType Adu_controldrive_0x120_120::Adu_controtorque_rawflagType_MAX;
const int Adu_controldrive_0x120_120::Adu_controtorque_rawflagType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controldrive_0x120_120_Adu_controtorque_enableType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[42];
}
bool Adu_controldrive_0x120_120_Adu_controtorque_enableType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controldrive_0x120_120_Adu_controtorque_enableType Adu_controldrive_0x120_120::ADU_CONTROTORQUE_ENABLE_DISABLE;
const Adu_controldrive_0x120_120_Adu_controtorque_enableType Adu_controldrive_0x120_120::ADU_CONTROTORQUE_ENABLE_ENABLE;
const Adu_controldrive_0x120_120_Adu_controtorque_enableType Adu_controldrive_0x120_120::Adu_controtorque_enableType_MIN;
const Adu_controldrive_0x120_120_Adu_controtorque_enableType Adu_controldrive_0x120_120::Adu_controtorque_enableType_MAX;
const int Adu_controldrive_0x120_120::Adu_controtorque_enableType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controldrive_0x120_120_Adu_targetgear_positionType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[43];
}
bool Adu_controldrive_0x120_120_Adu_targetgear_positionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_INITIAL;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_P_PARK;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_R_REVERSE;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_N_NEUTRAL;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_D_DRIVE;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::ADU_TARGETGEAR_POSITION_INVALID;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::Adu_targetgear_positionType_MIN;
const Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::Adu_targetgear_positionType_MAX;
const int Adu_controldrive_0x120_120::Adu_targetgear_positionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controldrive_0x120_120_Adu_targetgear_enableType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[44];
}
bool Adu_controldrive_0x120_120_Adu_targetgear_enableType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controldrive_0x120_120_Adu_targetgear_enableType Adu_controldrive_0x120_120::ADU_TARGETGEAR_ENABLE_DISABLE;
const Adu_controldrive_0x120_120_Adu_targetgear_enableType Adu_controldrive_0x120_120::ADU_TARGETGEAR_ENABLE_ENABLE;
const Adu_controldrive_0x120_120_Adu_targetgear_enableType Adu_controldrive_0x120_120::Adu_targetgear_enableType_MIN;
const Adu_controldrive_0x120_120_Adu_targetgear_enableType Adu_controldrive_0x120_120::Adu_targetgear_enableType_MAX;
const int Adu_controldrive_0x120_120::Adu_targetgear_enableType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control2_0x131_131_Vcu_sts_vcuType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[45];
}
bool Gw_vcu_control2_0x131_131_Vcu_sts_vcuType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::VCU_STS_VCU_INITIALIZING;
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::VCU_STS_VCU_READY;
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::VCU_STS_VCU_WARNING;
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::VCU_STS_VCU_FAULT;
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::Vcu_sts_vcuType_MIN;
const Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::Vcu_sts_vcuType_MAX;
const int Gw_vcu_control2_0x131_131::Vcu_sts_vcuType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control2_0x131_131_Vcu_brake_flagType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[46];
}
bool Gw_vcu_control2_0x131_131_Vcu_brake_flagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control2_0x131_131_Vcu_brake_flagType Gw_vcu_control2_0x131_131::VCU_BRAKE_FLAG_NO_ACTIVE;
const Gw_vcu_control2_0x131_131_Vcu_brake_flagType Gw_vcu_control2_0x131_131::VCU_BRAKE_FLAG_ACTIVE;
const Gw_vcu_control2_0x131_131_Vcu_brake_flagType Gw_vcu_control2_0x131_131::Vcu_brake_flagType_MIN;
const Gw_vcu_control2_0x131_131_Vcu_brake_flagType Gw_vcu_control2_0x131_131::Vcu_brake_flagType_MAX;
const int Gw_vcu_control2_0x131_131::Vcu_brake_flagType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control2_0x131_131_Vcu_tractor_flagType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[47];
}
bool Gw_vcu_control2_0x131_131_Vcu_tractor_flagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control2_0x131_131_Vcu_tractor_flagType Gw_vcu_control2_0x131_131::VCU_TRACTOR_FLAG_NO_ACTIVE;
const Gw_vcu_control2_0x131_131_Vcu_tractor_flagType Gw_vcu_control2_0x131_131::VCU_TRACTOR_FLAG_ACTIVE;
const Gw_vcu_control2_0x131_131_Vcu_tractor_flagType Gw_vcu_control2_0x131_131::Vcu_tractor_flagType_MIN;
const Gw_vcu_control2_0x131_131_Vcu_tractor_flagType Gw_vcu_control2_0x131_131::Vcu_tractor_flagType_MAX;
const int Gw_vcu_control2_0x131_131::Vcu_tractor_flagType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[48];
}
bool Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_ECOHEV;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_ECO_EV;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_PWRHEV;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_PWREV;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_EV_ECO;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_EV_POWER;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::VCU_PWT_MODE_DASH_RESERVED;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::Vcu_pwt_mode_dashType_MIN;
const Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::Vcu_pwt_mode_dashType_MAX;
const int Gw_vcu_control2_0x131_131::Vcu_pwt_mode_dashType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[49];
}
bool Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType Gw_vcu_control2_0x131_131::VCU_MCU_MOTOR1_CAPDISCHARGE_REQ_NO_REQUEST;
const Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType Gw_vcu_control2_0x131_131::VCU_MCU_MOTOR1_CAPDISCHARGE_REQ_DISCHARGE;
const Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType Gw_vcu_control2_0x131_131::Vcu_mcu_motor1_capdischarge_reqType_MIN;
const Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType Gw_vcu_control2_0x131_131::Vcu_mcu_motor1_capdischarge_reqType_MAX;
const int Gw_vcu_control2_0x131_131::Vcu_mcu_motor1_capdischarge_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[50];
}
bool Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SCU_SHIFTERLOCKSTATUS_UNLOCKED;
const Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SCU_SHIFTERLOCKSTATUS_LOCKED;
const Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SCU_SHIFTERLOCKSTATUS_FAULT;
const Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::Scu_shifterlockstatusType_MIN;
const Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::Scu_shifterlockstatusType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::Scu_shifterlockstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[51];
}
bool Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SHIFTERLOCKSTATUS_UNLOCKED;
const Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SHIFTERLOCKSTATUS_LOCKED;
const Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::SHIFTERLOCKSTATUS_FAULT;
const Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::ShifterlockstatusType_MIN;
const Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::ShifterlockstatusType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::ShifterlockstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[52];
}
bool Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONFAILURE_NOFAULT;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONFAILURE_MODESELECTORSENSORFAIL;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONFAILURE_ROTARYPOSITIONSENSORFAIL;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONFAILURE_CANBUSCOMMUNICATION;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONFAILURE_SOLENOIDFAIL;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::ShifterpositionfailureType_MIN;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::ShifterpositionfailureType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::ShifterpositionfailureType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_ShifterpositionType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[53];
}
bool Gw_scu_shiftersts_0xc8_c8_ShifterpositionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_ERROR;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_MANUAL_MODE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_DRIVE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_NEUTRAL;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_REVERSE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_PARK;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_UPSHIFT;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITION_DOWNSHIFT;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::ShifterpositionType_MIN;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::ShifterpositionType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::ShifterpositionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[54];
}
bool Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType_IsValid(int value) {
  switch (value) {
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 12:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_DOWNSHIFT;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_UPSHIFT;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_PARK;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_REVERSE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_NEUTRAL;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_DRIVE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_MANUAL_MODE;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::SHIFTERPOSITIONINV_ERROR;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::ShifterpositioninvType_MIN;
const Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::ShifterpositioninvType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::ShifterpositioninvType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[55];
}
bool Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::SYS_STS_SCU_INIT;
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::SYS_STS_SCU_OK;
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::SYS_STS_SCU_WARNING;
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::SYS_STS_SCU_FAULT;
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::Sys_sts_scuType_MIN;
const Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::Sys_sts_scuType_MAX;
const int Gw_scu_shiftersts_0xc8_c8::Sys_sts_scuType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[56];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType Gw_vcu_drivests_0x10a_10a::VCU_VEHICLEERROR_INTERVENE_NOTINTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType Gw_vcu_drivests_0x10a_10a::VCU_VEHICLEERROR_INTERVENE_INTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_vehicleerror_interveneType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_vehicleerror_interveneType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_vehicleerror_interveneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[57];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_TORQUE_CONTROLSTATUS_TEMPORARILY_INHIBIT;
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_TORQUE_CONTROLSTATUS_AVAILABLEFORCONTROL;
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_TORQUE_CONTROLSTATUS_ACTIVE;
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_TORQUE_CONTROLSTATUS_PERMANENTLY_FAILED;
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::Vcu_torque_controlstatusType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::Vcu_torque_controlstatusType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_torque_controlstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[58];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType Gw_vcu_drivests_0x10a_10a::VCU_TORQUEDRIVER_INTERVENE_NOTINTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType Gw_vcu_drivests_0x10a_10a::VCU_TORQUEDRIVER_INTERVENE_INTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_torquedriver_interveneType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_torquedriver_interveneType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_torquedriver_interveneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[59];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOS_CONTROLSTATUS_TEMPORARILY_INHIBIT;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOS_CONTROLSTATUS_AVAILABLEFORCONTROL;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOS_CONTROLSTATUS_ACTIVE;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOS_CONTROLSTATUS_PERMANENTLY_FAILED;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::Vcu_gearpos_controlstatusType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::Vcu_gearpos_controlstatusType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_gearpos_controlstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[60];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOSDRIVER_INTERVENE_NOTINTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType Gw_vcu_drivests_0x10a_10a::VCU_GEARPOSDRIVER_INTERVENE_INTERVENE;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_gearposdriver_interveneType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType Gw_vcu_drivests_0x10a_10a::Vcu_gearposdriver_interveneType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_gearposdriver_interveneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[61];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType Gw_vcu_drivests_0x10a_10a::VCU_VEH_STS_NOTREADY;
const Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType Gw_vcu_drivests_0x10a_10a::VCU_VEH_STS_READY;
const Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType Gw_vcu_drivests_0x10a_10a::Vcu_veh_stsType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType Gw_vcu_drivests_0x10a_10a::Vcu_veh_stsType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_veh_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[62];
}
bool Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType Gw_vcu_drivests_0x10a_10a::VCU_AXLESPDST_NOERROR;
const Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType Gw_vcu_drivests_0x10a_10a::VCU_AXLESPDST_ERROR;
const Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType Gw_vcu_drivests_0x10a_10a::Vcu_axlespdstType_MIN;
const Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType Gw_vcu_drivests_0x10a_10a::Vcu_axlespdstType_MAX;
const int Gw_vcu_drivests_0x10a_10a::Vcu_axlespdstType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controlbrake_0x110_110_Adu_parkrelease_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[63];
}
bool Adu_controlbrake_0x110_110_Adu_parkrelease_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::ADU_PARKRELEASE_REQ_NO_CONTROL;
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::ADU_PARKRELEASE_REQ_RELEASE;
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::ADU_PARKRELEASE_REQ_PARK;
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::ADU_PARKRELEASE_REQ_RESERVED;
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::Adu_parkrelease_reqType_MIN;
const Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::Adu_parkrelease_reqType_MAX;
const int Adu_controlbrake_0x110_110::Adu_parkrelease_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controlbrake_0x110_110_Adu_controbrk_standstillType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[64];
}
bool Adu_controlbrake_0x110_110_Adu_controbrk_standstillType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controlbrake_0x110_110_Adu_controbrk_standstillType Adu_controlbrake_0x110_110::ADU_CONTROBRK_STANDSTILL_NOT_STANDSTILL;
const Adu_controlbrake_0x110_110_Adu_controbrk_standstillType Adu_controlbrake_0x110_110::ADU_CONTROBRK_STANDSTILL_STANDSTILL;
const Adu_controlbrake_0x110_110_Adu_controbrk_standstillType Adu_controlbrake_0x110_110::Adu_controbrk_standstillType_MIN;
const Adu_controlbrake_0x110_110_Adu_controbrk_standstillType Adu_controlbrake_0x110_110::Adu_controbrk_standstillType_MAX;
const int Adu_controlbrake_0x110_110::Adu_controbrk_standstillType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controlbrake_0x110_110_Adu_controbrk_enableType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[65];
}
bool Adu_controlbrake_0x110_110_Adu_controbrk_enableType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controlbrake_0x110_110_Adu_controbrk_enableType Adu_controlbrake_0x110_110::ADU_CONTROBRK_ENABLE_DISABLE;
const Adu_controlbrake_0x110_110_Adu_controbrk_enableType Adu_controlbrake_0x110_110::ADU_CONTROBRK_ENABLE_ENABLE;
const Adu_controlbrake_0x110_110_Adu_controbrk_enableType Adu_controlbrake_0x110_110::Adu_controbrk_enableType_MIN;
const Adu_controlbrake_0x110_110_Adu_controbrk_enableType Adu_controlbrake_0x110_110::Adu_controbrk_enableType_MAX;
const int Adu_controlbrake_0x110_110::Adu_controbrk_enableType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Eps2_status_0x112_112_Eps_controlstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[66];
}
bool Eps2_status_0x112_112_Eps_controlstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::EPS_CONTROLSTATUS_TEMPORARILY_INHIBIT;
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::EPS_CONTROLSTATUS_AVAILABLE_FOR_CONTROL;
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::EPS_CONTROLSTATUS_ACTIVE;
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::EPS_CONTROLSTATUS_PERMANENTLY_FAILED;
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::Eps_controlstatusType_MIN;
const Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::Eps_controlstatusType_MAX;
const int Eps2_status_0x112_112::Eps_controlstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Eps2_status_0x112_112_Eps_driver_interveneType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[67];
}
bool Eps2_status_0x112_112_Eps_driver_interveneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Eps2_status_0x112_112_Eps_driver_interveneType Eps2_status_0x112_112::EPS_DRIVER_INTERVENE_NOT_INTERVENE;
const Eps2_status_0x112_112_Eps_driver_interveneType Eps2_status_0x112_112::EPS_DRIVER_INTERVENE_INTERVENE;
const Eps2_status_0x112_112_Eps_driver_interveneType Eps2_status_0x112_112::Eps_driver_interveneType_MIN;
const Eps2_status_0x112_112_Eps_driver_interveneType Eps2_status_0x112_112::Eps_driver_interveneType_MAX;
const int Eps2_status_0x112_112::Eps_driver_interveneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Eps2_status_0x112_112_Eps_sasfailurestsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[68];
}
bool Eps2_status_0x112_112_Eps_sasfailurestsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Eps2_status_0x112_112_Eps_sasfailurestsType Eps2_status_0x112_112::EPS_SASFAILURESTS_SENSOR_INFORMATION_INVALID__AN_INTERNAL_SENSOR_FAULT_OCCURRED;
const Eps2_status_0x112_112_Eps_sasfailurestsType Eps2_status_0x112_112::EPS_SASFAILURESTS_SENSOR_INFORMATION_VALID;
const Eps2_status_0x112_112_Eps_sasfailurestsType Eps2_status_0x112_112::Eps_sasfailurestsType_MIN;
const Eps2_status_0x112_112_Eps_sasfailurestsType Eps2_status_0x112_112::Eps_sasfailurestsType_MAX;
const int Eps2_status_0x112_112::Eps_sasfailurestsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Eps2_status_0x112_112_Eps_torsionbartorquedirType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[69];
}
bool Eps2_status_0x112_112_Eps_torsionbartorquedirType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Eps2_status_0x112_112_Eps_torsionbartorquedirType Eps2_status_0x112_112::EPS_TORSIONBARTORQUEDIR_POSITIVE;
const Eps2_status_0x112_112_Eps_torsionbartorquedirType Eps2_status_0x112_112::EPS_TORSIONBARTORQUEDIR_NEGATIVE;
const Eps2_status_0x112_112_Eps_torsionbartorquedirType Eps2_status_0x112_112::Eps_torsionbartorquedirType_MIN;
const Eps2_status_0x112_112_Eps_torsionbartorquedirType Eps2_status_0x112_112::Eps_torsionbartorquedirType_MAX;
const int Eps2_status_0x112_112::Eps_torsionbartorquedirType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Eps2_status_0x112_112_Eps_torsionbartorquevalidType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[70];
}
bool Eps2_status_0x112_112_Eps_torsionbartorquevalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Eps2_status_0x112_112_Eps_torsionbartorquevalidType Eps2_status_0x112_112::EPS_TORSIONBARTORQUEVALID_INVALID;
const Eps2_status_0x112_112_Eps_torsionbartorquevalidType Eps2_status_0x112_112::EPS_TORSIONBARTORQUEVALID_VALID;
const Eps2_status_0x112_112_Eps_torsionbartorquevalidType Eps2_status_0x112_112::Eps_torsionbartorquevalidType_MIN;
const Eps2_status_0x112_112_Eps_torsionbartorquevalidType Eps2_status_0x112_112::Eps_torsionbartorquevalidType_MAX;
const int Eps2_status_0x112_112::Eps_torsionbartorquevalidType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_mcu_power_0x226_226_Mcu_sys_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[71];
}
bool Gw_mcu_power_0x226_226_Mcu_sys_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::MCU_SYS_STS_INIT;
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::MCU_SYS_STS_OK;
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::MCU_SYS_STS_WARNING;
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::MCU_SYS_STS_FAULT;
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::Mcu_sys_stsType_MIN;
const Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::Mcu_sys_stsType_MAX;
const int Gw_mcu_power_0x226_226::Mcu_sys_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_controleps2_0x100_100_Adu_controepsenableType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[72];
}
bool Adu_controleps2_0x100_100_Adu_controepsenableType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_controleps2_0x100_100_Adu_controepsenableType Adu_controleps2_0x100_100::ADU_CONTROEPSENABLE_DISABLE;
const Adu_controleps2_0x100_100_Adu_controepsenableType Adu_controleps2_0x100_100::ADU_CONTROEPSENABLE_ENABLE;
const Adu_controleps2_0x100_100_Adu_controepsenableType Adu_controleps2_0x100_100::Adu_controepsenableType_MIN;
const Adu_controleps2_0x100_100_Adu_controepsenableType Adu_controleps2_0x100_100::Adu_controepsenableType_MAX;
const int Adu_controleps2_0x100_100::Adu_controepsenableType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_mcu_output_0x225_225_Mcu_work_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[73];
}
bool Gw_mcu_output_0x225_225_Mcu_work_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::MCU_WORK_STS_CONSUM;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::MCU_WORK_STS_GENERATE;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::MCU_WORK_STS_OFF;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::MCU_WORK_STS_READY;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::MCU_WORK_STS_INVALID;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::Mcu_work_stsType_MIN;
const Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::Mcu_work_stsType_MAX;
const int Gw_mcu_output_0x225_225::Mcu_work_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[74];
}
bool Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_INITIALIZATION;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_PRECHARGE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_DISABLE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_STANDBY;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_ANTISLIP;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_ALOFFSETCAL;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_NCTLINT;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_TRQCT;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_ASCACTIVE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_AFTERRUN;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_PREFAILURE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_FAILURE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::MCU_CTRMODE_STS_DISCHARGE;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::Mcu_ctrmode_stsType_MIN;
const Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::Mcu_ctrmode_stsType_MAX;
const int Gw_mcu_output_0x225_225::Mcu_ctrmode_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_mcu_output_0x225_225_Mcu_capacitor_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[75];
}
bool Gw_mcu_output_0x225_225_Mcu_capacitor_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::MCU_CAPACITOR_STS_FORBIDCHARGE;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::MCU_CAPACITOR_STS_WAITCHARGE;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::MCU_CAPACITOR_STS_ALLOWDISCHARGE;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::MCU_CAPACITOR_STS_FORBIDDISCHARGE;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::MCU_CAPACITOR_STS_ERRORDISCHARGE;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::Mcu_capacitor_stsType_MIN;
const Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::Mcu_capacitor_stsType_MAX;
const int Gw_mcu_output_0x225_225::Mcu_capacitor_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[76];
}
bool Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType Gw_abs_sts_0x221_221::ABS_WHLMILGFRNTLESTATUS_VALID;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType Gw_abs_sts_0x221_221::ABS_WHLMILGFRNTLESTATUS_INVALID;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType Gw_abs_sts_0x221_221::Abs_whlmilgfrntlestatusType_MIN;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType Gw_abs_sts_0x221_221::Abs_whlmilgfrntlestatusType_MAX;
const int Gw_abs_sts_0x221_221::Abs_whlmilgfrntlestatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[77];
}
bool Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType Gw_abs_sts_0x221_221::ABS_WHLMILGFRNTRISTATUS_VALID;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType Gw_abs_sts_0x221_221::ABS_WHLMILGFRNTRISTATUS_INVALID;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType Gw_abs_sts_0x221_221::Abs_whlmilgfrntristatusType_MIN;
const Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType Gw_abs_sts_0x221_221::Abs_whlmilgfrntristatusType_MAX;
const int Gw_abs_sts_0x221_221::Abs_whlmilgfrntristatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[78];
}
bool Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::ABS_VEHSPDLGTSTATUS_VALID;
const Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::ABS_VEHSPDLGTSTATUS_INVALID;
const Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::ABS_VEHSPDLGTSTATUS_INIT;
const Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::Abs_vehspdlgtstatusType_MIN;
const Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::Abs_vehspdlgtstatusType_MAX;
const int Gw_abs_sts_0x221_221::Abs_vehspdlgtstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_vehspddirectionType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[79];
}
bool Gw_abs_sts_0x221_221_Abs_vehspddirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_vehspddirectionType Gw_abs_sts_0x221_221::ABS_VEHSPDDIRECTION_FORWARD;
const Gw_abs_sts_0x221_221_Abs_vehspddirectionType Gw_abs_sts_0x221_221::ABS_VEHSPDDIRECTION_BACKWARD;
const Gw_abs_sts_0x221_221_Abs_vehspddirectionType Gw_abs_sts_0x221_221::Abs_vehspddirectionType_MIN;
const Gw_abs_sts_0x221_221_Abs_vehspddirectionType Gw_abs_sts_0x221_221::Abs_vehspddirectionType_MAX;
const int Gw_abs_sts_0x221_221::Abs_vehspddirectionType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_ebdflgfltType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[80];
}
bool Gw_abs_sts_0x221_221_Abs_ebdflgfltType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_ebdflgfltType Gw_abs_sts_0x221_221::ABS_EBDFLGFLT_NO_FAILURE;
const Gw_abs_sts_0x221_221_Abs_ebdflgfltType Gw_abs_sts_0x221_221::ABS_EBDFLGFLT_FAILURE;
const Gw_abs_sts_0x221_221_Abs_ebdflgfltType Gw_abs_sts_0x221_221::Abs_ebdflgfltType_MIN;
const Gw_abs_sts_0x221_221_Abs_ebdflgfltType Gw_abs_sts_0x221_221::Abs_ebdflgfltType_MAX;
const int Gw_abs_sts_0x221_221::Abs_ebdflgfltType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_absflgfltType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[81];
}
bool Gw_abs_sts_0x221_221_Abs_absflgfltType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_absflgfltType Gw_abs_sts_0x221_221::ABS_ABSFLGFLT_NO_FAILURE;
const Gw_abs_sts_0x221_221_Abs_absflgfltType Gw_abs_sts_0x221_221::ABS_ABSFLGFLT_FAILURE;
const Gw_abs_sts_0x221_221_Abs_absflgfltType Gw_abs_sts_0x221_221::Abs_absflgfltType_MIN;
const Gw_abs_sts_0x221_221_Abs_absflgfltType Gw_abs_sts_0x221_221::Abs_absflgfltType_MAX;
const int Gw_abs_sts_0x221_221::Abs_absflgfltType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_abs_sts_0x221_221_Abs_absctrlactvType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[82];
}
bool Gw_abs_sts_0x221_221_Abs_absctrlactvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_abs_sts_0x221_221_Abs_absctrlactvType Gw_abs_sts_0x221_221::ABS_ABSCTRLACTV_NOT_ACTIVE;
const Gw_abs_sts_0x221_221_Abs_absctrlactvType Gw_abs_sts_0x221_221::ABS_ABSCTRLACTV_ACTIVE;
const Gw_abs_sts_0x221_221_Abs_absctrlactvType Gw_abs_sts_0x221_221::Abs_absctrlactvType_MIN;
const Gw_abs_sts_0x221_221_Abs_absctrlactvType Gw_abs_sts_0x221_221::Abs_absctrlactvType_MAX;
const int Gw_abs_sts_0x221_221::Abs_absctrlactvType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_parkrelease_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[83];
}
bool Ibc_status_0x122_122_Ibc_parkrelease_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::IBC_PARKRELEASE_REQ_NO_CONTROL;
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::IBC_PARKRELEASE_REQ_RELEASE;
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::IBC_PARKRELEASE_REQ_PARK;
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::IBC_PARKRELEASE_REQ_DYNAMIC_PARKING;
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::Ibc_parkrelease_reqType_MIN;
const Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::Ibc_parkrelease_reqType_MAX;
const int Ibc_status_0x122_122::Ibc_parkrelease_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[84];
}
bool Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType Ibc_status_0x122_122::IBC_MASTERCYLINDERPRESSVALID_INVAILD;
const Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType Ibc_status_0x122_122::IBC_MASTERCYLINDERPRESSVALID_VALID;
const Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType Ibc_status_0x122_122::Ibc_mastercylinderpressvalidType_MIN;
const Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType Ibc_status_0x122_122::Ibc_mastercylinderpressvalidType_MAX;
const int Ibc_status_0x122_122::Ibc_mastercylinderpressvalidType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_brakeactiveType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[85];
}
bool Ibc_status_0x122_122_Ibc_brakeactiveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_brakeactiveType Ibc_status_0x122_122::IBC_BRAKEACTIVE_BRAKE_INACTIVE;
const Ibc_status_0x122_122_Ibc_brakeactiveType Ibc_status_0x122_122::IBC_BRAKEACTIVE_BRAKE_ACTIVE;
const Ibc_status_0x122_122_Ibc_brakeactiveType Ibc_status_0x122_122::Ibc_brakeactiveType_MIN;
const Ibc_status_0x122_122_Ibc_brakeactiveType Ibc_status_0x122_122::Ibc_brakeactiveType_MAX;
const int Ibc_status_0x122_122::Ibc_brakeactiveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_brakereqavailabeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[86];
}
bool Ibc_status_0x122_122_Ibc_brakereqavailabeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_brakereqavailabeType Ibc_status_0x122_122::IBC_BRAKEREQAVAILABE_BRAKE_NOT_AVAILABLE;
const Ibc_status_0x122_122_Ibc_brakereqavailabeType Ibc_status_0x122_122::IBC_BRAKEREQAVAILABE_BRAKE_AVAILABLE;
const Ibc_status_0x122_122_Ibc_brakereqavailabeType Ibc_status_0x122_122::Ibc_brakereqavailabeType_MIN;
const Ibc_status_0x122_122_Ibc_brakereqavailabeType Ibc_status_0x122_122::Ibc_brakereqavailabeType_MAX;
const int Ibc_status_0x122_122::Ibc_brakereqavailabeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_brakepressurereqackType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[87];
}
bool Ibc_status_0x122_122_Ibc_brakepressurereqackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_brakepressurereqackType Ibc_status_0x122_122::IBC_BRAKEPRESSUREREQACK_NOT_ACK;
const Ibc_status_0x122_122_Ibc_brakepressurereqackType Ibc_status_0x122_122::IBC_BRAKEPRESSUREREQACK_ACK;
const Ibc_status_0x122_122_Ibc_brakepressurereqackType Ibc_status_0x122_122::Ibc_brakepressurereqackType_MIN;
const Ibc_status_0x122_122_Ibc_brakepressurereqackType Ibc_status_0x122_122::Ibc_brakepressurereqackType_MAX;
const int Ibc_status_0x122_122::Ibc_brakepressurereqackType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_controlstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[88];
}
bool Ibc_status_0x122_122_Ibc_controlstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::IBC_CONTROLSTATUS_TEMPORARILY_INHIBIT;
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::IBC_CONTROLSTATUS_AVAILABLE_FOR_CONTROL;
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::IBC_CONTROLSTATUS_ACTIVE;
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::IBC_CONTROLSTATUS_PERMANENTLY_FAILED;
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::Ibc_controlstatusType_MIN;
const Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::Ibc_controlstatusType_MAX;
const int Ibc_status_0x122_122::Ibc_controlstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_driver_interveneType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[89];
}
bool Ibc_status_0x122_122_Ibc_driver_interveneType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_driver_interveneType Ibc_status_0x122_122::IBC_DRIVER_INTERVENE_NOT_INTERVENE;
const Ibc_status_0x122_122_Ibc_driver_interveneType Ibc_status_0x122_122::IBC_DRIVER_INTERVENE_INTERVENE;
const Ibc_status_0x122_122_Ibc_driver_interveneType Ibc_status_0x122_122::Ibc_driver_interveneType_MIN;
const Ibc_status_0x122_122_Ibc_driver_interveneType Ibc_status_0x122_122::Ibc_driver_interveneType_MAX;
const int Ibc_status_0x122_122::Ibc_driver_interveneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status_0x122_122_Ibc_systemstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[90];
}
bool Ibc_status_0x122_122_Ibc_systemstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::IBC_SYSTEMSTATUS_SYSTEM_NO_FAULT;
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::IBC_SYSTEMSTATUS_SYSTEM_WARING;
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::IBC_SYSTEMSTATUS_SYSTEM_FAULT;
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::IBC_SYSTEMSTATUS_RESERVED;
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::Ibc_systemstatusType_MIN;
const Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::Ibc_systemstatusType_MAX;
const int Ibc_status_0x122_122::Ibc_systemstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_whltq_0x107_107_Vcu_kickdownType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[91];
}
bool Gw_vcu_whltq_0x107_107_Vcu_kickdownType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_whltq_0x107_107_Vcu_kickdownType Gw_vcu_whltq_0x107_107::VCU_KICKDOWN_NOTACTIVE;
const Gw_vcu_whltq_0x107_107_Vcu_kickdownType Gw_vcu_whltq_0x107_107::VCU_KICKDOWN_ACTIVE;
const Gw_vcu_whltq_0x107_107_Vcu_kickdownType Gw_vcu_whltq_0x107_107::Vcu_kickdownType_MIN;
const Gw_vcu_whltq_0x107_107_Vcu_kickdownType Gw_vcu_whltq_0x107_107::Vcu_kickdownType_MAX;
const int Gw_vcu_whltq_0x107_107::Vcu_kickdownType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[92];
}
bool Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType Gw_vcu_whltq_0x107_107::VCU_ACCPEDALRATIOERROR_NOERROR;
const Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType Gw_vcu_whltq_0x107_107::VCU_ACCPEDALRATIOERROR_ERROR;
const Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType Gw_vcu_whltq_0x107_107::Vcu_accpedalratioerrorType_MIN;
const Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType Gw_vcu_whltq_0x107_107::Vcu_accpedalratioerrorType_MAX;
const int Gw_vcu_whltq_0x107_107::Vcu_accpedalratioerrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[93];
}
bool Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::VCU_BRKPEDALSTASUS_NOTPRESSED;
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::VCU_BRKPEDALSTASUS_PRESSED;
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::VCU_BRKPEDALSTASUS_RESERVED;
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::VCU_BRKPEDALSTASUS_ERROR;
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::Vcu_brkpedalstasusType_MIN;
const Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::Vcu_brkpedalstasusType_MAX;
const int Gw_vcu_whltq_0x107_107::Vcu_brkpedalstasusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_brakelampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[94];
}
bool Bcm_bodysts_0x344_344_Bcm_brakelampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_brakelampstatusType Bcm_bodysts_0x344_344::BCM_BRAKELAMPSTATUS_BRAKE_LAMP_INACTIVE;
const Bcm_bodysts_0x344_344_Bcm_brakelampstatusType Bcm_bodysts_0x344_344::BCM_BRAKELAMPSTATUS_BRAKE_LAMP_ACTIVE;
const Bcm_bodysts_0x344_344_Bcm_brakelampstatusType Bcm_bodysts_0x344_344::Bcm_brakelampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_brakelampstatusType Bcm_bodysts_0x344_344::Bcm_brakelampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_brakelampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[95];
}
bool Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::BCM_REARFOGLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::BCM_REARFOGLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::BCM_REARFOGLAMPSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::BCM_REARFOGLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::Bcm_rearfoglampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::Bcm_rearfoglampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_rearfoglampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[96];
}
bool Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::BCM_FRONTFOGLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::BCM_FRONTFOGLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::BCM_FRONTFOGLAMPSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::BCM_FRONTFOGLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::Bcm_frontfoglampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::Bcm_frontfoglampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_frontfoglampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_washerstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[97];
}
bool Bcm_bodysts_0x344_344_Bcm_washerstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::BCM_WASHERSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::BCM_WASHERSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::BCM_WASHERSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::BCM_WASHERSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::Bcm_washerstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::Bcm_washerstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_washerstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_wiperstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[98];
}
bool Bcm_bodysts_0x344_344_Bcm_wiperstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::BCM_WIPERSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::BCM_WIPERSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::BCM_WIPERSTATUS_LOW_SPEED;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::BCM_WIPERSTATUS_HIGH_SPEED;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::BCM_WIPERSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::Bcm_wiperstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::Bcm_wiperstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_wiperstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[99];
}
bool Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::BCM_DOORLOCKFEEDBACK_INVALID;
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::BCM_DOORLOCKFEEDBACK_LOCK_ACTION;
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::BCM_DOORLOCKFEEDBACK_UNLOCK_ACTION;
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::BCM_DOORLOCKFEEDBACK_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::Bcm_doorlockfeedbackType_MIN;
const Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::Bcm_doorlockfeedbackType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_doorlockfeedbackType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_hornstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[100];
}
bool Bcm_bodysts_0x344_344_Bcm_hornstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::BCM_HORNSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::BCM_HORNSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::BCM_HORNSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::BCM_HORNSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::Bcm_hornstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::Bcm_hornstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_hornstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[101];
}
bool Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::BCM_HIGHBEAMLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::BCM_HIGHBEAMLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::BCM_HIGHBEAMLAMPSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::BCM_HIGHBEAMLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::Bcm_highbeamlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::Bcm_highbeamlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_highbeamlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[102];
}
bool Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::BCM_LOWBEAMLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::BCM_LOWBEAMLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::BCM_LOWBEAMLAMPSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::BCM_LOWBEAMLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::Bcm_lowbeamlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::Bcm_lowbeamlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_lowbeamlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_positionlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[103];
}
bool Bcm_bodysts_0x344_344_Bcm_positionlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::BCM_POSITIONLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::BCM_POSITIONLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::BCM_POSITIONLAMPSTATUS_ON;
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::BCM_POSITIONLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::Bcm_positionlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::Bcm_positionlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_positionlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[104];
}
bool Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::BCM_HAZARDLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::BCM_HAZARDLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::BCM_HAZARDLAMPSTATUS_BLINK;
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::BCM_HAZARDLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::Bcm_hazardlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::Bcm_hazardlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_hazardlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[105];
}
bool Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::BCM_RIGHTTURNLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::BCM_RIGHTTURNLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::BCM_RIGHTTURNLAMPSTATUS_BLINK;
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::BCM_RIGHTTURNLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::Bcm_rightturnlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::Bcm_rightturnlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_rightturnlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[106];
}
bool Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::BCM_LEFTTURNLAMPSTATUS_INVALID;
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::BCM_LEFTTURNLAMPSTATUS_OFF;
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::BCM_LEFTTURNLAMPSTATUS_BLINK;
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::BCM_LEFTTURNLAMPSTATUS_RESERVED;
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::Bcm_leftturnlampstatusType_MIN;
const Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::Bcm_leftturnlampstatusType_MAX;
const int Bcm_bodysts_0x344_344::Bcm_leftturnlampstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[107];
}
bool Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_REARFOGLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_REARFOGLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_REARFOGLAMPCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_REARFOGLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::Adu_rearfoglampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::Adu_rearfoglampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_rearfoglampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[108];
}
bool Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_FRONTFOGLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_FRONTFOGLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_FRONTFOGLAMPCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::ADU_FRONTFOGLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::Adu_frontfoglampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::Adu_frontfoglampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_frontfoglampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_washercontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[109];
}
bool Adu_bodycontrol_0x333_333_Adu_washercontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::ADU_WASHERCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::ADU_WASHERCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::ADU_WASHERCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::ADU_WASHERCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::Adu_washercontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::Adu_washercontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_washercontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_wipercontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[110];
}
bool Adu_bodycontrol_0x333_333_Adu_wipercontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::ADU_WIPERCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::ADU_WIPERCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::ADU_WIPERCONTROL_LOW_SPEED_A3_A8_B5_CD_CB_B5_A3_A9;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::ADU_WIPERCONTROL_HIGH_SPEED_A3_A8_B8_DF_CB_B5_A3_A9;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::ADU_WIPERCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::Adu_wipercontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::Adu_wipercontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_wipercontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_doorcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[111];
}
bool Adu_bodycontrol_0x333_333_Adu_doorcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::ADU_DOORCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::ADU_DOORCONTROL_LOCK;
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::ADU_DOORCONTROL_UNLOCK;
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::ADU_DOORCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::Adu_doorcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::Adu_doorcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_doorcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_horncontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[112];
}
bool Adu_bodycontrol_0x333_333_Adu_horncontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::ADU_HORNCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::ADU_HORNCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::ADU_HORNCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::ADU_HORNCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::Adu_horncontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::Adu_horncontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_horncontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[113];
}
bool Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_HIGHBEAMLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_HIGHBEAMLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_HIGHBEAMLAMPCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_HIGHBEAMLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::Adu_highbeamlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::Adu_highbeamlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_highbeamlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[114];
}
bool Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_LOWBEAMLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_LOWBEAMLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_LOWBEAMLAMPCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::ADU_LOWBEAMLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::Adu_lowbeamlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::Adu_lowbeamlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_lowbeamlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[115];
}
bool Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::ADU_POSITIONLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::ADU_POSITIONLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::ADU_POSITIONLAMPCONTROL_ON;
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::ADU_POSITIONLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::Adu_positionlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::Adu_positionlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_positionlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[116];
}
bool Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::ADU_HAZARDLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::ADU_HAZARDLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::ADU_HAZARDLAMPCONTROL_BLINK;
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::ADU_HAZARDLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::Adu_hazardlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::Adu_hazardlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_hazardlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[117];
}
bool Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_RIGHTTURNLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_RIGHTTURNLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_RIGHTTURNLAMPCONTROL_BLINK;
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_RIGHTTURNLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::Adu_rightturnlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::Adu_rightturnlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_rightturnlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[118];
}
bool Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_LEFTTURNLAMPCONTROL_INVALID;
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_LEFTTURNLAMPCONTROL_OFF;
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_LEFTTURNLAMPCONTROL_BLINK;
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::ADU_LEFTTURNLAMPCONTROL_RESERVED;
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::Adu_leftturnlampcontrolType_MIN;
const Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::Adu_leftturnlampcontrolType_MAX;
const int Adu_bodycontrol_0x333_333::Adu_leftturnlampcontrolType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_err_levType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[119];
}
bool Gw_bms_sts_0x181_181_Bms_err_levType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::BMS_ERR_LEV_NO_ERROR;
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::BMS_ERR_LEV_LEVEL1_ERROR;
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::BMS_ERR_LEV_LEVEL2_ERROR;
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::BMS_ERR_LEV_LEVEL3_ERROR;
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::Bms_err_levType_MIN;
const Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::Bms_err_levType_MAX;
const int Gw_bms_sts_0x181_181::Bms_err_levType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_idu_statusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[120];
}
bool Gw_bms_sts_0x181_181_Bms_idu_statusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::BMS_IDU_STATUS_NORMAL;
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::BMS_IDU_STATUS_LEVEL1_600_A6_B8_V;
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::BMS_IDU_STATUS_LEVEL2_500_A6_B8_V;
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::BMS_IDU_STATUS_LEVEL3_CHARGE_100_A6_B8_V_DRIVE_400_A6_B8_V;
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::Bms_idu_statusType_MIN;
const Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::Bms_idu_statusType_MAX;
const int Gw_bms_sts_0x181_181::Bms_idu_statusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_batbalance_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[121];
}
bool Gw_bms_sts_0x181_181_Bms_batbalance_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_batbalance_errType Gw_bms_sts_0x181_181::BMS_BATBALANCE_ERR_NORMAL;
const Gw_bms_sts_0x181_181_Bms_batbalance_errType Gw_bms_sts_0x181_181::BMS_BATBALANCE_ERR_ERROR;
const Gw_bms_sts_0x181_181_Bms_batbalance_errType Gw_bms_sts_0x181_181::Bms_batbalance_errType_MIN;
const Gw_bms_sts_0x181_181_Bms_batbalance_errType Gw_bms_sts_0x181_181::Bms_batbalance_errType_MAX;
const int Gw_bms_sts_0x181_181::Bms_batbalance_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_chg_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[122];
}
bool Gw_bms_sts_0x181_181_Bms_chg_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::BMS_CHG_STS_NOT_READY;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::BMS_CHG_STS_READY_TO_CHARGING;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::BMS_CHG_STS_CHARGING;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::BMS_CHG_STS_CHARGEERROR;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::BMS_CHG_STS_CHARGEOK;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::Bms_chg_stsType_MIN;
const Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::Bms_chg_stsType_MAX;
const int Gw_bms_sts_0x181_181::Bms_chg_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_balance_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[123];
}
bool Gw_bms_sts_0x181_181_Bms_balance_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_balance_stsType Gw_bms_sts_0x181_181::BMS_BALANCE_STS_INACTIVE;
const Gw_bms_sts_0x181_181_Bms_balance_stsType Gw_bms_sts_0x181_181::BMS_BALANCE_STS_ACTIVE;
const Gw_bms_sts_0x181_181_Bms_balance_stsType Gw_bms_sts_0x181_181::Bms_balance_stsType_MIN;
const Gw_bms_sts_0x181_181_Bms_balance_stsType Gw_bms_sts_0x181_181::Bms_balance_stsType_MAX;
const int Gw_bms_sts_0x181_181::Bms_balance_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_hvdown_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[124];
}
bool Gw_bms_sts_0x181_181_Bms_hvdown_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_hvdown_reqType Gw_bms_sts_0x181_181::BMS_HVDOWN_REQ_NO_REQUEST;
const Gw_bms_sts_0x181_181_Bms_hvdown_reqType Gw_bms_sts_0x181_181::BMS_HVDOWN_REQ_REQUEST;
const Gw_bms_sts_0x181_181_Bms_hvdown_reqType Gw_bms_sts_0x181_181::Bms_hvdown_reqType_MIN;
const Gw_bms_sts_0x181_181_Bms_hvdown_reqType Gw_bms_sts_0x181_181::Bms_hvdown_reqType_MAX;
const int Gw_bms_sts_0x181_181::Bms_hvdown_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_hvonoff_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[125];
}
bool Gw_bms_sts_0x181_181_Bms_hvonoff_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::BMS_HVONOFF_STS_HV_OFF;
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::BMS_HVONOFF_STS_PRECHARGE;
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::BMS_HVONOFF_STS_HV_ON;
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::BMS_HVONOFF_STS_FAIL_TO_HV_ON;
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::Bms_hvonoff_stsType_MIN;
const Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::Bms_hvonoff_stsType_MAX;
const int Gw_bms_sts_0x181_181::Bms_hvonoff_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_bms_sts_0x181_181_Bms_sys_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[126];
}
bool Gw_bms_sts_0x181_181_Bms_sys_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::BMS_SYS_STS_INIT;
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::BMS_SYS_STS_OK;
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::BMS_SYS_STS_WARNING;
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::BMS_SYS_STS_FAULT;
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::Bms_sys_stsType_MIN;
const Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::Bms_sys_stsType_MAX;
const int Gw_bms_sts_0x181_181::Bms_sys_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[127];
}
bool Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_STOPPED;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_RUNNING;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_IDLE;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_DFCO;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_CRANKING;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::VCU_EMS_ENGOPERATIONSTATUS_STALLING;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::Vcu_ems_engoperationstatusType_MIN;
const Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::Vcu_ems_engoperationstatusType_MAX;
const int Gw_vcu_control_0x185_185::Vcu_ems_engoperationstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[128];
}
bool Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType Gw_vcu_control_0x185_185::VCU_MCU_ASD_REQ_ON;
const Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType Gw_vcu_control_0x185_185::VCU_MCU_ASD_REQ_OFF;
const Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType Gw_vcu_control_0x185_185::Vcu_mcu_asd_reqType_MIN;
const Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType Gw_vcu_control_0x185_185::Vcu_mcu_asd_reqType_MAX;
const int Gw_vcu_control_0x185_185::Vcu_mcu_asd_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[129];
}
bool Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_DISABLE;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_STANDBY;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_SPEEDMODE;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_TORQUEMODE;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_ANTISLIP;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::VCU_MCU_MOTOR1_CTRMODE_REQ_ALOFFSETCAL;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::Vcu_mcu_motor1_ctrmode_reqType_MIN;
const Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::Vcu_mcu_motor1_ctrmode_reqType_MAX;
const int Gw_vcu_control_0x185_185::Vcu_mcu_motor1_ctrmode_reqType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status2_0x124_124_Ibc_decelerationvaildType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[130];
}
bool Ibc_status2_0x124_124_Ibc_decelerationvaildType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status2_0x124_124_Ibc_decelerationvaildType Ibc_status2_0x124_124::IBC_DECELERATIONVAILD_INVAILD;
const Ibc_status2_0x124_124_Ibc_decelerationvaildType Ibc_status2_0x124_124::IBC_DECELERATIONVAILD_VALID;
const Ibc_status2_0x124_124_Ibc_decelerationvaildType Ibc_status2_0x124_124::Ibc_decelerationvaildType_MIN;
const Ibc_status2_0x124_124_Ibc_decelerationvaildType Ibc_status2_0x124_124::Ibc_decelerationvaildType_MAX;
const int Ibc_status2_0x124_124::Ibc_decelerationvaildType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[131];
}
bool Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType Ibc_status2_0x124_124::IBC_BRKTMCPOSITIONVAILD_INVAILD;
const Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType Ibc_status2_0x124_124::IBC_BRKTMCPOSITIONVAILD_VALID;
const Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType Ibc_status2_0x124_124::Ibc_brktmcpositionvaildType_MIN;
const Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType Ibc_status2_0x124_124::Ibc_brktmcpositionvaildType_MAX;
const int Ibc_status2_0x124_124::Ibc_brktmcpositionvaildType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_VehiclehvstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[132];
}
bool Gw_vcu_hmi_0x358_358_VehiclehvstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VEHICLEHVSTATUS_NOT_READY;
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VEHICLEHVSTATUS_HV_ON;
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VEHICLEHVSTATUS_READYTODRIVE;
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VEHICLEHVSTATUS_RESERVED;
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VehiclehvstatusType_MIN;
const Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::VehiclehvstatusType_MAX;
const int Gw_vcu_hmi_0x358_358::VehiclehvstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[133];
}
bool Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType Gw_vcu_hmi_0x358_358::PACKHEATCIRCUITERROR_NORMAL;
const Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType Gw_vcu_hmi_0x358_358::PACKHEATCIRCUITERROR_ERROR;
const Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType Gw_vcu_hmi_0x358_358::PackheatcircuiterrorType_MIN;
const Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType Gw_vcu_hmi_0x358_358::PackheatcircuiterrorType_MAX;
const int Gw_vcu_hmi_0x358_358::PackheatcircuiterrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_PackheatstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[134];
}
bool Gw_vcu_hmi_0x358_358_PackheatstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_PackheatstatusType Gw_vcu_hmi_0x358_358::PACKHEATSTATUS_INACTIVE;
const Gw_vcu_hmi_0x358_358_PackheatstatusType Gw_vcu_hmi_0x358_358::PACKHEATSTATUS_ACTIVE;
const Gw_vcu_hmi_0x358_358_PackheatstatusType Gw_vcu_hmi_0x358_358::PackheatstatusType_MIN;
const Gw_vcu_hmi_0x358_358_PackheatstatusType Gw_vcu_hmi_0x358_358::PackheatstatusType_MAX;
const int Gw_vcu_hmi_0x358_358::PackheatstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[135];
}
bool Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::PACKCOOLINGCIRCUITERROR_NORMAL;
const Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::PACKCOOLINGCIRCUITERROR_ERROR;
const Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::PackcoolingcircuiterrorType_MIN;
const Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::PackcoolingcircuiterrorType_MAX;
const int Gw_vcu_hmi_0x358_358::PackcoolingcircuiterrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[136];
}
bool Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::MOTORCOOLINGCIRCUITERROR_NORMAL;
const Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::MOTORCOOLINGCIRCUITERROR_ERROR;
const Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::MotorcoolingcircuiterrorType_MIN;
const Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::MotorcoolingcircuiterrorType_MAX;
const int Gw_vcu_hmi_0x358_358::MotorcoolingcircuiterrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[137];
}
bool Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType Gw_vcu_hmi_0x358_358::VCU_BATTERYVOLTAGEERROR_NO_WARNING;
const Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType Gw_vcu_hmi_0x358_358::VCU_BATTERYVOLTAGEERROR_WARNING;
const Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType Gw_vcu_hmi_0x358_358::Vcu_batteryvoltageerrorType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType Gw_vcu_hmi_0x358_358::Vcu_batteryvoltageerrorType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_batteryvoltageerrorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[138];
}
bool Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::VCU_CRUISECONTROLSTATUS_CRUISECONTROLOOFF;
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::VCU_CRUISECONTROLSTATUS_ACTIVE;
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::VCU_CRUISECONTROLSTATUS_STANDBY;
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::VCU_CRUISECONTROLSTATUS_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::Vcu_cruisecontrolstatusType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::Vcu_cruisecontrolstatusType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_cruisecontrolstatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[139];
}
bool Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVERSTATUS_STS_NO_DRIVE;
const Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVERSTATUS_STS_DRIVE_MODE;
const Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType Gw_vcu_hmi_0x358_358::Vcu_driverstatus_stsType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType Gw_vcu_hmi_0x358_358::Vcu_driverstatus_stsType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_driverstatus_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[140];
}
bool Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVEMODE_STS_INVALID;
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVEMODE_STS_EV;
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVEMODE_STS_HEV;
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::VCU_DRIVEMODE_STS_FUEL;
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::Vcu_drivemode_stsType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::Vcu_drivemode_stsType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_drivemode_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[141];
}
bool Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::VCU_VEHCHG_STS_INVALID;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::VCU_VEHCHG_STS_STOPCHARGE;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::VCU_VEHCHG_STS_DRIVECHARGE;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::VCU_VEHCHG_STS_NOCHARGE;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::VCU_VEHCHG_STS_CHARGECOMPLETED;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::Vcu_vehchg_stsType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::Vcu_vehchg_stsType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_vehchg_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[142];
}
bool Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::VCU_TBOX_VEH_STS_INVALID;
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::VCU_TBOX_VEH_STS_START;
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::VCU_TBOX_VEH_STS_OFF;
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::VCU_TBOX_VEH_STS_OTHER;
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::Vcu_tbox_veh_stsType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::Vcu_tbox_veh_stsType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_tbox_veh_stsType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[143];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::VCU_ICM_ENERGYRECOVERYMODE_NO;
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::VCU_ICM_ENERGYRECOVERYMODE_LEVEL1;
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::VCU_ICM_ENERGYRECOVERYMODE_LEVEL2;
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::VCU_ICM_ENERGYRECOVERYMODE_LEVEL3;
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::Vcu_icm_energyrecoverymodeType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::Vcu_icm_energyrecoverymodeType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_energyrecoverymodeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[144];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType Gw_vcu_hmi_0x358_358::VCU_ICM_VEHHVIL_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType Gw_vcu_hmi_0x358_358::VCU_ICM_VEHHVIL_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType Gw_vcu_hmi_0x358_358::Vcu_icm_vehhvil_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType Gw_vcu_hmi_0x358_358::Vcu_icm_vehhvil_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_vehhvil_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[145];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType Gw_vcu_hmi_0x358_358::VCU_ICM_MOT_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType Gw_vcu_hmi_0x358_358::VCU_ICM_MOT_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType Gw_vcu_hmi_0x358_358::Vcu_icm_mot_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType Gw_vcu_hmi_0x358_358::Vcu_icm_mot_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_mot_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[146];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType Gw_vcu_hmi_0x358_358::VCU_ICM_PACKVOLTOFF_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType Gw_vcu_hmi_0x358_358::VCU_ICM_PACKVOLTOFF_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType Gw_vcu_hmi_0x358_358::Vcu_icm_packvoltoff_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType Gw_vcu_hmi_0x358_358::Vcu_icm_packvoltoff_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_packvoltoff_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[147];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType Gw_vcu_hmi_0x358_358::VCU_ICM_CHGGEARLV_NO_WARNING;
const Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType Gw_vcu_hmi_0x358_358::VCU_ICM_CHGGEARLV_PLEASE_SET_GEARPOSITION_TO_PARK;
const Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType Gw_vcu_hmi_0x358_358::Vcu_icm_chggearlvType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType Gw_vcu_hmi_0x358_358::Vcu_icm_chggearlvType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_chggearlvType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[148];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType Gw_vcu_hmi_0x358_358::VCU_ICM_PACKSYS_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType Gw_vcu_hmi_0x358_358::VCU_ICM_PACKSYS_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType Gw_vcu_hmi_0x358_358::Vcu_icm_packsys_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType Gw_vcu_hmi_0x358_358::Vcu_icm_packsys_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_packsys_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[149];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType Gw_vcu_hmi_0x358_358::VCU_ICM_DRVSYS_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType Gw_vcu_hmi_0x358_358::VCU_ICM_DRVSYS_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType Gw_vcu_hmi_0x358_358::Vcu_icm_drvsys_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType Gw_vcu_hmi_0x358_358::Vcu_icm_drvsys_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_drvsys_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType_descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_enum_descriptors[150];
}
bool Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType Gw_vcu_hmi_0x358_358::VCU_ICM_VEH_ERR_NORMAL;
const Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType Gw_vcu_hmi_0x358_358::VCU_ICM_VEH_ERR_ERROR;
const Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType Gw_vcu_hmi_0x358_358::Vcu_icm_veh_errType_MIN;
const Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType Gw_vcu_hmi_0x358_358::Vcu_icm_veh_errType_MAX;
const int Gw_vcu_hmi_0x358_358::Vcu_icm_veh_errType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Epb_status_0x152_152::kChecksum0X152FieldNumber;
const int Epb_status_0x152_152::kRollingCounter0X152FieldNumber;
const int Epb_status_0x152_152::kEpbFaultcodeFieldNumber;
const int Epb_status_0x152_152::kEpbBrakelampreqFieldNumber;
const int Epb_status_0x152_152::kEpbSysfaultstatusFieldNumber;
const int Epb_status_0x152_152::kEpbParkingstatusFieldNumber;
const int Epb_status_0x152_152::kEpbSwitchstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Epb_status_0x152_152::Epb_status_0x152_152()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Epb_status_0x152_152)
}
Epb_status_0x152_152::Epb_status_0x152_152(const Epb_status_0x152_152& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x152_, &from.checksum_0x152_,
    reinterpret_cast<char*>(&epb_switchstatus_) -
    reinterpret_cast<char*>(&checksum_0x152_) + sizeof(epb_switchstatus_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Epb_status_0x152_152)
}

void Epb_status_0x152_152::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x152_, 0, reinterpret_cast<char*>(&epb_switchstatus_) -
    reinterpret_cast<char*>(&checksum_0x152_) + sizeof(epb_switchstatus_));
}

Epb_status_0x152_152::~Epb_status_0x152_152() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Epb_status_0x152_152)
  SharedDtor();
}

void Epb_status_0x152_152::SharedDtor() {
}

void Epb_status_0x152_152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Epb_status_0x152_152::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Epb_status_0x152_152& Epb_status_0x152_152::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Epb_status_0x152_152* Epb_status_0x152_152::New(::google::protobuf::Arena* arena) const {
  Epb_status_0x152_152* n = new Epb_status_0x152_152;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Epb_status_0x152_152::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Epb_status_0x152_152)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&checksum_0x152_, 0, reinterpret_cast<char*>(&epb_switchstatus_) -
      reinterpret_cast<char*>(&checksum_0x152_) + sizeof(epb_switchstatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Epb_status_0x152_152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Epb_status_0x152_152)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x152 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x152();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x152_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x152 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x152();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x152_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 epb_faultcode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_epb_faultcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epb_faultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_brakelampreqType epb_brakelampreq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType_IsValid(value)) {
            set_epb_brakelampreq(static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_sysfaultstatusType epb_sysfaultstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType_IsValid(value)) {
            set_epb_sysfaultstatus(static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_parkingstatusType epb_parkingstatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType_IsValid(value)) {
            set_epb_parkingstatus(static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_switchstatusType epb_switchstatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType_IsValid(value)) {
            set_epb_switchstatus(static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Epb_status_0x152_152)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Epb_status_0x152_152)
  return false;
#undef DO_
}

void Epb_status_0x152_152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Epb_status_0x152_152)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x152 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x152(), output);
  }

  // optional int32 rolling_counter_0x152 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x152(), output);
  }

  // optional int32 epb_faultcode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->epb_faultcode(), output);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_brakelampreqType epb_brakelampreq = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->epb_brakelampreq(), output);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_sysfaultstatusType epb_sysfaultstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->epb_sysfaultstatus(), output);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_parkingstatusType epb_parkingstatus = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->epb_parkingstatus(), output);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_switchstatusType epb_switchstatus = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->epb_switchstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Epb_status_0x152_152)
}

::google::protobuf::uint8* Epb_status_0x152_152::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Epb_status_0x152_152)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x152 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x152(), target);
  }

  // optional int32 rolling_counter_0x152 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x152(), target);
  }

  // optional int32 epb_faultcode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->epb_faultcode(), target);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_brakelampreqType epb_brakelampreq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->epb_brakelampreq(), target);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_sysfaultstatusType epb_sysfaultstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->epb_sysfaultstatus(), target);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_parkingstatusType epb_parkingstatus = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->epb_parkingstatus(), target);
  }

  // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_switchstatusType epb_switchstatus = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->epb_switchstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Epb_status_0x152_152)
  return target;
}

size_t Epb_status_0x152_152::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Epb_status_0x152_152)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 checksum_0x152 = 1;
    if (has_checksum_0x152()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x152());
    }

    // optional int32 rolling_counter_0x152 = 2;
    if (has_rolling_counter_0x152()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x152());
    }

    // optional int32 epb_faultcode = 3;
    if (has_epb_faultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->epb_faultcode());
    }

    // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_brakelampreqType epb_brakelampreq = 4;
    if (has_epb_brakelampreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epb_brakelampreq());
    }

    // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_sysfaultstatusType epb_sysfaultstatus = 5;
    if (has_epb_sysfaultstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epb_sysfaultstatus());
    }

    // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_parkingstatusType epb_parkingstatus = 6;
    if (has_epb_parkingstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epb_parkingstatus());
    }

    // optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_switchstatusType epb_switchstatus = 7;
    if (has_epb_switchstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->epb_switchstatus());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Epb_status_0x152_152::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Epb_status_0x152_152)
  GOOGLE_DCHECK_NE(&from, this);
  const Epb_status_0x152_152* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Epb_status_0x152_152>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Epb_status_0x152_152)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Epb_status_0x152_152)
    MergeFrom(*source);
  }
}

void Epb_status_0x152_152::MergeFrom(const Epb_status_0x152_152& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Epb_status_0x152_152)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x152_ = from.checksum_0x152_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x152_ = from.rolling_counter_0x152_;
    }
    if (cached_has_bits & 0x00000004u) {
      epb_faultcode_ = from.epb_faultcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      epb_brakelampreq_ = from.epb_brakelampreq_;
    }
    if (cached_has_bits & 0x00000010u) {
      epb_sysfaultstatus_ = from.epb_sysfaultstatus_;
    }
    if (cached_has_bits & 0x00000020u) {
      epb_parkingstatus_ = from.epb_parkingstatus_;
    }
    if (cached_has_bits & 0x00000040u) {
      epb_switchstatus_ = from.epb_switchstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Epb_status_0x152_152::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Epb_status_0x152_152)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Epb_status_0x152_152::CopyFrom(const Epb_status_0x152_152& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Epb_status_0x152_152)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Epb_status_0x152_152::IsInitialized() const {
  return true;
}

void Epb_status_0x152_152::Swap(Epb_status_0x152_152* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Epb_status_0x152_152::InternalSwap(Epb_status_0x152_152* other) {
  std::swap(checksum_0x152_, other->checksum_0x152_);
  std::swap(rolling_counter_0x152_, other->rolling_counter_0x152_);
  std::swap(epb_faultcode_, other->epb_faultcode_);
  std::swap(epb_brakelampreq_, other->epb_brakelampreq_);
  std::swap(epb_sysfaultstatus_, other->epb_sysfaultstatus_);
  std::swap(epb_parkingstatus_, other->epb_parkingstatus_);
  std::swap(epb_switchstatus_, other->epb_switchstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Epb_status_0x152_152::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Epb_status_0x152_152

// optional int32 checksum_0x152 = 1;
bool Epb_status_0x152_152::has_checksum_0x152() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Epb_status_0x152_152::set_has_checksum_0x152() {
  _has_bits_[0] |= 0x00000001u;
}
void Epb_status_0x152_152::clear_has_checksum_0x152() {
  _has_bits_[0] &= ~0x00000001u;
}
void Epb_status_0x152_152::clear_checksum_0x152() {
  checksum_0x152_ = 0;
  clear_has_checksum_0x152();
}
::google::protobuf::int32 Epb_status_0x152_152::checksum_0x152() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.checksum_0x152)
  return checksum_0x152_;
}
void Epb_status_0x152_152::set_checksum_0x152(::google::protobuf::int32 value) {
  set_has_checksum_0x152();
  checksum_0x152_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.checksum_0x152)
}

// optional int32 rolling_counter_0x152 = 2;
bool Epb_status_0x152_152::has_rolling_counter_0x152() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Epb_status_0x152_152::set_has_rolling_counter_0x152() {
  _has_bits_[0] |= 0x00000002u;
}
void Epb_status_0x152_152::clear_has_rolling_counter_0x152() {
  _has_bits_[0] &= ~0x00000002u;
}
void Epb_status_0x152_152::clear_rolling_counter_0x152() {
  rolling_counter_0x152_ = 0;
  clear_has_rolling_counter_0x152();
}
::google::protobuf::int32 Epb_status_0x152_152::rolling_counter_0x152() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.rolling_counter_0x152)
  return rolling_counter_0x152_;
}
void Epb_status_0x152_152::set_rolling_counter_0x152(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x152();
  rolling_counter_0x152_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.rolling_counter_0x152)
}

// optional int32 epb_faultcode = 3;
bool Epb_status_0x152_152::has_epb_faultcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Epb_status_0x152_152::set_has_epb_faultcode() {
  _has_bits_[0] |= 0x00000004u;
}
void Epb_status_0x152_152::clear_has_epb_faultcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void Epb_status_0x152_152::clear_epb_faultcode() {
  epb_faultcode_ = 0;
  clear_has_epb_faultcode();
}
::google::protobuf::int32 Epb_status_0x152_152::epb_faultcode() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.epb_faultcode)
  return epb_faultcode_;
}
void Epb_status_0x152_152::set_epb_faultcode(::google::protobuf::int32 value) {
  set_has_epb_faultcode();
  epb_faultcode_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.epb_faultcode)
}

// optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_brakelampreqType epb_brakelampreq = 4;
bool Epb_status_0x152_152::has_epb_brakelampreq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Epb_status_0x152_152::set_has_epb_brakelampreq() {
  _has_bits_[0] |= 0x00000008u;
}
void Epb_status_0x152_152::clear_has_epb_brakelampreq() {
  _has_bits_[0] &= ~0x00000008u;
}
void Epb_status_0x152_152::clear_epb_brakelampreq() {
  epb_brakelampreq_ = 0;
  clear_has_epb_brakelampreq();
}
::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType Epb_status_0x152_152::epb_brakelampreq() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.epb_brakelampreq)
  return static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType >(epb_brakelampreq_);
}
void Epb_status_0x152_152::set_epb_brakelampreq(::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType value) {
  assert(::jmc_auto::canbus::Epb_status_0x152_152_Epb_brakelampreqType_IsValid(value));
  set_has_epb_brakelampreq();
  epb_brakelampreq_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.epb_brakelampreq)
}

// optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_sysfaultstatusType epb_sysfaultstatus = 5;
bool Epb_status_0x152_152::has_epb_sysfaultstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Epb_status_0x152_152::set_has_epb_sysfaultstatus() {
  _has_bits_[0] |= 0x00000010u;
}
void Epb_status_0x152_152::clear_has_epb_sysfaultstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void Epb_status_0x152_152::clear_epb_sysfaultstatus() {
  epb_sysfaultstatus_ = 0;
  clear_has_epb_sysfaultstatus();
}
::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType Epb_status_0x152_152::epb_sysfaultstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.epb_sysfaultstatus)
  return static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType >(epb_sysfaultstatus_);
}
void Epb_status_0x152_152::set_epb_sysfaultstatus(::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType value) {
  assert(::jmc_auto::canbus::Epb_status_0x152_152_Epb_sysfaultstatusType_IsValid(value));
  set_has_epb_sysfaultstatus();
  epb_sysfaultstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.epb_sysfaultstatus)
}

// optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_parkingstatusType epb_parkingstatus = 6;
bool Epb_status_0x152_152::has_epb_parkingstatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Epb_status_0x152_152::set_has_epb_parkingstatus() {
  _has_bits_[0] |= 0x00000020u;
}
void Epb_status_0x152_152::clear_has_epb_parkingstatus() {
  _has_bits_[0] &= ~0x00000020u;
}
void Epb_status_0x152_152::clear_epb_parkingstatus() {
  epb_parkingstatus_ = 0;
  clear_has_epb_parkingstatus();
}
::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType Epb_status_0x152_152::epb_parkingstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.epb_parkingstatus)
  return static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType >(epb_parkingstatus_);
}
void Epb_status_0x152_152::set_epb_parkingstatus(::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType value) {
  assert(::jmc_auto::canbus::Epb_status_0x152_152_Epb_parkingstatusType_IsValid(value));
  set_has_epb_parkingstatus();
  epb_parkingstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.epb_parkingstatus)
}

// optional .jmc_auto.canbus.Epb_status_0x152_152.Epb_switchstatusType epb_switchstatus = 7;
bool Epb_status_0x152_152::has_epb_switchstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Epb_status_0x152_152::set_has_epb_switchstatus() {
  _has_bits_[0] |= 0x00000040u;
}
void Epb_status_0x152_152::clear_has_epb_switchstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
void Epb_status_0x152_152::clear_epb_switchstatus() {
  epb_switchstatus_ = 0;
  clear_has_epb_switchstatus();
}
::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType Epb_status_0x152_152::epb_switchstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Epb_status_0x152_152.epb_switchstatus)
  return static_cast< ::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType >(epb_switchstatus_);
}
void Epb_status_0x152_152::set_epb_switchstatus(::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType value) {
  assert(::jmc_auto::canbus::Epb_status_0x152_152_Epb_switchstatusType_IsValid(value));
  set_has_epb_switchstatus();
  epb_switchstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Epb_status_0x152_152.epb_switchstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_abs_0x211_211::kChecksum0X211FieldNumber;
const int Gw_abs_0x211_211::kRollingcounter0X211FieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdreristatusFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdrelestatusFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdfrntristatusFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdfrntlestatusFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdreriFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdreleFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdfrntriFieldNumber;
const int Gw_abs_0x211_211::kAbsWhlspdfrntleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_abs_0x211_211::Gw_abs_0x211_211()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_abs_0x211_211)
}
Gw_abs_0x211_211::Gw_abs_0x211_211(const Gw_abs_0x211_211& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x211_, &from.checksum_0x211_,
    reinterpret_cast<char*>(&abs_whlspdfrntle_) -
    reinterpret_cast<char*>(&checksum_0x211_) + sizeof(abs_whlspdfrntle_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_abs_0x211_211)
}

void Gw_abs_0x211_211::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x211_, 0, reinterpret_cast<char*>(&abs_whlspdfrntle_) -
    reinterpret_cast<char*>(&checksum_0x211_) + sizeof(abs_whlspdfrntle_));
}

Gw_abs_0x211_211::~Gw_abs_0x211_211() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_abs_0x211_211)
  SharedDtor();
}

void Gw_abs_0x211_211::SharedDtor() {
}

void Gw_abs_0x211_211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_abs_0x211_211::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_abs_0x211_211& Gw_abs_0x211_211::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_abs_0x211_211* Gw_abs_0x211_211::New(::google::protobuf::Arena* arena) const {
  Gw_abs_0x211_211* n = new Gw_abs_0x211_211;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_abs_0x211_211::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_abs_0x211_211)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x211_, 0, reinterpret_cast<char*>(&abs_whlspdrele_) -
      reinterpret_cast<char*>(&checksum_0x211_) + sizeof(abs_whlspdrele_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&abs_whlspdfrntri_, 0, reinterpret_cast<char*>(&abs_whlspdfrntle_) -
      reinterpret_cast<char*>(&abs_whlspdfrntri_) + sizeof(abs_whlspdfrntle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_abs_0x211_211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_abs_0x211_211)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x211 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x211();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x211_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rollingcounter_0x211 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rollingcounter_0x211();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rollingcounter_0x211_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdreristatusType abs_whlspdreristatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType_IsValid(value)) {
            set_abs_whlspdreristatus(static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdrelestatusType abs_whlspdrelestatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType_IsValid(value)) {
            set_abs_whlspdrelestatus(static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType_IsValid(value)) {
            set_abs_whlspdfrntristatus(static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType_IsValid(value)) {
            set_abs_whlspdfrntlestatus(static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double abs_whlspdreri = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_abs_whlspdreri();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &abs_whlspdreri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double abs_whlspdrele = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_abs_whlspdrele();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &abs_whlspdrele_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double abs_whlspdfrntri = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_abs_whlspdfrntri();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &abs_whlspdfrntri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double abs_whlspdfrntle = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_abs_whlspdfrntle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &abs_whlspdfrntle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_abs_0x211_211)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_abs_0x211_211)
  return false;
#undef DO_
}

void Gw_abs_0x211_211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_abs_0x211_211)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x211 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x211(), output);
  }

  // optional int32 rollingcounter_0x211 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rollingcounter_0x211(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdreristatusType abs_whlspdreristatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->abs_whlspdreristatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdrelestatusType abs_whlspdrelestatus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->abs_whlspdrelestatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->abs_whlspdfrntristatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->abs_whlspdfrntlestatus(), output);
  }

  // optional double abs_whlspdreri = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->abs_whlspdreri(), output);
  }

  // optional double abs_whlspdrele = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->abs_whlspdrele(), output);
  }

  // optional double abs_whlspdfrntri = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->abs_whlspdfrntri(), output);
  }

  // optional double abs_whlspdfrntle = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->abs_whlspdfrntle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_abs_0x211_211)
}

::google::protobuf::uint8* Gw_abs_0x211_211::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_abs_0x211_211)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x211 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x211(), target);
  }

  // optional int32 rollingcounter_0x211 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rollingcounter_0x211(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdreristatusType abs_whlspdreristatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->abs_whlspdreristatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdrelestatusType abs_whlspdrelestatus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->abs_whlspdrelestatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->abs_whlspdfrntristatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->abs_whlspdfrntlestatus(), target);
  }

  // optional double abs_whlspdreri = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->abs_whlspdreri(), target);
  }

  // optional double abs_whlspdrele = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->abs_whlspdrele(), target);
  }

  // optional double abs_whlspdfrntri = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->abs_whlspdfrntri(), target);
  }

  // optional double abs_whlspdfrntle = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->abs_whlspdfrntle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_abs_0x211_211)
  return target;
}

size_t Gw_abs_0x211_211::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_abs_0x211_211)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x211 = 1;
    if (has_checksum_0x211()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x211());
    }

    // optional int32 rollingcounter_0x211 = 2;
    if (has_rollingcounter_0x211()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rollingcounter_0x211());
    }

    // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdreristatusType abs_whlspdreristatus = 3;
    if (has_abs_whlspdreristatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlspdreristatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdrelestatusType abs_whlspdrelestatus = 4;
    if (has_abs_whlspdrelestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlspdrelestatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 5;
    if (has_abs_whlspdfrntristatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlspdfrntristatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 6;
    if (has_abs_whlspdfrntlestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlspdfrntlestatus());
    }

    // optional double abs_whlspdreri = 7;
    if (has_abs_whlspdreri()) {
      total_size += 1 + 8;
    }

    // optional double abs_whlspdrele = 8;
    if (has_abs_whlspdrele()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional double abs_whlspdfrntri = 9;
    if (has_abs_whlspdfrntri()) {
      total_size += 1 + 8;
    }

    // optional double abs_whlspdfrntle = 10;
    if (has_abs_whlspdfrntle()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_abs_0x211_211::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_abs_0x211_211)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_abs_0x211_211* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_abs_0x211_211>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_abs_0x211_211)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_abs_0x211_211)
    MergeFrom(*source);
  }
}

void Gw_abs_0x211_211::MergeFrom(const Gw_abs_0x211_211& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_abs_0x211_211)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x211_ = from.checksum_0x211_;
    }
    if (cached_has_bits & 0x00000002u) {
      rollingcounter_0x211_ = from.rollingcounter_0x211_;
    }
    if (cached_has_bits & 0x00000004u) {
      abs_whlspdreristatus_ = from.abs_whlspdreristatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      abs_whlspdrelestatus_ = from.abs_whlspdrelestatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      abs_whlspdfrntristatus_ = from.abs_whlspdfrntristatus_;
    }
    if (cached_has_bits & 0x00000020u) {
      abs_whlspdfrntlestatus_ = from.abs_whlspdfrntlestatus_;
    }
    if (cached_has_bits & 0x00000040u) {
      abs_whlspdreri_ = from.abs_whlspdreri_;
    }
    if (cached_has_bits & 0x00000080u) {
      abs_whlspdrele_ = from.abs_whlspdrele_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      abs_whlspdfrntri_ = from.abs_whlspdfrntri_;
    }
    if (cached_has_bits & 0x00000200u) {
      abs_whlspdfrntle_ = from.abs_whlspdfrntle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_abs_0x211_211::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_abs_0x211_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_abs_0x211_211::CopyFrom(const Gw_abs_0x211_211& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_abs_0x211_211)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_abs_0x211_211::IsInitialized() const {
  return true;
}

void Gw_abs_0x211_211::Swap(Gw_abs_0x211_211* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_abs_0x211_211::InternalSwap(Gw_abs_0x211_211* other) {
  std::swap(checksum_0x211_, other->checksum_0x211_);
  std::swap(rollingcounter_0x211_, other->rollingcounter_0x211_);
  std::swap(abs_whlspdreristatus_, other->abs_whlspdreristatus_);
  std::swap(abs_whlspdrelestatus_, other->abs_whlspdrelestatus_);
  std::swap(abs_whlspdfrntristatus_, other->abs_whlspdfrntristatus_);
  std::swap(abs_whlspdfrntlestatus_, other->abs_whlspdfrntlestatus_);
  std::swap(abs_whlspdreri_, other->abs_whlspdreri_);
  std::swap(abs_whlspdrele_, other->abs_whlspdrele_);
  std::swap(abs_whlspdfrntri_, other->abs_whlspdfrntri_);
  std::swap(abs_whlspdfrntle_, other->abs_whlspdfrntle_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_abs_0x211_211::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_abs_0x211_211

// optional int32 checksum_0x211 = 1;
bool Gw_abs_0x211_211::has_checksum_0x211() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_abs_0x211_211::set_has_checksum_0x211() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_abs_0x211_211::clear_has_checksum_0x211() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_abs_0x211_211::clear_checksum_0x211() {
  checksum_0x211_ = 0;
  clear_has_checksum_0x211();
}
::google::protobuf::int32 Gw_abs_0x211_211::checksum_0x211() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.checksum_0x211)
  return checksum_0x211_;
}
void Gw_abs_0x211_211::set_checksum_0x211(::google::protobuf::int32 value) {
  set_has_checksum_0x211();
  checksum_0x211_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.checksum_0x211)
}

// optional int32 rollingcounter_0x211 = 2;
bool Gw_abs_0x211_211::has_rollingcounter_0x211() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_abs_0x211_211::set_has_rollingcounter_0x211() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_abs_0x211_211::clear_has_rollingcounter_0x211() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_abs_0x211_211::clear_rollingcounter_0x211() {
  rollingcounter_0x211_ = 0;
  clear_has_rollingcounter_0x211();
}
::google::protobuf::int32 Gw_abs_0x211_211::rollingcounter_0x211() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.rollingcounter_0x211)
  return rollingcounter_0x211_;
}
void Gw_abs_0x211_211::set_rollingcounter_0x211(::google::protobuf::int32 value) {
  set_has_rollingcounter_0x211();
  rollingcounter_0x211_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.rollingcounter_0x211)
}

// optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdreristatusType abs_whlspdreristatus = 3;
bool Gw_abs_0x211_211::has_abs_whlspdreristatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdreristatus() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdreristatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_abs_0x211_211::clear_abs_whlspdreristatus() {
  abs_whlspdreristatus_ = 0;
  clear_has_abs_whlspdreristatus();
}
::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType Gw_abs_0x211_211::abs_whlspdreristatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdreristatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType >(abs_whlspdreristatus_);
}
void Gw_abs_0x211_211::set_abs_whlspdreristatus(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdreristatusType_IsValid(value));
  set_has_abs_whlspdreristatus();
  abs_whlspdreristatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdreristatus)
}

// optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdrelestatusType abs_whlspdrelestatus = 4;
bool Gw_abs_0x211_211::has_abs_whlspdrelestatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdrelestatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdrelestatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_abs_0x211_211::clear_abs_whlspdrelestatus() {
  abs_whlspdrelestatus_ = 0;
  clear_has_abs_whlspdrelestatus();
}
::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType Gw_abs_0x211_211::abs_whlspdrelestatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdrelestatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType >(abs_whlspdrelestatus_);
}
void Gw_abs_0x211_211::set_abs_whlspdrelestatus(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdrelestatusType_IsValid(value));
  set_has_abs_whlspdrelestatus();
  abs_whlspdrelestatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdrelestatus)
}

// optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntristatusType abs_whlspdfrntristatus = 5;
bool Gw_abs_0x211_211::has_abs_whlspdfrntristatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdfrntristatus() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdfrntristatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_abs_0x211_211::clear_abs_whlspdfrntristatus() {
  abs_whlspdfrntristatus_ = 0;
  clear_has_abs_whlspdfrntristatus();
}
::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType Gw_abs_0x211_211::abs_whlspdfrntristatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntristatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType >(abs_whlspdfrntristatus_);
}
void Gw_abs_0x211_211::set_abs_whlspdfrntristatus(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntristatusType_IsValid(value));
  set_has_abs_whlspdfrntristatus();
  abs_whlspdfrntristatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntristatus)
}

// optional .jmc_auto.canbus.Gw_abs_0x211_211.Abs_whlspdfrntlestatusType abs_whlspdfrntlestatus = 6;
bool Gw_abs_0x211_211::has_abs_whlspdfrntlestatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdfrntlestatus() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdfrntlestatus() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_abs_0x211_211::clear_abs_whlspdfrntlestatus() {
  abs_whlspdfrntlestatus_ = 0;
  clear_has_abs_whlspdfrntlestatus();
}
::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType Gw_abs_0x211_211::abs_whlspdfrntlestatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntlestatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType >(abs_whlspdfrntlestatus_);
}
void Gw_abs_0x211_211::set_abs_whlspdfrntlestatus(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_0x211_211_Abs_whlspdfrntlestatusType_IsValid(value));
  set_has_abs_whlspdfrntlestatus();
  abs_whlspdfrntlestatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntlestatus)
}

// optional double abs_whlspdreri = 7;
bool Gw_abs_0x211_211::has_abs_whlspdreri() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdreri() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdreri() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_abs_0x211_211::clear_abs_whlspdreri() {
  abs_whlspdreri_ = 0;
  clear_has_abs_whlspdreri();
}
double Gw_abs_0x211_211::abs_whlspdreri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdreri)
  return abs_whlspdreri_;
}
void Gw_abs_0x211_211::set_abs_whlspdreri(double value) {
  set_has_abs_whlspdreri();
  abs_whlspdreri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdreri)
}

// optional double abs_whlspdrele = 8;
bool Gw_abs_0x211_211::has_abs_whlspdrele() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdrele() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdrele() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_abs_0x211_211::clear_abs_whlspdrele() {
  abs_whlspdrele_ = 0;
  clear_has_abs_whlspdrele();
}
double Gw_abs_0x211_211::abs_whlspdrele() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdrele)
  return abs_whlspdrele_;
}
void Gw_abs_0x211_211::set_abs_whlspdrele(double value) {
  set_has_abs_whlspdrele();
  abs_whlspdrele_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdrele)
}

// optional double abs_whlspdfrntri = 9;
bool Gw_abs_0x211_211::has_abs_whlspdfrntri() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdfrntri() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdfrntri() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_abs_0x211_211::clear_abs_whlspdfrntri() {
  abs_whlspdfrntri_ = 0;
  clear_has_abs_whlspdfrntri();
}
double Gw_abs_0x211_211::abs_whlspdfrntri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntri)
  return abs_whlspdfrntri_;
}
void Gw_abs_0x211_211::set_abs_whlspdfrntri(double value) {
  set_has_abs_whlspdfrntri();
  abs_whlspdfrntri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntri)
}

// optional double abs_whlspdfrntle = 10;
bool Gw_abs_0x211_211::has_abs_whlspdfrntle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_abs_0x211_211::set_has_abs_whlspdfrntle() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_abs_0x211_211::clear_has_abs_whlspdfrntle() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_abs_0x211_211::clear_abs_whlspdfrntle() {
  abs_whlspdfrntle_ = 0;
  clear_has_abs_whlspdfrntle();
}
double Gw_abs_0x211_211::abs_whlspdfrntle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntle)
  return abs_whlspdfrntle_;
}
void Gw_abs_0x211_211::set_abs_whlspdfrntle(double value) {
  set_has_abs_whlspdfrntle();
  abs_whlspdfrntle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_0x211_211.abs_whlspdfrntle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bcm_door_0x310_310::kBcmChecksum0X310FieldNumber;
const int Bcm_door_0x310_310::kBcmRollingCounter0X310FieldNumber;
const int Bcm_door_0x310_310::kBcmRearwiperstsFieldNumber;
const int Bcm_door_0x310_310::kBcmFrontwiperstsFieldNumber;
const int Bcm_door_0x310_310::kBcmChargeplugstsFieldNumber;
const int Bcm_door_0x310_310::kBcmEnginehoodstsFieldNumber;
const int Bcm_door_0x310_310::kBcmTrunkdoorpreunlockstsFieldNumber;
const int Bcm_door_0x310_310::kBcmAntitheftstsFieldNumber;
const int Bcm_door_0x310_310::kBcmLockunlockfeedbackFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorlockststrunkFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorststrunkFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorlockstsrearriFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorlockstsrearleFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorlockstsfrntriFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorlockstsfrntleFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorstsrearriFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorstsrearleFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorstsfrntriFieldNumber;
const int Bcm_door_0x310_310::kBcmDoorstsfrntleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bcm_door_0x310_310::Bcm_door_0x310_310()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Bcm_door_0x310_310)
}
Bcm_door_0x310_310::Bcm_door_0x310_310(const Bcm_door_0x310_310& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bcm_checksum_0x310_, &from.bcm_checksum_0x310_,
    reinterpret_cast<char*>(&bcm_doorstsfrntle_) -
    reinterpret_cast<char*>(&bcm_checksum_0x310_) + sizeof(bcm_doorstsfrntle_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Bcm_door_0x310_310)
}

void Bcm_door_0x310_310::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bcm_checksum_0x310_, 0, reinterpret_cast<char*>(&bcm_doorstsfrntle_) -
    reinterpret_cast<char*>(&bcm_checksum_0x310_) + sizeof(bcm_doorstsfrntle_));
}

Bcm_door_0x310_310::~Bcm_door_0x310_310() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Bcm_door_0x310_310)
  SharedDtor();
}

void Bcm_door_0x310_310::SharedDtor() {
}

void Bcm_door_0x310_310::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bcm_door_0x310_310::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bcm_door_0x310_310& Bcm_door_0x310_310::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bcm_door_0x310_310* Bcm_door_0x310_310::New(::google::protobuf::Arena* arena) const {
  Bcm_door_0x310_310* n = new Bcm_door_0x310_310;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bcm_door_0x310_310::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Bcm_door_0x310_310)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&bcm_checksum_0x310_, 0, reinterpret_cast<char*>(&bcm_antitheftsts_) -
      reinterpret_cast<char*>(&bcm_checksum_0x310_) + sizeof(bcm_antitheftsts_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&bcm_lockunlockfeedback_, 0, reinterpret_cast<char*>(&bcm_doorstsrearri_) -
      reinterpret_cast<char*>(&bcm_lockunlockfeedback_) + sizeof(bcm_doorstsrearri_));
  }
  if (_has_bits_[16 / 32] & 458752u) {
    ::memset(&bcm_doorstsrearle_, 0, reinterpret_cast<char*>(&bcm_doorstsfrntle_) -
      reinterpret_cast<char*>(&bcm_doorstsrearle_) + sizeof(bcm_doorstsfrntle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bcm_door_0x310_310::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Bcm_door_0x310_310)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bcm_checksum_0x310 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bcm_checksum_0x310();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bcm_checksum_0x310_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bcm_rolling_counter_0x310 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bcm_rolling_counter_0x310();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bcm_rolling_counter_0x310_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_rearwiperstsType bcm_rearwipersts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType_IsValid(value)) {
            set_bcm_rearwipersts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_frontwiperstsType bcm_frontwipersts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType_IsValid(value)) {
            set_bcm_frontwipersts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_chargeplugstsType bcm_chargeplugsts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType_IsValid(value)) {
            set_bcm_chargeplugsts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_enginehoodstsType bcm_enginehoodsts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType_IsValid(value)) {
            set_bcm_enginehoodsts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType_IsValid(value)) {
            set_bcm_trunkdoorpreunlocksts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_antitheftstsType bcm_antitheftsts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType_IsValid(value)) {
            set_bcm_antitheftsts(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType_IsValid(value)) {
            set_bcm_lockunlockfeedback(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockststrunkType bcm_doorlockststrunk = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType_IsValid(value)) {
            set_bcm_doorlockststrunk(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorststrunkType bcm_doorststrunk = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType_IsValid(value)) {
            set_bcm_doorststrunk(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType_IsValid(value)) {
            set_bcm_doorlockstsrearri(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType_IsValid(value)) {
            set_bcm_doorlockstsrearle(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType_IsValid(value)) {
            set_bcm_doorlockstsfrntri(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType_IsValid(value)) {
            set_bcm_doorlockstsfrntle(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearriType bcm_doorstsrearri = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType_IsValid(value)) {
            set_bcm_doorstsrearri(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(16, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearleType bcm_doorstsrearle = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType_IsValid(value)) {
            set_bcm_doorstsrearle(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntriType bcm_doorstsfrntri = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType_IsValid(value)) {
            set_bcm_doorstsfrntri(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(18, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntleType bcm_doorstsfrntle = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType_IsValid(value)) {
            set_bcm_doorstsfrntle(static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(19, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Bcm_door_0x310_310)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Bcm_door_0x310_310)
  return false;
#undef DO_
}

void Bcm_door_0x310_310::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Bcm_door_0x310_310)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bcm_checksum_0x310 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bcm_checksum_0x310(), output);
  }

  // optional int32 bcm_rolling_counter_0x310 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bcm_rolling_counter_0x310(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_rearwiperstsType bcm_rearwipersts = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bcm_rearwipersts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_frontwiperstsType bcm_frontwipersts = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bcm_frontwipersts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_chargeplugstsType bcm_chargeplugsts = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->bcm_chargeplugsts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_enginehoodstsType bcm_enginehoodsts = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->bcm_enginehoodsts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->bcm_trunkdoorpreunlocksts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_antitheftstsType bcm_antitheftsts = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->bcm_antitheftsts(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->bcm_lockunlockfeedback(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockststrunkType bcm_doorlockststrunk = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->bcm_doorlockststrunk(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorststrunkType bcm_doorststrunk = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->bcm_doorststrunk(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->bcm_doorlockstsrearri(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->bcm_doorlockstsrearle(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->bcm_doorlockstsfrntri(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->bcm_doorlockstsfrntle(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearriType bcm_doorstsrearri = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->bcm_doorstsrearri(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearleType bcm_doorstsrearle = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->bcm_doorstsrearle(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntriType bcm_doorstsfrntri = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->bcm_doorstsfrntri(), output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntleType bcm_doorstsfrntle = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->bcm_doorstsfrntle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Bcm_door_0x310_310)
}

::google::protobuf::uint8* Bcm_door_0x310_310::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Bcm_door_0x310_310)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bcm_checksum_0x310 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bcm_checksum_0x310(), target);
  }

  // optional int32 bcm_rolling_counter_0x310 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bcm_rolling_counter_0x310(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_rearwiperstsType bcm_rearwipersts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bcm_rearwipersts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_frontwiperstsType bcm_frontwipersts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bcm_frontwipersts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_chargeplugstsType bcm_chargeplugsts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->bcm_chargeplugsts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_enginehoodstsType bcm_enginehoodsts = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->bcm_enginehoodsts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->bcm_trunkdoorpreunlocksts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_antitheftstsType bcm_antitheftsts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->bcm_antitheftsts(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->bcm_lockunlockfeedback(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockststrunkType bcm_doorlockststrunk = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->bcm_doorlockststrunk(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorststrunkType bcm_doorststrunk = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->bcm_doorststrunk(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->bcm_doorlockstsrearri(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->bcm_doorlockstsrearle(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->bcm_doorlockstsfrntri(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->bcm_doorlockstsfrntle(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearriType bcm_doorstsrearri = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->bcm_doorstsrearri(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearleType bcm_doorstsrearle = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->bcm_doorstsrearle(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntriType bcm_doorstsfrntri = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->bcm_doorstsfrntri(), target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntleType bcm_doorstsfrntle = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->bcm_doorstsfrntle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Bcm_door_0x310_310)
  return target;
}

size_t Bcm_door_0x310_310::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Bcm_door_0x310_310)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 bcm_checksum_0x310 = 1;
    if (has_bcm_checksum_0x310()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bcm_checksum_0x310());
    }

    // optional int32 bcm_rolling_counter_0x310 = 2;
    if (has_bcm_rolling_counter_0x310()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bcm_rolling_counter_0x310());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_rearwiperstsType bcm_rearwipersts = 3;
    if (has_bcm_rearwipersts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_rearwipersts());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_frontwiperstsType bcm_frontwipersts = 4;
    if (has_bcm_frontwipersts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_frontwipersts());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_chargeplugstsType bcm_chargeplugsts = 5;
    if (has_bcm_chargeplugsts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_chargeplugsts());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_enginehoodstsType bcm_enginehoodsts = 6;
    if (has_bcm_enginehoodsts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_enginehoodsts());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 7;
    if (has_bcm_trunkdoorpreunlocksts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_trunkdoorpreunlocksts());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_antitheftstsType bcm_antitheftsts = 8;
    if (has_bcm_antitheftsts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_antitheftsts());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 9;
    if (has_bcm_lockunlockfeedback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_lockunlockfeedback());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockststrunkType bcm_doorlockststrunk = 10;
    if (has_bcm_doorlockststrunk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockststrunk());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorststrunkType bcm_doorststrunk = 11;
    if (has_bcm_doorststrunk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorststrunk());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 12;
    if (has_bcm_doorlockstsrearri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockstsrearri());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 13;
    if (has_bcm_doorlockstsrearle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockstsrearle());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 14;
    if (has_bcm_doorlockstsfrntri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockstsfrntri());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 15;
    if (has_bcm_doorlockstsfrntle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockstsfrntle());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearriType bcm_doorstsrearri = 16;
    if (has_bcm_doorstsrearri()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorstsrearri());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearleType bcm_doorstsrearle = 17;
    if (has_bcm_doorstsrearle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorstsrearle());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntriType bcm_doorstsfrntri = 18;
    if (has_bcm_doorstsfrntri()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorstsfrntri());
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntleType bcm_doorstsfrntle = 19;
    if (has_bcm_doorstsfrntle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorstsfrntle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bcm_door_0x310_310::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Bcm_door_0x310_310)
  GOOGLE_DCHECK_NE(&from, this);
  const Bcm_door_0x310_310* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bcm_door_0x310_310>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Bcm_door_0x310_310)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Bcm_door_0x310_310)
    MergeFrom(*source);
  }
}

void Bcm_door_0x310_310::MergeFrom(const Bcm_door_0x310_310& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Bcm_door_0x310_310)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      bcm_checksum_0x310_ = from.bcm_checksum_0x310_;
    }
    if (cached_has_bits & 0x00000002u) {
      bcm_rolling_counter_0x310_ = from.bcm_rolling_counter_0x310_;
    }
    if (cached_has_bits & 0x00000004u) {
      bcm_rearwipersts_ = from.bcm_rearwipersts_;
    }
    if (cached_has_bits & 0x00000008u) {
      bcm_frontwipersts_ = from.bcm_frontwipersts_;
    }
    if (cached_has_bits & 0x00000010u) {
      bcm_chargeplugsts_ = from.bcm_chargeplugsts_;
    }
    if (cached_has_bits & 0x00000020u) {
      bcm_enginehoodsts_ = from.bcm_enginehoodsts_;
    }
    if (cached_has_bits & 0x00000040u) {
      bcm_trunkdoorpreunlocksts_ = from.bcm_trunkdoorpreunlocksts_;
    }
    if (cached_has_bits & 0x00000080u) {
      bcm_antitheftsts_ = from.bcm_antitheftsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      bcm_lockunlockfeedback_ = from.bcm_lockunlockfeedback_;
    }
    if (cached_has_bits & 0x00000200u) {
      bcm_doorlockststrunk_ = from.bcm_doorlockststrunk_;
    }
    if (cached_has_bits & 0x00000400u) {
      bcm_doorststrunk_ = from.bcm_doorststrunk_;
    }
    if (cached_has_bits & 0x00000800u) {
      bcm_doorlockstsrearri_ = from.bcm_doorlockstsrearri_;
    }
    if (cached_has_bits & 0x00001000u) {
      bcm_doorlockstsrearle_ = from.bcm_doorlockstsrearle_;
    }
    if (cached_has_bits & 0x00002000u) {
      bcm_doorlockstsfrntri_ = from.bcm_doorlockstsfrntri_;
    }
    if (cached_has_bits & 0x00004000u) {
      bcm_doorlockstsfrntle_ = from.bcm_doorlockstsfrntle_;
    }
    if (cached_has_bits & 0x00008000u) {
      bcm_doorstsrearri_ = from.bcm_doorstsrearri_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      bcm_doorstsrearle_ = from.bcm_doorstsrearle_;
    }
    if (cached_has_bits & 0x00020000u) {
      bcm_doorstsfrntri_ = from.bcm_doorstsfrntri_;
    }
    if (cached_has_bits & 0x00040000u) {
      bcm_doorstsfrntle_ = from.bcm_doorstsfrntle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Bcm_door_0x310_310::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Bcm_door_0x310_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bcm_door_0x310_310::CopyFrom(const Bcm_door_0x310_310& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Bcm_door_0x310_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bcm_door_0x310_310::IsInitialized() const {
  return true;
}

void Bcm_door_0x310_310::Swap(Bcm_door_0x310_310* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bcm_door_0x310_310::InternalSwap(Bcm_door_0x310_310* other) {
  std::swap(bcm_checksum_0x310_, other->bcm_checksum_0x310_);
  std::swap(bcm_rolling_counter_0x310_, other->bcm_rolling_counter_0x310_);
  std::swap(bcm_rearwipersts_, other->bcm_rearwipersts_);
  std::swap(bcm_frontwipersts_, other->bcm_frontwipersts_);
  std::swap(bcm_chargeplugsts_, other->bcm_chargeplugsts_);
  std::swap(bcm_enginehoodsts_, other->bcm_enginehoodsts_);
  std::swap(bcm_trunkdoorpreunlocksts_, other->bcm_trunkdoorpreunlocksts_);
  std::swap(bcm_antitheftsts_, other->bcm_antitheftsts_);
  std::swap(bcm_lockunlockfeedback_, other->bcm_lockunlockfeedback_);
  std::swap(bcm_doorlockststrunk_, other->bcm_doorlockststrunk_);
  std::swap(bcm_doorststrunk_, other->bcm_doorststrunk_);
  std::swap(bcm_doorlockstsrearri_, other->bcm_doorlockstsrearri_);
  std::swap(bcm_doorlockstsrearle_, other->bcm_doorlockstsrearle_);
  std::swap(bcm_doorlockstsfrntri_, other->bcm_doorlockstsfrntri_);
  std::swap(bcm_doorlockstsfrntle_, other->bcm_doorlockstsfrntle_);
  std::swap(bcm_doorstsrearri_, other->bcm_doorstsrearri_);
  std::swap(bcm_doorstsrearle_, other->bcm_doorstsrearle_);
  std::swap(bcm_doorstsfrntri_, other->bcm_doorstsfrntri_);
  std::swap(bcm_doorstsfrntle_, other->bcm_doorstsfrntle_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bcm_door_0x310_310::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bcm_door_0x310_310

// optional int32 bcm_checksum_0x310 = 1;
bool Bcm_door_0x310_310::has_bcm_checksum_0x310() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_checksum_0x310() {
  _has_bits_[0] |= 0x00000001u;
}
void Bcm_door_0x310_310::clear_has_bcm_checksum_0x310() {
  _has_bits_[0] &= ~0x00000001u;
}
void Bcm_door_0x310_310::clear_bcm_checksum_0x310() {
  bcm_checksum_0x310_ = 0;
  clear_has_bcm_checksum_0x310();
}
::google::protobuf::int32 Bcm_door_0x310_310::bcm_checksum_0x310() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_checksum_0x310)
  return bcm_checksum_0x310_;
}
void Bcm_door_0x310_310::set_bcm_checksum_0x310(::google::protobuf::int32 value) {
  set_has_bcm_checksum_0x310();
  bcm_checksum_0x310_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_checksum_0x310)
}

// optional int32 bcm_rolling_counter_0x310 = 2;
bool Bcm_door_0x310_310::has_bcm_rolling_counter_0x310() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_rolling_counter_0x310() {
  _has_bits_[0] |= 0x00000002u;
}
void Bcm_door_0x310_310::clear_has_bcm_rolling_counter_0x310() {
  _has_bits_[0] &= ~0x00000002u;
}
void Bcm_door_0x310_310::clear_bcm_rolling_counter_0x310() {
  bcm_rolling_counter_0x310_ = 0;
  clear_has_bcm_rolling_counter_0x310();
}
::google::protobuf::int32 Bcm_door_0x310_310::bcm_rolling_counter_0x310() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_rolling_counter_0x310)
  return bcm_rolling_counter_0x310_;
}
void Bcm_door_0x310_310::set_bcm_rolling_counter_0x310(::google::protobuf::int32 value) {
  set_has_bcm_rolling_counter_0x310();
  bcm_rolling_counter_0x310_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_rolling_counter_0x310)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_rearwiperstsType bcm_rearwipersts = 3;
bool Bcm_door_0x310_310::has_bcm_rearwipersts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_rearwipersts() {
  _has_bits_[0] |= 0x00000004u;
}
void Bcm_door_0x310_310::clear_has_bcm_rearwipersts() {
  _has_bits_[0] &= ~0x00000004u;
}
void Bcm_door_0x310_310::clear_bcm_rearwipersts() {
  bcm_rearwipersts_ = 0;
  clear_has_bcm_rearwipersts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType Bcm_door_0x310_310::bcm_rearwipersts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_rearwipersts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType >(bcm_rearwipersts_);
}
void Bcm_door_0x310_310::set_bcm_rearwipersts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_rearwiperstsType_IsValid(value));
  set_has_bcm_rearwipersts();
  bcm_rearwipersts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_rearwipersts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_frontwiperstsType bcm_frontwipersts = 4;
bool Bcm_door_0x310_310::has_bcm_frontwipersts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_frontwipersts() {
  _has_bits_[0] |= 0x00000008u;
}
void Bcm_door_0x310_310::clear_has_bcm_frontwipersts() {
  _has_bits_[0] &= ~0x00000008u;
}
void Bcm_door_0x310_310::clear_bcm_frontwipersts() {
  bcm_frontwipersts_ = 0;
  clear_has_bcm_frontwipersts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType Bcm_door_0x310_310::bcm_frontwipersts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_frontwipersts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType >(bcm_frontwipersts_);
}
void Bcm_door_0x310_310::set_bcm_frontwipersts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_frontwiperstsType_IsValid(value));
  set_has_bcm_frontwipersts();
  bcm_frontwipersts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_frontwipersts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_chargeplugstsType bcm_chargeplugsts = 5;
bool Bcm_door_0x310_310::has_bcm_chargeplugsts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_chargeplugsts() {
  _has_bits_[0] |= 0x00000010u;
}
void Bcm_door_0x310_310::clear_has_bcm_chargeplugsts() {
  _has_bits_[0] &= ~0x00000010u;
}
void Bcm_door_0x310_310::clear_bcm_chargeplugsts() {
  bcm_chargeplugsts_ = 0;
  clear_has_bcm_chargeplugsts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType Bcm_door_0x310_310::bcm_chargeplugsts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_chargeplugsts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType >(bcm_chargeplugsts_);
}
void Bcm_door_0x310_310::set_bcm_chargeplugsts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_chargeplugstsType_IsValid(value));
  set_has_bcm_chargeplugsts();
  bcm_chargeplugsts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_chargeplugsts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_enginehoodstsType bcm_enginehoodsts = 6;
bool Bcm_door_0x310_310::has_bcm_enginehoodsts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_enginehoodsts() {
  _has_bits_[0] |= 0x00000020u;
}
void Bcm_door_0x310_310::clear_has_bcm_enginehoodsts() {
  _has_bits_[0] &= ~0x00000020u;
}
void Bcm_door_0x310_310::clear_bcm_enginehoodsts() {
  bcm_enginehoodsts_ = 0;
  clear_has_bcm_enginehoodsts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType Bcm_door_0x310_310::bcm_enginehoodsts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_enginehoodsts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType >(bcm_enginehoodsts_);
}
void Bcm_door_0x310_310::set_bcm_enginehoodsts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_enginehoodstsType_IsValid(value));
  set_has_bcm_enginehoodsts();
  bcm_enginehoodsts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_enginehoodsts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_trunkdoorpreunlockstsType bcm_trunkdoorpreunlocksts = 7;
bool Bcm_door_0x310_310::has_bcm_trunkdoorpreunlocksts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_trunkdoorpreunlocksts() {
  _has_bits_[0] |= 0x00000040u;
}
void Bcm_door_0x310_310::clear_has_bcm_trunkdoorpreunlocksts() {
  _has_bits_[0] &= ~0x00000040u;
}
void Bcm_door_0x310_310::clear_bcm_trunkdoorpreunlocksts() {
  bcm_trunkdoorpreunlocksts_ = 0;
  clear_has_bcm_trunkdoorpreunlocksts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType Bcm_door_0x310_310::bcm_trunkdoorpreunlocksts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_trunkdoorpreunlocksts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType >(bcm_trunkdoorpreunlocksts_);
}
void Bcm_door_0x310_310::set_bcm_trunkdoorpreunlocksts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_trunkdoorpreunlockstsType_IsValid(value));
  set_has_bcm_trunkdoorpreunlocksts();
  bcm_trunkdoorpreunlocksts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_trunkdoorpreunlocksts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_antitheftstsType bcm_antitheftsts = 8;
bool Bcm_door_0x310_310::has_bcm_antitheftsts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_antitheftsts() {
  _has_bits_[0] |= 0x00000080u;
}
void Bcm_door_0x310_310::clear_has_bcm_antitheftsts() {
  _has_bits_[0] &= ~0x00000080u;
}
void Bcm_door_0x310_310::clear_bcm_antitheftsts() {
  bcm_antitheftsts_ = 0;
  clear_has_bcm_antitheftsts();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType Bcm_door_0x310_310::bcm_antitheftsts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_antitheftsts)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType >(bcm_antitheftsts_);
}
void Bcm_door_0x310_310::set_bcm_antitheftsts(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_antitheftstsType_IsValid(value));
  set_has_bcm_antitheftsts();
  bcm_antitheftsts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_antitheftsts)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_lockunlockfeedbackType bcm_lockunlockfeedback = 9;
bool Bcm_door_0x310_310::has_bcm_lockunlockfeedback() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_lockunlockfeedback() {
  _has_bits_[0] |= 0x00000100u;
}
void Bcm_door_0x310_310::clear_has_bcm_lockunlockfeedback() {
  _has_bits_[0] &= ~0x00000100u;
}
void Bcm_door_0x310_310::clear_bcm_lockunlockfeedback() {
  bcm_lockunlockfeedback_ = 0;
  clear_has_bcm_lockunlockfeedback();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType Bcm_door_0x310_310::bcm_lockunlockfeedback() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_lockunlockfeedback)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType >(bcm_lockunlockfeedback_);
}
void Bcm_door_0x310_310::set_bcm_lockunlockfeedback(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_lockunlockfeedbackType_IsValid(value));
  set_has_bcm_lockunlockfeedback();
  bcm_lockunlockfeedback_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_lockunlockfeedback)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockststrunkType bcm_doorlockststrunk = 10;
bool Bcm_door_0x310_310::has_bcm_doorlockststrunk() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorlockststrunk() {
  _has_bits_[0] |= 0x00000200u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorlockststrunk() {
  _has_bits_[0] &= ~0x00000200u;
}
void Bcm_door_0x310_310::clear_bcm_doorlockststrunk() {
  bcm_doorlockststrunk_ = 0;
  clear_has_bcm_doorlockststrunk();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType Bcm_door_0x310_310::bcm_doorlockststrunk() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockststrunk)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType >(bcm_doorlockststrunk_);
}
void Bcm_door_0x310_310::set_bcm_doorlockststrunk(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockststrunkType_IsValid(value));
  set_has_bcm_doorlockststrunk();
  bcm_doorlockststrunk_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockststrunk)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorststrunkType bcm_doorststrunk = 11;
bool Bcm_door_0x310_310::has_bcm_doorststrunk() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorststrunk() {
  _has_bits_[0] |= 0x00000400u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorststrunk() {
  _has_bits_[0] &= ~0x00000400u;
}
void Bcm_door_0x310_310::clear_bcm_doorststrunk() {
  bcm_doorststrunk_ = 0;
  clear_has_bcm_doorststrunk();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType Bcm_door_0x310_310::bcm_doorststrunk() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorststrunk)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType >(bcm_doorststrunk_);
}
void Bcm_door_0x310_310::set_bcm_doorststrunk(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorststrunkType_IsValid(value));
  set_has_bcm_doorststrunk();
  bcm_doorststrunk_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorststrunk)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearriType bcm_doorlockstsrearri = 12;
bool Bcm_door_0x310_310::has_bcm_doorlockstsrearri() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorlockstsrearri() {
  _has_bits_[0] |= 0x00000800u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorlockstsrearri() {
  _has_bits_[0] &= ~0x00000800u;
}
void Bcm_door_0x310_310::clear_bcm_doorlockstsrearri() {
  bcm_doorlockstsrearri_ = 0;
  clear_has_bcm_doorlockstsrearri();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType Bcm_door_0x310_310::bcm_doorlockstsrearri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsrearri)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType >(bcm_doorlockstsrearri_);
}
void Bcm_door_0x310_310::set_bcm_doorlockstsrearri(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearriType_IsValid(value));
  set_has_bcm_doorlockstsrearri();
  bcm_doorlockstsrearri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsrearri)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsrearleType bcm_doorlockstsrearle = 13;
bool Bcm_door_0x310_310::has_bcm_doorlockstsrearle() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorlockstsrearle() {
  _has_bits_[0] |= 0x00001000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorlockstsrearle() {
  _has_bits_[0] &= ~0x00001000u;
}
void Bcm_door_0x310_310::clear_bcm_doorlockstsrearle() {
  bcm_doorlockstsrearle_ = 0;
  clear_has_bcm_doorlockstsrearle();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType Bcm_door_0x310_310::bcm_doorlockstsrearle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsrearle)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType >(bcm_doorlockstsrearle_);
}
void Bcm_door_0x310_310::set_bcm_doorlockstsrearle(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsrearleType_IsValid(value));
  set_has_bcm_doorlockstsrearle();
  bcm_doorlockstsrearle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsrearle)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntriType bcm_doorlockstsfrntri = 14;
bool Bcm_door_0x310_310::has_bcm_doorlockstsfrntri() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorlockstsfrntri() {
  _has_bits_[0] |= 0x00002000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorlockstsfrntri() {
  _has_bits_[0] &= ~0x00002000u;
}
void Bcm_door_0x310_310::clear_bcm_doorlockstsfrntri() {
  bcm_doorlockstsfrntri_ = 0;
  clear_has_bcm_doorlockstsfrntri();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType Bcm_door_0x310_310::bcm_doorlockstsfrntri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsfrntri)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType >(bcm_doorlockstsfrntri_);
}
void Bcm_door_0x310_310::set_bcm_doorlockstsfrntri(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntriType_IsValid(value));
  set_has_bcm_doorlockstsfrntri();
  bcm_doorlockstsfrntri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsfrntri)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorlockstsfrntleType bcm_doorlockstsfrntle = 15;
bool Bcm_door_0x310_310::has_bcm_doorlockstsfrntle() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorlockstsfrntle() {
  _has_bits_[0] |= 0x00004000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorlockstsfrntle() {
  _has_bits_[0] &= ~0x00004000u;
}
void Bcm_door_0x310_310::clear_bcm_doorlockstsfrntle() {
  bcm_doorlockstsfrntle_ = 0;
  clear_has_bcm_doorlockstsfrntle();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType Bcm_door_0x310_310::bcm_doorlockstsfrntle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsfrntle)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType >(bcm_doorlockstsfrntle_);
}
void Bcm_door_0x310_310::set_bcm_doorlockstsfrntle(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorlockstsfrntleType_IsValid(value));
  set_has_bcm_doorlockstsfrntle();
  bcm_doorlockstsfrntle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorlockstsfrntle)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearriType bcm_doorstsrearri = 16;
bool Bcm_door_0x310_310::has_bcm_doorstsrearri() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorstsrearri() {
  _has_bits_[0] |= 0x00008000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorstsrearri() {
  _has_bits_[0] &= ~0x00008000u;
}
void Bcm_door_0x310_310::clear_bcm_doorstsrearri() {
  bcm_doorstsrearri_ = 0;
  clear_has_bcm_doorstsrearri();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType Bcm_door_0x310_310::bcm_doorstsrearri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsrearri)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType >(bcm_doorstsrearri_);
}
void Bcm_door_0x310_310::set_bcm_doorstsrearri(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearriType_IsValid(value));
  set_has_bcm_doorstsrearri();
  bcm_doorstsrearri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsrearri)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsrearleType bcm_doorstsrearle = 17;
bool Bcm_door_0x310_310::has_bcm_doorstsrearle() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorstsrearle() {
  _has_bits_[0] |= 0x00010000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorstsrearle() {
  _has_bits_[0] &= ~0x00010000u;
}
void Bcm_door_0x310_310::clear_bcm_doorstsrearle() {
  bcm_doorstsrearle_ = 0;
  clear_has_bcm_doorstsrearle();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType Bcm_door_0x310_310::bcm_doorstsrearle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsrearle)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType >(bcm_doorstsrearle_);
}
void Bcm_door_0x310_310::set_bcm_doorstsrearle(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsrearleType_IsValid(value));
  set_has_bcm_doorstsrearle();
  bcm_doorstsrearle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsrearle)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntriType bcm_doorstsfrntri = 18;
bool Bcm_door_0x310_310::has_bcm_doorstsfrntri() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorstsfrntri() {
  _has_bits_[0] |= 0x00020000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorstsfrntri() {
  _has_bits_[0] &= ~0x00020000u;
}
void Bcm_door_0x310_310::clear_bcm_doorstsfrntri() {
  bcm_doorstsfrntri_ = 0;
  clear_has_bcm_doorstsfrntri();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType Bcm_door_0x310_310::bcm_doorstsfrntri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsfrntri)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType >(bcm_doorstsfrntri_);
}
void Bcm_door_0x310_310::set_bcm_doorstsfrntri(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntriType_IsValid(value));
  set_has_bcm_doorstsfrntri();
  bcm_doorstsfrntri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsfrntri)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310.Bcm_doorstsfrntleType bcm_doorstsfrntle = 19;
bool Bcm_door_0x310_310::has_bcm_doorstsfrntle() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Bcm_door_0x310_310::set_has_bcm_doorstsfrntle() {
  _has_bits_[0] |= 0x00040000u;
}
void Bcm_door_0x310_310::clear_has_bcm_doorstsfrntle() {
  _has_bits_[0] &= ~0x00040000u;
}
void Bcm_door_0x310_310::clear_bcm_doorstsfrntle() {
  bcm_doorstsfrntle_ = 0;
  clear_has_bcm_doorstsfrntle();
}
::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType Bcm_door_0x310_310::bcm_doorstsfrntle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsfrntle)
  return static_cast< ::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType >(bcm_doorstsfrntle_);
}
void Bcm_door_0x310_310::set_bcm_doorstsfrntle(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType value) {
  assert(::jmc_auto::canbus::Bcm_door_0x310_310_Bcm_doorstsfrntleType_IsValid(value));
  set_has_bcm_doorstsfrntle();
  bcm_doorstsfrntle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_door_0x310_310.bcm_doorstsfrntle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_sts_0x218_218::kChecksum0X218FieldNumber;
const int Gw_vcu_sts_0x218_218::kRollingCounter0X218FieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuNlockrequestFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuPlockrequestFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuVehicleModeFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuEngaddfuelRqFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuFanRqFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuEngstartRqFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuDcuParkrequestFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuActualgearlevelpositionvalidFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuActualgearlevelpositionFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuBmsChgstartAlwFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuBmsHvonoffReqFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuVehfailgradeErrFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuRunningModeFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuBpSleepAllowedFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuHvilInFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuHvilOutFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuBpInputCoolingTempFieldNumber;
const int Gw_vcu_sts_0x218_218::kVcuMotorInputCoolingTempFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_sts_0x218_218::Gw_vcu_sts_0x218_218()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
}
Gw_vcu_sts_0x218_218::Gw_vcu_sts_0x218_218(const Gw_vcu_sts_0x218_218& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x218_, &from.checksum_0x218_,
    reinterpret_cast<char*>(&vcu_vehicle_mode_) -
    reinterpret_cast<char*>(&checksum_0x218_) + sizeof(vcu_vehicle_mode_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
}

void Gw_vcu_sts_0x218_218::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x218_, 0, reinterpret_cast<char*>(&vcu_motor_input_cooling_temp_) -
    reinterpret_cast<char*>(&checksum_0x218_) + sizeof(vcu_motor_input_cooling_temp_));
  vcu_vehicle_mode_ = 1;
}

Gw_vcu_sts_0x218_218::~Gw_vcu_sts_0x218_218() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  SharedDtor();
}

void Gw_vcu_sts_0x218_218::SharedDtor() {
}

void Gw_vcu_sts_0x218_218::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_sts_0x218_218::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_sts_0x218_218& Gw_vcu_sts_0x218_218::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_sts_0x218_218* Gw_vcu_sts_0x218_218::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_sts_0x218_218* n = new Gw_vcu_sts_0x218_218;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_sts_0x218_218::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x218_, 0, reinterpret_cast<char*>(&vcu_dcu_parkrequest_) -
      reinterpret_cast<char*>(&checksum_0x218_) + sizeof(vcu_dcu_parkrequest_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&vcu_actualgearlevelpositionvalid_, 0, reinterpret_cast<char*>(&vcu_hvil_in_) -
      reinterpret_cast<char*>(&vcu_actualgearlevelpositionvalid_) + sizeof(vcu_hvil_in_));
  }
  if (_has_bits_[16 / 32] & 983040u) {
    ::memset(&vcu_hvil_out_, 0, reinterpret_cast<char*>(&vcu_motor_input_cooling_temp_) -
      reinterpret_cast<char*>(&vcu_hvil_out_) + sizeof(vcu_motor_input_cooling_temp_));
    vcu_vehicle_mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_sts_0x218_218::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x218 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x218();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x218_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x218 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x218();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x218_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_nlockrequestType vcu_nlockrequest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType_IsValid(value)) {
            set_vcu_nlockrequest(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_plockrequestType vcu_plockrequest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType_IsValid(value)) {
            set_vcu_plockrequest(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehicle_modeType vcu_vehicle_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType_IsValid(value)) {
            set_vcu_vehicle_mode(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engaddfuel_rqType vcu_engaddfuel_rq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType_IsValid(value)) {
            set_vcu_engaddfuel_rq(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_fan_rqType vcu_fan_rq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType_IsValid(value)) {
            set_vcu_fan_rq(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engstart_rqType vcu_engstart_rq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType_IsValid(value)) {
            set_vcu_engstart_rq(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_dcu_parkrequestType vcu_dcu_parkrequest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType_IsValid(value)) {
            set_vcu_dcu_parkrequest(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionvalidType vcu_actualgearlevelpositionvalid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType_IsValid(value)) {
            set_vcu_actualgearlevelpositionvalid(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionType vcu_actualgearlevelposition = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType_IsValid(value)) {
            set_vcu_actualgearlevelposition(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_chgstart_alwType vcu_bms_chgstart_alw = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType_IsValid(value)) {
            set_vcu_bms_chgstart_alw(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_hvonoff_reqType vcu_bms_hvonoff_req = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType_IsValid(value)) {
            set_vcu_bms_hvonoff_req(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfailgrade_errType vcu_vehfailgrade_err = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType_IsValid(value)) {
            set_vcu_vehfailgrade_err(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_running_modeType vcu_running_mode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType_IsValid(value)) {
            set_vcu_running_mode(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bp_sleep_allowedType vcu_bp_sleep_allowed = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType_IsValid(value)) {
            set_vcu_bp_sleep_allowed(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(16, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_inType vcu_hvil_in = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType_IsValid(value)) {
            set_vcu_hvil_in(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_outType vcu_hvil_out = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType_IsValid(value)) {
            set_vcu_hvil_out(static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(18, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_bp_input_cooling_temp = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_vcu_bp_input_cooling_temp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_bp_input_cooling_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_motor_input_cooling_temp = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          set_has_vcu_motor_input_cooling_temp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_motor_input_cooling_temp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  return false;
#undef DO_
}

void Gw_vcu_sts_0x218_218::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x218 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x218(), output);
  }

  // optional int32 rolling_counter_0x218 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x218(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_nlockrequestType vcu_nlockrequest = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_nlockrequest(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_plockrequestType vcu_plockrequest = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vcu_plockrequest(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehicle_modeType vcu_vehicle_mode = 5;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->vcu_vehicle_mode(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engaddfuel_rqType vcu_engaddfuel_rq = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->vcu_engaddfuel_rq(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_fan_rqType vcu_fan_rq = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vcu_fan_rq(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engstart_rqType vcu_engstart_rq = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->vcu_engstart_rq(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_dcu_parkrequestType vcu_dcu_parkrequest = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->vcu_dcu_parkrequest(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionvalidType vcu_actualgearlevelpositionvalid = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->vcu_actualgearlevelpositionvalid(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionType vcu_actualgearlevelposition = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->vcu_actualgearlevelposition(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_chgstart_alwType vcu_bms_chgstart_alw = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->vcu_bms_chgstart_alw(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_hvonoff_reqType vcu_bms_hvonoff_req = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->vcu_bms_hvonoff_req(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfailgrade_errType vcu_vehfailgrade_err = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->vcu_vehfailgrade_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_running_modeType vcu_running_mode = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->vcu_running_mode(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bp_sleep_allowedType vcu_bp_sleep_allowed = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->vcu_bp_sleep_allowed(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_inType vcu_hvil_in = 17;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->vcu_hvil_in(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_outType vcu_hvil_out = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->vcu_hvil_out(), output);
  }

  // optional int32 vcu_bp_input_cooling_temp = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->vcu_bp_input_cooling_temp(), output);
  }

  // optional int32 vcu_motor_input_cooling_temp = 20;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->vcu_motor_input_cooling_temp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
}

::google::protobuf::uint8* Gw_vcu_sts_0x218_218::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x218 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x218(), target);
  }

  // optional int32 rolling_counter_0x218 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x218(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_nlockrequestType vcu_nlockrequest = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_nlockrequest(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_plockrequestType vcu_plockrequest = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vcu_plockrequest(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehicle_modeType vcu_vehicle_mode = 5;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->vcu_vehicle_mode(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engaddfuel_rqType vcu_engaddfuel_rq = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->vcu_engaddfuel_rq(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_fan_rqType vcu_fan_rq = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->vcu_fan_rq(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engstart_rqType vcu_engstart_rq = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->vcu_engstart_rq(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_dcu_parkrequestType vcu_dcu_parkrequest = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->vcu_dcu_parkrequest(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionvalidType vcu_actualgearlevelpositionvalid = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->vcu_actualgearlevelpositionvalid(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionType vcu_actualgearlevelposition = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->vcu_actualgearlevelposition(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_chgstart_alwType vcu_bms_chgstart_alw = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->vcu_bms_chgstart_alw(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_hvonoff_reqType vcu_bms_hvonoff_req = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->vcu_bms_hvonoff_req(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfailgrade_errType vcu_vehfailgrade_err = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->vcu_vehfailgrade_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_running_modeType vcu_running_mode = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->vcu_running_mode(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bp_sleep_allowedType vcu_bp_sleep_allowed = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->vcu_bp_sleep_allowed(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_inType vcu_hvil_in = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->vcu_hvil_in(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_outType vcu_hvil_out = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->vcu_hvil_out(), target);
  }

  // optional int32 vcu_bp_input_cooling_temp = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->vcu_bp_input_cooling_temp(), target);
  }

  // optional int32 vcu_motor_input_cooling_temp = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->vcu_motor_input_cooling_temp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  return target;
}

size_t Gw_vcu_sts_0x218_218::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x218 = 1;
    if (has_checksum_0x218()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x218());
    }

    // optional int32 rolling_counter_0x218 = 2;
    if (has_rolling_counter_0x218()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x218());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_nlockrequestType vcu_nlockrequest = 3;
    if (has_vcu_nlockrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_nlockrequest());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_plockrequestType vcu_plockrequest = 4;
    if (has_vcu_plockrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_plockrequest());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engaddfuel_rqType vcu_engaddfuel_rq = 6;
    if (has_vcu_engaddfuel_rq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_engaddfuel_rq());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_fan_rqType vcu_fan_rq = 7;
    if (has_vcu_fan_rq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_fan_rq());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engstart_rqType vcu_engstart_rq = 8;
    if (has_vcu_engstart_rq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_engstart_rq());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_dcu_parkrequestType vcu_dcu_parkrequest = 9;
    if (has_vcu_dcu_parkrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_dcu_parkrequest());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionvalidType vcu_actualgearlevelpositionvalid = 10;
    if (has_vcu_actualgearlevelpositionvalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_actualgearlevelpositionvalid());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionType vcu_actualgearlevelposition = 11;
    if (has_vcu_actualgearlevelposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_actualgearlevelposition());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_chgstart_alwType vcu_bms_chgstart_alw = 12;
    if (has_vcu_bms_chgstart_alw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_bms_chgstart_alw());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_hvonoff_reqType vcu_bms_hvonoff_req = 13;
    if (has_vcu_bms_hvonoff_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_bms_hvonoff_req());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfailgrade_errType vcu_vehfailgrade_err = 14;
    if (has_vcu_vehfailgrade_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_vehfailgrade_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_running_modeType vcu_running_mode = 15;
    if (has_vcu_running_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_running_mode());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bp_sleep_allowedType vcu_bp_sleep_allowed = 16;
    if (has_vcu_bp_sleep_allowed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_bp_sleep_allowed());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_inType vcu_hvil_in = 17;
    if (has_vcu_hvil_in()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_hvil_in());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_outType vcu_hvil_out = 18;
    if (has_vcu_hvil_out()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_hvil_out());
    }

    // optional int32 vcu_bp_input_cooling_temp = 19;
    if (has_vcu_bp_input_cooling_temp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_bp_input_cooling_temp());
    }

    // optional int32 vcu_motor_input_cooling_temp = 20;
    if (has_vcu_motor_input_cooling_temp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_motor_input_cooling_temp());
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehicle_modeType vcu_vehicle_mode = 5;
    if (has_vcu_vehicle_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_vehicle_mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_sts_0x218_218::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_sts_0x218_218* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_sts_0x218_218>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
    MergeFrom(*source);
  }
}

void Gw_vcu_sts_0x218_218::MergeFrom(const Gw_vcu_sts_0x218_218& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x218_ = from.checksum_0x218_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x218_ = from.rolling_counter_0x218_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_nlockrequest_ = from.vcu_nlockrequest_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_plockrequest_ = from.vcu_plockrequest_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_engaddfuel_rq_ = from.vcu_engaddfuel_rq_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_fan_rq_ = from.vcu_fan_rq_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_engstart_rq_ = from.vcu_engstart_rq_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_dcu_parkrequest_ = from.vcu_dcu_parkrequest_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_actualgearlevelpositionvalid_ = from.vcu_actualgearlevelpositionvalid_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_actualgearlevelposition_ = from.vcu_actualgearlevelposition_;
    }
    if (cached_has_bits & 0x00000400u) {
      vcu_bms_chgstart_alw_ = from.vcu_bms_chgstart_alw_;
    }
    if (cached_has_bits & 0x00000800u) {
      vcu_bms_hvonoff_req_ = from.vcu_bms_hvonoff_req_;
    }
    if (cached_has_bits & 0x00001000u) {
      vcu_vehfailgrade_err_ = from.vcu_vehfailgrade_err_;
    }
    if (cached_has_bits & 0x00002000u) {
      vcu_running_mode_ = from.vcu_running_mode_;
    }
    if (cached_has_bits & 0x00004000u) {
      vcu_bp_sleep_allowed_ = from.vcu_bp_sleep_allowed_;
    }
    if (cached_has_bits & 0x00008000u) {
      vcu_hvil_in_ = from.vcu_hvil_in_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 983040u) {
    if (cached_has_bits & 0x00010000u) {
      vcu_hvil_out_ = from.vcu_hvil_out_;
    }
    if (cached_has_bits & 0x00020000u) {
      vcu_bp_input_cooling_temp_ = from.vcu_bp_input_cooling_temp_;
    }
    if (cached_has_bits & 0x00040000u) {
      vcu_motor_input_cooling_temp_ = from.vcu_motor_input_cooling_temp_;
    }
    if (cached_has_bits & 0x00080000u) {
      vcu_vehicle_mode_ = from.vcu_vehicle_mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_vcu_sts_0x218_218::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_sts_0x218_218::CopyFrom(const Gw_vcu_sts_0x218_218& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_sts_0x218_218)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_sts_0x218_218::IsInitialized() const {
  return true;
}

void Gw_vcu_sts_0x218_218::Swap(Gw_vcu_sts_0x218_218* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_sts_0x218_218::InternalSwap(Gw_vcu_sts_0x218_218* other) {
  std::swap(checksum_0x218_, other->checksum_0x218_);
  std::swap(rolling_counter_0x218_, other->rolling_counter_0x218_);
  std::swap(vcu_nlockrequest_, other->vcu_nlockrequest_);
  std::swap(vcu_plockrequest_, other->vcu_plockrequest_);
  std::swap(vcu_engaddfuel_rq_, other->vcu_engaddfuel_rq_);
  std::swap(vcu_fan_rq_, other->vcu_fan_rq_);
  std::swap(vcu_engstart_rq_, other->vcu_engstart_rq_);
  std::swap(vcu_dcu_parkrequest_, other->vcu_dcu_parkrequest_);
  std::swap(vcu_actualgearlevelpositionvalid_, other->vcu_actualgearlevelpositionvalid_);
  std::swap(vcu_actualgearlevelposition_, other->vcu_actualgearlevelposition_);
  std::swap(vcu_bms_chgstart_alw_, other->vcu_bms_chgstart_alw_);
  std::swap(vcu_bms_hvonoff_req_, other->vcu_bms_hvonoff_req_);
  std::swap(vcu_vehfailgrade_err_, other->vcu_vehfailgrade_err_);
  std::swap(vcu_running_mode_, other->vcu_running_mode_);
  std::swap(vcu_bp_sleep_allowed_, other->vcu_bp_sleep_allowed_);
  std::swap(vcu_hvil_in_, other->vcu_hvil_in_);
  std::swap(vcu_hvil_out_, other->vcu_hvil_out_);
  std::swap(vcu_bp_input_cooling_temp_, other->vcu_bp_input_cooling_temp_);
  std::swap(vcu_motor_input_cooling_temp_, other->vcu_motor_input_cooling_temp_);
  std::swap(vcu_vehicle_mode_, other->vcu_vehicle_mode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_sts_0x218_218::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_sts_0x218_218

// optional int32 checksum_0x218 = 1;
bool Gw_vcu_sts_0x218_218::has_checksum_0x218() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_checksum_0x218() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_sts_0x218_218::clear_has_checksum_0x218() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_sts_0x218_218::clear_checksum_0x218() {
  checksum_0x218_ = 0;
  clear_has_checksum_0x218();
}
::google::protobuf::int32 Gw_vcu_sts_0x218_218::checksum_0x218() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.checksum_0x218)
  return checksum_0x218_;
}
void Gw_vcu_sts_0x218_218::set_checksum_0x218(::google::protobuf::int32 value) {
  set_has_checksum_0x218();
  checksum_0x218_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.checksum_0x218)
}

// optional int32 rolling_counter_0x218 = 2;
bool Gw_vcu_sts_0x218_218::has_rolling_counter_0x218() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_rolling_counter_0x218() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_sts_0x218_218::clear_has_rolling_counter_0x218() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_sts_0x218_218::clear_rolling_counter_0x218() {
  rolling_counter_0x218_ = 0;
  clear_has_rolling_counter_0x218();
}
::google::protobuf::int32 Gw_vcu_sts_0x218_218::rolling_counter_0x218() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.rolling_counter_0x218)
  return rolling_counter_0x218_;
}
void Gw_vcu_sts_0x218_218::set_rolling_counter_0x218(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x218();
  rolling_counter_0x218_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.rolling_counter_0x218)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_nlockrequestType vcu_nlockrequest = 3;
bool Gw_vcu_sts_0x218_218::has_vcu_nlockrequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_nlockrequest() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_nlockrequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_nlockrequest() {
  vcu_nlockrequest_ = 0;
  clear_has_vcu_nlockrequest();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType Gw_vcu_sts_0x218_218::vcu_nlockrequest() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_nlockrequest)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType >(vcu_nlockrequest_);
}
void Gw_vcu_sts_0x218_218::set_vcu_nlockrequest(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_nlockrequestType_IsValid(value));
  set_has_vcu_nlockrequest();
  vcu_nlockrequest_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_nlockrequest)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_plockrequestType vcu_plockrequest = 4;
bool Gw_vcu_sts_0x218_218::has_vcu_plockrequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_plockrequest() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_plockrequest() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_plockrequest() {
  vcu_plockrequest_ = 0;
  clear_has_vcu_plockrequest();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType Gw_vcu_sts_0x218_218::vcu_plockrequest() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_plockrequest)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType >(vcu_plockrequest_);
}
void Gw_vcu_sts_0x218_218::set_vcu_plockrequest(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_plockrequestType_IsValid(value));
  set_has_vcu_plockrequest();
  vcu_plockrequest_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_plockrequest)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehicle_modeType vcu_vehicle_mode = 5;
bool Gw_vcu_sts_0x218_218::has_vcu_vehicle_mode() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_vehicle_mode() {
  _has_bits_[0] |= 0x00080000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_vehicle_mode() {
  _has_bits_[0] &= ~0x00080000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_vehicle_mode() {
  vcu_vehicle_mode_ = 1;
  clear_has_vcu_vehicle_mode();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType Gw_vcu_sts_0x218_218::vcu_vehicle_mode() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_vehicle_mode)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType >(vcu_vehicle_mode_);
}
void Gw_vcu_sts_0x218_218::set_vcu_vehicle_mode(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehicle_modeType_IsValid(value));
  set_has_vcu_vehicle_mode();
  vcu_vehicle_mode_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_vehicle_mode)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engaddfuel_rqType vcu_engaddfuel_rq = 6;
bool Gw_vcu_sts_0x218_218::has_vcu_engaddfuel_rq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_engaddfuel_rq() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_engaddfuel_rq() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_engaddfuel_rq() {
  vcu_engaddfuel_rq_ = 0;
  clear_has_vcu_engaddfuel_rq();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType Gw_vcu_sts_0x218_218::vcu_engaddfuel_rq() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_engaddfuel_rq)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType >(vcu_engaddfuel_rq_);
}
void Gw_vcu_sts_0x218_218::set_vcu_engaddfuel_rq(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engaddfuel_rqType_IsValid(value));
  set_has_vcu_engaddfuel_rq();
  vcu_engaddfuel_rq_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_engaddfuel_rq)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_fan_rqType vcu_fan_rq = 7;
bool Gw_vcu_sts_0x218_218::has_vcu_fan_rq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_fan_rq() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_fan_rq() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_fan_rq() {
  vcu_fan_rq_ = 0;
  clear_has_vcu_fan_rq();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType Gw_vcu_sts_0x218_218::vcu_fan_rq() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_fan_rq)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType >(vcu_fan_rq_);
}
void Gw_vcu_sts_0x218_218::set_vcu_fan_rq(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_fan_rqType_IsValid(value));
  set_has_vcu_fan_rq();
  vcu_fan_rq_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_fan_rq)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_engstart_rqType vcu_engstart_rq = 8;
bool Gw_vcu_sts_0x218_218::has_vcu_engstart_rq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_engstart_rq() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_engstart_rq() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_engstart_rq() {
  vcu_engstart_rq_ = 0;
  clear_has_vcu_engstart_rq();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType Gw_vcu_sts_0x218_218::vcu_engstart_rq() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_engstart_rq)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType >(vcu_engstart_rq_);
}
void Gw_vcu_sts_0x218_218::set_vcu_engstart_rq(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_engstart_rqType_IsValid(value));
  set_has_vcu_engstart_rq();
  vcu_engstart_rq_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_engstart_rq)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_dcu_parkrequestType vcu_dcu_parkrequest = 9;
bool Gw_vcu_sts_0x218_218::has_vcu_dcu_parkrequest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_dcu_parkrequest() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_dcu_parkrequest() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_dcu_parkrequest() {
  vcu_dcu_parkrequest_ = 0;
  clear_has_vcu_dcu_parkrequest();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType Gw_vcu_sts_0x218_218::vcu_dcu_parkrequest() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_dcu_parkrequest)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType >(vcu_dcu_parkrequest_);
}
void Gw_vcu_sts_0x218_218::set_vcu_dcu_parkrequest(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_dcu_parkrequestType_IsValid(value));
  set_has_vcu_dcu_parkrequest();
  vcu_dcu_parkrequest_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_dcu_parkrequest)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionvalidType vcu_actualgearlevelpositionvalid = 10;
bool Gw_vcu_sts_0x218_218::has_vcu_actualgearlevelpositionvalid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_actualgearlevelpositionvalid() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_actualgearlevelpositionvalid() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_actualgearlevelpositionvalid() {
  vcu_actualgearlevelpositionvalid_ = 0;
  clear_has_vcu_actualgearlevelpositionvalid();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType Gw_vcu_sts_0x218_218::vcu_actualgearlevelpositionvalid() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_actualgearlevelpositionvalid)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType >(vcu_actualgearlevelpositionvalid_);
}
void Gw_vcu_sts_0x218_218::set_vcu_actualgearlevelpositionvalid(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionvalidType_IsValid(value));
  set_has_vcu_actualgearlevelpositionvalid();
  vcu_actualgearlevelpositionvalid_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_actualgearlevelpositionvalid)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_actualgearlevelpositionType vcu_actualgearlevelposition = 11;
bool Gw_vcu_sts_0x218_218::has_vcu_actualgearlevelposition() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_actualgearlevelposition() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_actualgearlevelposition() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_actualgearlevelposition() {
  vcu_actualgearlevelposition_ = 0;
  clear_has_vcu_actualgearlevelposition();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType Gw_vcu_sts_0x218_218::vcu_actualgearlevelposition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_actualgearlevelposition)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType >(vcu_actualgearlevelposition_);
}
void Gw_vcu_sts_0x218_218::set_vcu_actualgearlevelposition(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_actualgearlevelpositionType_IsValid(value));
  set_has_vcu_actualgearlevelposition();
  vcu_actualgearlevelposition_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_actualgearlevelposition)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_chgstart_alwType vcu_bms_chgstart_alw = 12;
bool Gw_vcu_sts_0x218_218::has_vcu_bms_chgstart_alw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_bms_chgstart_alw() {
  _has_bits_[0] |= 0x00000400u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_bms_chgstart_alw() {
  _has_bits_[0] &= ~0x00000400u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_bms_chgstart_alw() {
  vcu_bms_chgstart_alw_ = 0;
  clear_has_vcu_bms_chgstart_alw();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType Gw_vcu_sts_0x218_218::vcu_bms_chgstart_alw() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bms_chgstart_alw)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType >(vcu_bms_chgstart_alw_);
}
void Gw_vcu_sts_0x218_218::set_vcu_bms_chgstart_alw(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_chgstart_alwType_IsValid(value));
  set_has_vcu_bms_chgstart_alw();
  vcu_bms_chgstart_alw_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bms_chgstart_alw)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bms_hvonoff_reqType vcu_bms_hvonoff_req = 13;
bool Gw_vcu_sts_0x218_218::has_vcu_bms_hvonoff_req() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_bms_hvonoff_req() {
  _has_bits_[0] |= 0x00000800u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_bms_hvonoff_req() {
  _has_bits_[0] &= ~0x00000800u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_bms_hvonoff_req() {
  vcu_bms_hvonoff_req_ = 0;
  clear_has_vcu_bms_hvonoff_req();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType Gw_vcu_sts_0x218_218::vcu_bms_hvonoff_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bms_hvonoff_req)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType >(vcu_bms_hvonoff_req_);
}
void Gw_vcu_sts_0x218_218::set_vcu_bms_hvonoff_req(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bms_hvonoff_reqType_IsValid(value));
  set_has_vcu_bms_hvonoff_req();
  vcu_bms_hvonoff_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bms_hvonoff_req)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_vehfailgrade_errType vcu_vehfailgrade_err = 14;
bool Gw_vcu_sts_0x218_218::has_vcu_vehfailgrade_err() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_vehfailgrade_err() {
  _has_bits_[0] |= 0x00001000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_vehfailgrade_err() {
  _has_bits_[0] &= ~0x00001000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_vehfailgrade_err() {
  vcu_vehfailgrade_err_ = 0;
  clear_has_vcu_vehfailgrade_err();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType Gw_vcu_sts_0x218_218::vcu_vehfailgrade_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_vehfailgrade_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType >(vcu_vehfailgrade_err_);
}
void Gw_vcu_sts_0x218_218::set_vcu_vehfailgrade_err(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_vehfailgrade_errType_IsValid(value));
  set_has_vcu_vehfailgrade_err();
  vcu_vehfailgrade_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_vehfailgrade_err)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_running_modeType vcu_running_mode = 15;
bool Gw_vcu_sts_0x218_218::has_vcu_running_mode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_running_mode() {
  _has_bits_[0] |= 0x00002000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_running_mode() {
  _has_bits_[0] &= ~0x00002000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_running_mode() {
  vcu_running_mode_ = 0;
  clear_has_vcu_running_mode();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType Gw_vcu_sts_0x218_218::vcu_running_mode() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_running_mode)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType >(vcu_running_mode_);
}
void Gw_vcu_sts_0x218_218::set_vcu_running_mode(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_running_modeType_IsValid(value));
  set_has_vcu_running_mode();
  vcu_running_mode_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_running_mode)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_bp_sleep_allowedType vcu_bp_sleep_allowed = 16;
bool Gw_vcu_sts_0x218_218::has_vcu_bp_sleep_allowed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_bp_sleep_allowed() {
  _has_bits_[0] |= 0x00004000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_bp_sleep_allowed() {
  _has_bits_[0] &= ~0x00004000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_bp_sleep_allowed() {
  vcu_bp_sleep_allowed_ = 0;
  clear_has_vcu_bp_sleep_allowed();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType Gw_vcu_sts_0x218_218::vcu_bp_sleep_allowed() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bp_sleep_allowed)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType >(vcu_bp_sleep_allowed_);
}
void Gw_vcu_sts_0x218_218::set_vcu_bp_sleep_allowed(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_bp_sleep_allowedType_IsValid(value));
  set_has_vcu_bp_sleep_allowed();
  vcu_bp_sleep_allowed_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bp_sleep_allowed)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_inType vcu_hvil_in = 17;
bool Gw_vcu_sts_0x218_218::has_vcu_hvil_in() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_hvil_in() {
  _has_bits_[0] |= 0x00008000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_hvil_in() {
  _has_bits_[0] &= ~0x00008000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_hvil_in() {
  vcu_hvil_in_ = 0;
  clear_has_vcu_hvil_in();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType Gw_vcu_sts_0x218_218::vcu_hvil_in() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_hvil_in)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType >(vcu_hvil_in_);
}
void Gw_vcu_sts_0x218_218::set_vcu_hvil_in(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_inType_IsValid(value));
  set_has_vcu_hvil_in();
  vcu_hvil_in_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_hvil_in)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218.Vcu_hvil_outType vcu_hvil_out = 18;
bool Gw_vcu_sts_0x218_218::has_vcu_hvil_out() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_hvil_out() {
  _has_bits_[0] |= 0x00010000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_hvil_out() {
  _has_bits_[0] &= ~0x00010000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_hvil_out() {
  vcu_hvil_out_ = 0;
  clear_has_vcu_hvil_out();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType Gw_vcu_sts_0x218_218::vcu_hvil_out() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_hvil_out)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType >(vcu_hvil_out_);
}
void Gw_vcu_sts_0x218_218::set_vcu_hvil_out(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType value) {
  assert(::jmc_auto::canbus::Gw_vcu_sts_0x218_218_Vcu_hvil_outType_IsValid(value));
  set_has_vcu_hvil_out();
  vcu_hvil_out_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_hvil_out)
}

// optional int32 vcu_bp_input_cooling_temp = 19;
bool Gw_vcu_sts_0x218_218::has_vcu_bp_input_cooling_temp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_bp_input_cooling_temp() {
  _has_bits_[0] |= 0x00020000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_bp_input_cooling_temp() {
  _has_bits_[0] &= ~0x00020000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_bp_input_cooling_temp() {
  vcu_bp_input_cooling_temp_ = 0;
  clear_has_vcu_bp_input_cooling_temp();
}
::google::protobuf::int32 Gw_vcu_sts_0x218_218::vcu_bp_input_cooling_temp() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bp_input_cooling_temp)
  return vcu_bp_input_cooling_temp_;
}
void Gw_vcu_sts_0x218_218::set_vcu_bp_input_cooling_temp(::google::protobuf::int32 value) {
  set_has_vcu_bp_input_cooling_temp();
  vcu_bp_input_cooling_temp_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_bp_input_cooling_temp)
}

// optional int32 vcu_motor_input_cooling_temp = 20;
bool Gw_vcu_sts_0x218_218::has_vcu_motor_input_cooling_temp() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Gw_vcu_sts_0x218_218::set_has_vcu_motor_input_cooling_temp() {
  _has_bits_[0] |= 0x00040000u;
}
void Gw_vcu_sts_0x218_218::clear_has_vcu_motor_input_cooling_temp() {
  _has_bits_[0] &= ~0x00040000u;
}
void Gw_vcu_sts_0x218_218::clear_vcu_motor_input_cooling_temp() {
  vcu_motor_input_cooling_temp_ = 0;
  clear_has_vcu_motor_input_cooling_temp();
}
::google::protobuf::int32 Gw_vcu_sts_0x218_218::vcu_motor_input_cooling_temp() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_motor_input_cooling_temp)
  return vcu_motor_input_cooling_temp_;
}
void Gw_vcu_sts_0x218_218::set_vcu_motor_input_cooling_temp(::google::protobuf::int32 value) {
  set_has_vcu_motor_input_cooling_temp();
  vcu_motor_input_cooling_temp_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_sts_0x218_218.vcu_motor_input_cooling_temp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adu_controldrive_0x120_120::kChecksum0X120FieldNumber;
const int Adu_controldrive_0x120_120::kRollingCounter0X120FieldNumber;
const int Adu_controldrive_0x120_120::kAduControtorqueRawflagFieldNumber;
const int Adu_controldrive_0x120_120::kAduTargetdrvingTorqueFieldNumber;
const int Adu_controldrive_0x120_120::kAduControtorqueEnableFieldNumber;
const int Adu_controldrive_0x120_120::kAduTargetgearPositionFieldNumber;
const int Adu_controldrive_0x120_120::kAduTargetgearEnableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adu_controldrive_0x120_120::Adu_controldrive_0x120_120()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Adu_controldrive_0x120_120)
}
Adu_controldrive_0x120_120::Adu_controldrive_0x120_120(const Adu_controldrive_0x120_120& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x120_, &from.checksum_0x120_,
    reinterpret_cast<char*>(&adu_targetgear_enable_) -
    reinterpret_cast<char*>(&checksum_0x120_) + sizeof(adu_targetgear_enable_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Adu_controldrive_0x120_120)
}

void Adu_controldrive_0x120_120::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x120_, 0, reinterpret_cast<char*>(&adu_targetgear_enable_) -
    reinterpret_cast<char*>(&checksum_0x120_) + sizeof(adu_targetgear_enable_));
}

Adu_controldrive_0x120_120::~Adu_controldrive_0x120_120() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Adu_controldrive_0x120_120)
  SharedDtor();
}

void Adu_controldrive_0x120_120::SharedDtor() {
}

void Adu_controldrive_0x120_120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Adu_controldrive_0x120_120::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adu_controldrive_0x120_120& Adu_controldrive_0x120_120::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Adu_controldrive_0x120_120* Adu_controldrive_0x120_120::New(::google::protobuf::Arena* arena) const {
  Adu_controldrive_0x120_120* n = new Adu_controldrive_0x120_120;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Adu_controldrive_0x120_120::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&checksum_0x120_, 0, reinterpret_cast<char*>(&adu_targetgear_enable_) -
      reinterpret_cast<char*>(&checksum_0x120_) + sizeof(adu_targetgear_enable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adu_controldrive_0x120_120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x120 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x120();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x120_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x120 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x120();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x120_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_rawflagType adu_controtorque_rawflag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType_IsValid(value)) {
            set_adu_controtorque_rawflag(static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adu_targetdrving_torque = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_adu_targetdrving_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adu_targetdrving_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_enableType adu_controtorque_enable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType_IsValid(value)) {
            set_adu_controtorque_enable(static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_positionType adu_targetgear_position = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType_IsValid(value)) {
            set_adu_targetgear_position(static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_enableType adu_targetgear_enable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType_IsValid(value)) {
            set_adu_targetgear_enable(static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Adu_controldrive_0x120_120)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Adu_controldrive_0x120_120)
  return false;
#undef DO_
}

void Adu_controldrive_0x120_120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x120 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x120(), output);
  }

  // optional int32 rolling_counter_0x120 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x120(), output);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_rawflagType adu_controtorque_rawflag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->adu_controtorque_rawflag(), output);
  }

  // optional int32 adu_targetdrving_torque = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->adu_targetdrving_torque(), output);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_enableType adu_controtorque_enable = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->adu_controtorque_enable(), output);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_positionType adu_targetgear_position = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->adu_targetgear_position(), output);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_enableType adu_targetgear_enable = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->adu_targetgear_enable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Adu_controldrive_0x120_120)
}

::google::protobuf::uint8* Adu_controldrive_0x120_120::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x120 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x120(), target);
  }

  // optional int32 rolling_counter_0x120 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x120(), target);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_rawflagType adu_controtorque_rawflag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->adu_controtorque_rawflag(), target);
  }

  // optional int32 adu_targetdrving_torque = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->adu_targetdrving_torque(), target);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_enableType adu_controtorque_enable = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->adu_controtorque_enable(), target);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_positionType adu_targetgear_position = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->adu_targetgear_position(), target);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_enableType adu_targetgear_enable = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->adu_targetgear_enable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Adu_controldrive_0x120_120)
  return target;
}

size_t Adu_controldrive_0x120_120::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 checksum_0x120 = 1;
    if (has_checksum_0x120()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x120());
    }

    // optional int32 rolling_counter_0x120 = 2;
    if (has_rolling_counter_0x120()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x120());
    }

    // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_rawflagType adu_controtorque_rawflag = 3;
    if (has_adu_controtorque_rawflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_controtorque_rawflag());
    }

    // optional int32 adu_targetdrving_torque = 4;
    if (has_adu_targetdrving_torque()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adu_targetdrving_torque());
    }

    // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_enableType adu_controtorque_enable = 5;
    if (has_adu_controtorque_enable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_controtorque_enable());
    }

    // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_positionType adu_targetgear_position = 6;
    if (has_adu_targetgear_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_targetgear_position());
    }

    // optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_enableType adu_targetgear_enable = 7;
    if (has_adu_targetgear_enable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_targetgear_enable());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Adu_controldrive_0x120_120::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  GOOGLE_DCHECK_NE(&from, this);
  const Adu_controldrive_0x120_120* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adu_controldrive_0x120_120>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Adu_controldrive_0x120_120)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Adu_controldrive_0x120_120)
    MergeFrom(*source);
  }
}

void Adu_controldrive_0x120_120::MergeFrom(const Adu_controldrive_0x120_120& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x120_ = from.checksum_0x120_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x120_ = from.rolling_counter_0x120_;
    }
    if (cached_has_bits & 0x00000004u) {
      adu_controtorque_rawflag_ = from.adu_controtorque_rawflag_;
    }
    if (cached_has_bits & 0x00000008u) {
      adu_targetdrving_torque_ = from.adu_targetdrving_torque_;
    }
    if (cached_has_bits & 0x00000010u) {
      adu_controtorque_enable_ = from.adu_controtorque_enable_;
    }
    if (cached_has_bits & 0x00000020u) {
      adu_targetgear_position_ = from.adu_targetgear_position_;
    }
    if (cached_has_bits & 0x00000040u) {
      adu_targetgear_enable_ = from.adu_targetgear_enable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adu_controldrive_0x120_120::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adu_controldrive_0x120_120::CopyFrom(const Adu_controldrive_0x120_120& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Adu_controldrive_0x120_120)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adu_controldrive_0x120_120::IsInitialized() const {
  return true;
}

void Adu_controldrive_0x120_120::Swap(Adu_controldrive_0x120_120* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adu_controldrive_0x120_120::InternalSwap(Adu_controldrive_0x120_120* other) {
  std::swap(checksum_0x120_, other->checksum_0x120_);
  std::swap(rolling_counter_0x120_, other->rolling_counter_0x120_);
  std::swap(adu_controtorque_rawflag_, other->adu_controtorque_rawflag_);
  std::swap(adu_targetdrving_torque_, other->adu_targetdrving_torque_);
  std::swap(adu_controtorque_enable_, other->adu_controtorque_enable_);
  std::swap(adu_targetgear_position_, other->adu_targetgear_position_);
  std::swap(adu_targetgear_enable_, other->adu_targetgear_enable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Adu_controldrive_0x120_120::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Adu_controldrive_0x120_120

// optional int32 checksum_0x120 = 1;
bool Adu_controldrive_0x120_120::has_checksum_0x120() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Adu_controldrive_0x120_120::set_has_checksum_0x120() {
  _has_bits_[0] |= 0x00000001u;
}
void Adu_controldrive_0x120_120::clear_has_checksum_0x120() {
  _has_bits_[0] &= ~0x00000001u;
}
void Adu_controldrive_0x120_120::clear_checksum_0x120() {
  checksum_0x120_ = 0;
  clear_has_checksum_0x120();
}
::google::protobuf::int32 Adu_controldrive_0x120_120::checksum_0x120() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.checksum_0x120)
  return checksum_0x120_;
}
void Adu_controldrive_0x120_120::set_checksum_0x120(::google::protobuf::int32 value) {
  set_has_checksum_0x120();
  checksum_0x120_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.checksum_0x120)
}

// optional int32 rolling_counter_0x120 = 2;
bool Adu_controldrive_0x120_120::has_rolling_counter_0x120() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Adu_controldrive_0x120_120::set_has_rolling_counter_0x120() {
  _has_bits_[0] |= 0x00000002u;
}
void Adu_controldrive_0x120_120::clear_has_rolling_counter_0x120() {
  _has_bits_[0] &= ~0x00000002u;
}
void Adu_controldrive_0x120_120::clear_rolling_counter_0x120() {
  rolling_counter_0x120_ = 0;
  clear_has_rolling_counter_0x120();
}
::google::protobuf::int32 Adu_controldrive_0x120_120::rolling_counter_0x120() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.rolling_counter_0x120)
  return rolling_counter_0x120_;
}
void Adu_controldrive_0x120_120::set_rolling_counter_0x120(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x120();
  rolling_counter_0x120_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.rolling_counter_0x120)
}

// optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_rawflagType adu_controtorque_rawflag = 3;
bool Adu_controldrive_0x120_120::has_adu_controtorque_rawflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Adu_controldrive_0x120_120::set_has_adu_controtorque_rawflag() {
  _has_bits_[0] |= 0x00000004u;
}
void Adu_controldrive_0x120_120::clear_has_adu_controtorque_rawflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void Adu_controldrive_0x120_120::clear_adu_controtorque_rawflag() {
  adu_controtorque_rawflag_ = 0;
  clear_has_adu_controtorque_rawflag();
}
::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType Adu_controldrive_0x120_120::adu_controtorque_rawflag() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_controtorque_rawflag)
  return static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType >(adu_controtorque_rawflag_);
}
void Adu_controldrive_0x120_120::set_adu_controtorque_rawflag(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType value) {
  assert(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_rawflagType_IsValid(value));
  set_has_adu_controtorque_rawflag();
  adu_controtorque_rawflag_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_controtorque_rawflag)
}

// optional int32 adu_targetdrving_torque = 4;
bool Adu_controldrive_0x120_120::has_adu_targetdrving_torque() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Adu_controldrive_0x120_120::set_has_adu_targetdrving_torque() {
  _has_bits_[0] |= 0x00000008u;
}
void Adu_controldrive_0x120_120::clear_has_adu_targetdrving_torque() {
  _has_bits_[0] &= ~0x00000008u;
}
void Adu_controldrive_0x120_120::clear_adu_targetdrving_torque() {
  adu_targetdrving_torque_ = 0;
  clear_has_adu_targetdrving_torque();
}
::google::protobuf::int32 Adu_controldrive_0x120_120::adu_targetdrving_torque() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetdrving_torque)
  return adu_targetdrving_torque_;
}
void Adu_controldrive_0x120_120::set_adu_targetdrving_torque(::google::protobuf::int32 value) {
  set_has_adu_targetdrving_torque();
  adu_targetdrving_torque_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetdrving_torque)
}

// optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_controtorque_enableType adu_controtorque_enable = 5;
bool Adu_controldrive_0x120_120::has_adu_controtorque_enable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Adu_controldrive_0x120_120::set_has_adu_controtorque_enable() {
  _has_bits_[0] |= 0x00000010u;
}
void Adu_controldrive_0x120_120::clear_has_adu_controtorque_enable() {
  _has_bits_[0] &= ~0x00000010u;
}
void Adu_controldrive_0x120_120::clear_adu_controtorque_enable() {
  adu_controtorque_enable_ = 0;
  clear_has_adu_controtorque_enable();
}
::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType Adu_controldrive_0x120_120::adu_controtorque_enable() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_controtorque_enable)
  return static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType >(adu_controtorque_enable_);
}
void Adu_controldrive_0x120_120::set_adu_controtorque_enable(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType value) {
  assert(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_controtorque_enableType_IsValid(value));
  set_has_adu_controtorque_enable();
  adu_controtorque_enable_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_controtorque_enable)
}

// optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_positionType adu_targetgear_position = 6;
bool Adu_controldrive_0x120_120::has_adu_targetgear_position() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Adu_controldrive_0x120_120::set_has_adu_targetgear_position() {
  _has_bits_[0] |= 0x00000020u;
}
void Adu_controldrive_0x120_120::clear_has_adu_targetgear_position() {
  _has_bits_[0] &= ~0x00000020u;
}
void Adu_controldrive_0x120_120::clear_adu_targetgear_position() {
  adu_targetgear_position_ = 0;
  clear_has_adu_targetgear_position();
}
::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType Adu_controldrive_0x120_120::adu_targetgear_position() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetgear_position)
  return static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType >(adu_targetgear_position_);
}
void Adu_controldrive_0x120_120::set_adu_targetgear_position(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType value) {
  assert(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_positionType_IsValid(value));
  set_has_adu_targetgear_position();
  adu_targetgear_position_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetgear_position)
}

// optional .jmc_auto.canbus.Adu_controldrive_0x120_120.Adu_targetgear_enableType adu_targetgear_enable = 7;
bool Adu_controldrive_0x120_120::has_adu_targetgear_enable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Adu_controldrive_0x120_120::set_has_adu_targetgear_enable() {
  _has_bits_[0] |= 0x00000040u;
}
void Adu_controldrive_0x120_120::clear_has_adu_targetgear_enable() {
  _has_bits_[0] &= ~0x00000040u;
}
void Adu_controldrive_0x120_120::clear_adu_targetgear_enable() {
  adu_targetgear_enable_ = 0;
  clear_has_adu_targetgear_enable();
}
::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType Adu_controldrive_0x120_120::adu_targetgear_enable() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetgear_enable)
  return static_cast< ::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType >(adu_targetgear_enable_);
}
void Adu_controldrive_0x120_120::set_adu_targetgear_enable(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType value) {
  assert(::jmc_auto::canbus::Adu_controldrive_0x120_120_Adu_targetgear_enableType_IsValid(value));
  set_has_adu_targetgear_enable();
  adu_targetgear_enable_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controldrive_0x120_120.adu_targetgear_enable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_control2_0x131_131::kChecksum0X131FieldNumber;
const int Gw_vcu_control2_0x131_131::kRollingCounter0X131FieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuStsVcuFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuBrakeFlagFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuTractorFlagFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuBrkpedposMeasVcuFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuPwtModeDashFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuMcuMotor1CapdischargeReqFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuMcuMotor1TrqReqFieldNumber;
const int Gw_vcu_control2_0x131_131::kVcuMcuMotor1SpdReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_control2_0x131_131::Gw_vcu_control2_0x131_131()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
}
Gw_vcu_control2_0x131_131::Gw_vcu_control2_0x131_131(const Gw_vcu_control2_0x131_131& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x131_, &from.checksum_0x131_,
    reinterpret_cast<char*>(&vcu_mcu_motor1_spd_req_) -
    reinterpret_cast<char*>(&checksum_0x131_) + sizeof(vcu_mcu_motor1_spd_req_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
}

void Gw_vcu_control2_0x131_131::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x131_, 0, reinterpret_cast<char*>(&vcu_mcu_motor1_spd_req_) -
    reinterpret_cast<char*>(&checksum_0x131_) + sizeof(vcu_mcu_motor1_spd_req_));
}

Gw_vcu_control2_0x131_131::~Gw_vcu_control2_0x131_131() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  SharedDtor();
}

void Gw_vcu_control2_0x131_131::SharedDtor() {
}

void Gw_vcu_control2_0x131_131::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_control2_0x131_131::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_control2_0x131_131& Gw_vcu_control2_0x131_131::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_control2_0x131_131* Gw_vcu_control2_0x131_131::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_control2_0x131_131* n = new Gw_vcu_control2_0x131_131;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_control2_0x131_131::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x131_, 0, reinterpret_cast<char*>(&vcu_mcu_motor1_trq_req_) -
      reinterpret_cast<char*>(&checksum_0x131_) + sizeof(vcu_mcu_motor1_trq_req_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&vcu_mcu_motor1_capdischarge_req_, 0, reinterpret_cast<char*>(&vcu_mcu_motor1_spd_req_) -
      reinterpret_cast<char*>(&vcu_mcu_motor1_capdischarge_req_) + sizeof(vcu_mcu_motor1_spd_req_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_control2_0x131_131::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x131 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x131();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x131_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x131 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x131();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x131_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_sts_vcuType vcu_sts_vcu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType_IsValid(value)) {
            set_vcu_sts_vcu(static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_brake_flagType vcu_brake_flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType_IsValid(value)) {
            set_vcu_brake_flag(static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_tractor_flagType vcu_tractor_flag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType_IsValid(value)) {
            set_vcu_tractor_flag(static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_brkpedpos_meas_vcu = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_vcu_brkpedpos_meas_vcu();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_brkpedpos_meas_vcu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_pwt_mode_dashType vcu_pwt_mode_dash = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType_IsValid(value)) {
            set_vcu_pwt_mode_dash(static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_mcu_motor1_capdischarge_reqType vcu_mcu_motor1_capdischarge_req = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType_IsValid(value)) {
            set_vcu_mcu_motor1_capdischarge_req(static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_mcu_motor1_trq_req = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_vcu_mcu_motor1_trq_req();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_mcu_motor1_trq_req_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_mcu_motor1_spd_req = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_vcu_mcu_motor1_spd_req();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_mcu_motor1_spd_req_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  return false;
#undef DO_
}

void Gw_vcu_control2_0x131_131::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x131 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x131(), output);
  }

  // optional int32 rolling_counter_0x131 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x131(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_sts_vcuType vcu_sts_vcu = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_sts_vcu(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_brake_flagType vcu_brake_flag = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vcu_brake_flag(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_tractor_flagType vcu_tractor_flag = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->vcu_tractor_flag(), output);
  }

  // optional double vcu_brkpedpos_meas_vcu = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vcu_brkpedpos_meas_vcu(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_pwt_mode_dashType vcu_pwt_mode_dash = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vcu_pwt_mode_dash(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_mcu_motor1_capdischarge_reqType vcu_mcu_motor1_capdischarge_req = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->vcu_mcu_motor1_capdischarge_req(), output);
  }

  // optional double vcu_mcu_motor1_trq_req = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vcu_mcu_motor1_trq_req(), output);
  }

  // optional int32 vcu_mcu_motor1_spd_req = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->vcu_mcu_motor1_spd_req(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
}

::google::protobuf::uint8* Gw_vcu_control2_0x131_131::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x131 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x131(), target);
  }

  // optional int32 rolling_counter_0x131 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x131(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_sts_vcuType vcu_sts_vcu = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_sts_vcu(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_brake_flagType vcu_brake_flag = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vcu_brake_flag(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_tractor_flagType vcu_tractor_flag = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->vcu_tractor_flag(), target);
  }

  // optional double vcu_brkpedpos_meas_vcu = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->vcu_brkpedpos_meas_vcu(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_pwt_mode_dashType vcu_pwt_mode_dash = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->vcu_pwt_mode_dash(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_mcu_motor1_capdischarge_reqType vcu_mcu_motor1_capdischarge_req = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->vcu_mcu_motor1_capdischarge_req(), target);
  }

  // optional double vcu_mcu_motor1_trq_req = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vcu_mcu_motor1_trq_req(), target);
  }

  // optional int32 vcu_mcu_motor1_spd_req = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->vcu_mcu_motor1_spd_req(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  return target;
}

size_t Gw_vcu_control2_0x131_131::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x131 = 1;
    if (has_checksum_0x131()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x131());
    }

    // optional int32 rolling_counter_0x131 = 2;
    if (has_rolling_counter_0x131()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x131());
    }

    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_sts_vcuType vcu_sts_vcu = 3;
    if (has_vcu_sts_vcu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_sts_vcu());
    }

    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_brake_flagType vcu_brake_flag = 4;
    if (has_vcu_brake_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_brake_flag());
    }

    // optional double vcu_brkpedpos_meas_vcu = 6;
    if (has_vcu_brkpedpos_meas_vcu()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_tractor_flagType vcu_tractor_flag = 5;
    if (has_vcu_tractor_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_tractor_flag());
    }

    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_pwt_mode_dashType vcu_pwt_mode_dash = 7;
    if (has_vcu_pwt_mode_dash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_pwt_mode_dash());
    }

    // optional double vcu_mcu_motor1_trq_req = 9;
    if (has_vcu_mcu_motor1_trq_req()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_mcu_motor1_capdischarge_reqType vcu_mcu_motor1_capdischarge_req = 8;
    if (has_vcu_mcu_motor1_capdischarge_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_mcu_motor1_capdischarge_req());
    }

    // optional int32 vcu_mcu_motor1_spd_req = 10;
    if (has_vcu_mcu_motor1_spd_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_mcu_motor1_spd_req());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_control2_0x131_131::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_control2_0x131_131* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_control2_0x131_131>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
    MergeFrom(*source);
  }
}

void Gw_vcu_control2_0x131_131::MergeFrom(const Gw_vcu_control2_0x131_131& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x131_ = from.checksum_0x131_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x131_ = from.rolling_counter_0x131_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_sts_vcu_ = from.vcu_sts_vcu_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_brake_flag_ = from.vcu_brake_flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_brkpedpos_meas_vcu_ = from.vcu_brkpedpos_meas_vcu_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_tractor_flag_ = from.vcu_tractor_flag_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_pwt_mode_dash_ = from.vcu_pwt_mode_dash_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_mcu_motor1_trq_req_ = from.vcu_mcu_motor1_trq_req_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_mcu_motor1_capdischarge_req_ = from.vcu_mcu_motor1_capdischarge_req_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_mcu_motor1_spd_req_ = from.vcu_mcu_motor1_spd_req_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_vcu_control2_0x131_131::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_control2_0x131_131::CopyFrom(const Gw_vcu_control2_0x131_131& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_control2_0x131_131)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_control2_0x131_131::IsInitialized() const {
  return true;
}

void Gw_vcu_control2_0x131_131::Swap(Gw_vcu_control2_0x131_131* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_control2_0x131_131::InternalSwap(Gw_vcu_control2_0x131_131* other) {
  std::swap(checksum_0x131_, other->checksum_0x131_);
  std::swap(rolling_counter_0x131_, other->rolling_counter_0x131_);
  std::swap(vcu_sts_vcu_, other->vcu_sts_vcu_);
  std::swap(vcu_brake_flag_, other->vcu_brake_flag_);
  std::swap(vcu_brkpedpos_meas_vcu_, other->vcu_brkpedpos_meas_vcu_);
  std::swap(vcu_tractor_flag_, other->vcu_tractor_flag_);
  std::swap(vcu_pwt_mode_dash_, other->vcu_pwt_mode_dash_);
  std::swap(vcu_mcu_motor1_trq_req_, other->vcu_mcu_motor1_trq_req_);
  std::swap(vcu_mcu_motor1_capdischarge_req_, other->vcu_mcu_motor1_capdischarge_req_);
  std::swap(vcu_mcu_motor1_spd_req_, other->vcu_mcu_motor1_spd_req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_control2_0x131_131::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_control2_0x131_131

// optional int32 checksum_0x131 = 1;
bool Gw_vcu_control2_0x131_131::has_checksum_0x131() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_checksum_0x131() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_control2_0x131_131::clear_has_checksum_0x131() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_control2_0x131_131::clear_checksum_0x131() {
  checksum_0x131_ = 0;
  clear_has_checksum_0x131();
}
::google::protobuf::int32 Gw_vcu_control2_0x131_131::checksum_0x131() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.checksum_0x131)
  return checksum_0x131_;
}
void Gw_vcu_control2_0x131_131::set_checksum_0x131(::google::protobuf::int32 value) {
  set_has_checksum_0x131();
  checksum_0x131_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.checksum_0x131)
}

// optional int32 rolling_counter_0x131 = 2;
bool Gw_vcu_control2_0x131_131::has_rolling_counter_0x131() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_rolling_counter_0x131() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_control2_0x131_131::clear_has_rolling_counter_0x131() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_control2_0x131_131::clear_rolling_counter_0x131() {
  rolling_counter_0x131_ = 0;
  clear_has_rolling_counter_0x131();
}
::google::protobuf::int32 Gw_vcu_control2_0x131_131::rolling_counter_0x131() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.rolling_counter_0x131)
  return rolling_counter_0x131_;
}
void Gw_vcu_control2_0x131_131::set_rolling_counter_0x131(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x131();
  rolling_counter_0x131_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.rolling_counter_0x131)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_sts_vcuType vcu_sts_vcu = 3;
bool Gw_vcu_control2_0x131_131::has_vcu_sts_vcu() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_sts_vcu() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_sts_vcu() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_sts_vcu() {
  vcu_sts_vcu_ = 0;
  clear_has_vcu_sts_vcu();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType Gw_vcu_control2_0x131_131::vcu_sts_vcu() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_sts_vcu)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType >(vcu_sts_vcu_);
}
void Gw_vcu_control2_0x131_131::set_vcu_sts_vcu(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_sts_vcuType_IsValid(value));
  set_has_vcu_sts_vcu();
  vcu_sts_vcu_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_sts_vcu)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_brake_flagType vcu_brake_flag = 4;
bool Gw_vcu_control2_0x131_131::has_vcu_brake_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_brake_flag() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_brake_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_brake_flag() {
  vcu_brake_flag_ = 0;
  clear_has_vcu_brake_flag();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType Gw_vcu_control2_0x131_131::vcu_brake_flag() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_brake_flag)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType >(vcu_brake_flag_);
}
void Gw_vcu_control2_0x131_131::set_vcu_brake_flag(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_brake_flagType_IsValid(value));
  set_has_vcu_brake_flag();
  vcu_brake_flag_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_brake_flag)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_tractor_flagType vcu_tractor_flag = 5;
bool Gw_vcu_control2_0x131_131::has_vcu_tractor_flag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_tractor_flag() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_tractor_flag() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_tractor_flag() {
  vcu_tractor_flag_ = 0;
  clear_has_vcu_tractor_flag();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType Gw_vcu_control2_0x131_131::vcu_tractor_flag() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_tractor_flag)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType >(vcu_tractor_flag_);
}
void Gw_vcu_control2_0x131_131::set_vcu_tractor_flag(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_tractor_flagType_IsValid(value));
  set_has_vcu_tractor_flag();
  vcu_tractor_flag_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_tractor_flag)
}

// optional double vcu_brkpedpos_meas_vcu = 6;
bool Gw_vcu_control2_0x131_131::has_vcu_brkpedpos_meas_vcu() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_brkpedpos_meas_vcu() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_brkpedpos_meas_vcu() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_brkpedpos_meas_vcu() {
  vcu_brkpedpos_meas_vcu_ = 0;
  clear_has_vcu_brkpedpos_meas_vcu();
}
double Gw_vcu_control2_0x131_131::vcu_brkpedpos_meas_vcu() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_brkpedpos_meas_vcu)
  return vcu_brkpedpos_meas_vcu_;
}
void Gw_vcu_control2_0x131_131::set_vcu_brkpedpos_meas_vcu(double value) {
  set_has_vcu_brkpedpos_meas_vcu();
  vcu_brkpedpos_meas_vcu_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_brkpedpos_meas_vcu)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_pwt_mode_dashType vcu_pwt_mode_dash = 7;
bool Gw_vcu_control2_0x131_131::has_vcu_pwt_mode_dash() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_pwt_mode_dash() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_pwt_mode_dash() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_pwt_mode_dash() {
  vcu_pwt_mode_dash_ = 0;
  clear_has_vcu_pwt_mode_dash();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType Gw_vcu_control2_0x131_131::vcu_pwt_mode_dash() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_pwt_mode_dash)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType >(vcu_pwt_mode_dash_);
}
void Gw_vcu_control2_0x131_131::set_vcu_pwt_mode_dash(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_pwt_mode_dashType_IsValid(value));
  set_has_vcu_pwt_mode_dash();
  vcu_pwt_mode_dash_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_pwt_mode_dash)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131.Vcu_mcu_motor1_capdischarge_reqType vcu_mcu_motor1_capdischarge_req = 8;
bool Gw_vcu_control2_0x131_131::has_vcu_mcu_motor1_capdischarge_req() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_mcu_motor1_capdischarge_req() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_mcu_motor1_capdischarge_req() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_mcu_motor1_capdischarge_req() {
  vcu_mcu_motor1_capdischarge_req_ = 0;
  clear_has_vcu_mcu_motor1_capdischarge_req();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType Gw_vcu_control2_0x131_131::vcu_mcu_motor1_capdischarge_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_capdischarge_req)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType >(vcu_mcu_motor1_capdischarge_req_);
}
void Gw_vcu_control2_0x131_131::set_vcu_mcu_motor1_capdischarge_req(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control2_0x131_131_Vcu_mcu_motor1_capdischarge_reqType_IsValid(value));
  set_has_vcu_mcu_motor1_capdischarge_req();
  vcu_mcu_motor1_capdischarge_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_capdischarge_req)
}

// optional double vcu_mcu_motor1_trq_req = 9;
bool Gw_vcu_control2_0x131_131::has_vcu_mcu_motor1_trq_req() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_mcu_motor1_trq_req() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_mcu_motor1_trq_req() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_mcu_motor1_trq_req() {
  vcu_mcu_motor1_trq_req_ = 0;
  clear_has_vcu_mcu_motor1_trq_req();
}
double Gw_vcu_control2_0x131_131::vcu_mcu_motor1_trq_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_trq_req)
  return vcu_mcu_motor1_trq_req_;
}
void Gw_vcu_control2_0x131_131::set_vcu_mcu_motor1_trq_req(double value) {
  set_has_vcu_mcu_motor1_trq_req();
  vcu_mcu_motor1_trq_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_trq_req)
}

// optional int32 vcu_mcu_motor1_spd_req = 10;
bool Gw_vcu_control2_0x131_131::has_vcu_mcu_motor1_spd_req() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_vcu_control2_0x131_131::set_has_vcu_mcu_motor1_spd_req() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_vcu_control2_0x131_131::clear_has_vcu_mcu_motor1_spd_req() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_vcu_control2_0x131_131::clear_vcu_mcu_motor1_spd_req() {
  vcu_mcu_motor1_spd_req_ = 0;
  clear_has_vcu_mcu_motor1_spd_req();
}
::google::protobuf::int32 Gw_vcu_control2_0x131_131::vcu_mcu_motor1_spd_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_spd_req)
  return vcu_mcu_motor1_spd_req_;
}
void Gw_vcu_control2_0x131_131::set_vcu_mcu_motor1_spd_req(::google::protobuf::int32 value) {
  set_has_vcu_mcu_motor1_spd_req();
  vcu_mcu_motor1_spd_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control2_0x131_131.vcu_mcu_motor1_spd_req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_scu_shiftersts_0xc8_c8::kChecksum0Xc8FieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kRollingCounter0Xc8FieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kScuShifterlockstatusFieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kShifterlockstatusFieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kShifterpositionfailureFieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kShifterpositionFieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kShifterpositioninvFieldNumber;
const int Gw_scu_shiftersts_0xc8_c8::kSysStsScuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_scu_shiftersts_0xc8_c8::Gw_scu_shiftersts_0xc8_c8()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
}
Gw_scu_shiftersts_0xc8_c8::Gw_scu_shiftersts_0xc8_c8(const Gw_scu_shiftersts_0xc8_c8& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0xc8_, &from.checksum_0xc8_,
    reinterpret_cast<char*>(&shifterpositioninv_) -
    reinterpret_cast<char*>(&checksum_0xc8_) + sizeof(shifterpositioninv_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
}

void Gw_scu_shiftersts_0xc8_c8::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0xc8_, 0, reinterpret_cast<char*>(&sys_sts_scu_) -
    reinterpret_cast<char*>(&checksum_0xc8_) + sizeof(sys_sts_scu_));
  shifterpositioninv_ = 5;
}

Gw_scu_shiftersts_0xc8_c8::~Gw_scu_shiftersts_0xc8_c8() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  SharedDtor();
}

void Gw_scu_shiftersts_0xc8_c8::SharedDtor() {
}

void Gw_scu_shiftersts_0xc8_c8::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_scu_shiftersts_0xc8_c8::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_scu_shiftersts_0xc8_c8& Gw_scu_shiftersts_0xc8_c8::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_scu_shiftersts_0xc8_c8* Gw_scu_shiftersts_0xc8_c8::New(::google::protobuf::Arena* arena) const {
  Gw_scu_shiftersts_0xc8_c8* n = new Gw_scu_shiftersts_0xc8_c8;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_scu_shiftersts_0xc8_c8::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0xc8_, 0, reinterpret_cast<char*>(&sys_sts_scu_) -
      reinterpret_cast<char*>(&checksum_0xc8_) + sizeof(sys_sts_scu_));
    shifterpositioninv_ = 5;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_scu_shiftersts_0xc8_c8::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0xc8 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0xc8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0xc8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0xc8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0xc8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0xc8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Scu_shifterlockstatusType scu_shifterlockstatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType_IsValid(value)) {
            set_scu_shifterlockstatus(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterlockstatusType shifterlockstatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType_IsValid(value)) {
            set_shifterlockstatus(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionfailureType shifterpositionfailure = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType_IsValid(value)) {
            set_shifterpositionfailure(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionType shifterposition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType_IsValid(value)) {
            set_shifterposition(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositioninvType shifterpositioninv = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType_IsValid(value)) {
            set_shifterpositioninv(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_scuType sys_sts_scu = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType_IsValid(value)) {
            set_sys_sts_scu(static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  return false;
#undef DO_
}

void Gw_scu_shiftersts_0xc8_c8::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0xc8 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0xc8(), output);
  }

  // optional int32 rolling_counter_0xc8 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0xc8(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Scu_shifterlockstatusType scu_shifterlockstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->scu_shifterlockstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterlockstatusType shifterlockstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->shifterlockstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionfailureType shifterpositionfailure = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->shifterpositionfailure(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionType shifterposition = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->shifterposition(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositioninvType shifterpositioninv = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->shifterpositioninv(), output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_scuType sys_sts_scu = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->sys_sts_scu(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
}

::google::protobuf::uint8* Gw_scu_shiftersts_0xc8_c8::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0xc8 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0xc8(), target);
  }

  // optional int32 rolling_counter_0xc8 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0xc8(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Scu_shifterlockstatusType scu_shifterlockstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->scu_shifterlockstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterlockstatusType shifterlockstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->shifterlockstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionfailureType shifterpositionfailure = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->shifterpositionfailure(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionType shifterposition = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->shifterposition(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositioninvType shifterpositioninv = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->shifterpositioninv(), target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_scuType sys_sts_scu = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->sys_sts_scu(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  return target;
}

size_t Gw_scu_shiftersts_0xc8_c8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0xc8 = 1;
    if (has_checksum_0xc8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0xc8());
    }

    // optional int32 rolling_counter_0xc8 = 2;
    if (has_rolling_counter_0xc8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0xc8());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Scu_shifterlockstatusType scu_shifterlockstatus = 3;
    if (has_scu_shifterlockstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->scu_shifterlockstatus());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterlockstatusType shifterlockstatus = 4;
    if (has_shifterlockstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->shifterlockstatus());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionfailureType shifterpositionfailure = 5;
    if (has_shifterpositionfailure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->shifterpositionfailure());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionType shifterposition = 6;
    if (has_shifterposition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->shifterposition());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_scuType sys_sts_scu = 8;
    if (has_sys_sts_scu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sys_sts_scu());
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositioninvType shifterpositioninv = 7;
    if (has_shifterpositioninv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->shifterpositioninv());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_scu_shiftersts_0xc8_c8::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_scu_shiftersts_0xc8_c8* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_scu_shiftersts_0xc8_c8>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
    MergeFrom(*source);
  }
}

void Gw_scu_shiftersts_0xc8_c8::MergeFrom(const Gw_scu_shiftersts_0xc8_c8& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0xc8_ = from.checksum_0xc8_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0xc8_ = from.rolling_counter_0xc8_;
    }
    if (cached_has_bits & 0x00000004u) {
      scu_shifterlockstatus_ = from.scu_shifterlockstatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      shifterlockstatus_ = from.shifterlockstatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      shifterpositionfailure_ = from.shifterpositionfailure_;
    }
    if (cached_has_bits & 0x00000020u) {
      shifterposition_ = from.shifterposition_;
    }
    if (cached_has_bits & 0x00000040u) {
      sys_sts_scu_ = from.sys_sts_scu_;
    }
    if (cached_has_bits & 0x00000080u) {
      shifterpositioninv_ = from.shifterpositioninv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_scu_shiftersts_0xc8_c8::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_scu_shiftersts_0xc8_c8::CopyFrom(const Gw_scu_shiftersts_0xc8_c8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_scu_shiftersts_0xc8_c8::IsInitialized() const {
  return true;
}

void Gw_scu_shiftersts_0xc8_c8::Swap(Gw_scu_shiftersts_0xc8_c8* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_scu_shiftersts_0xc8_c8::InternalSwap(Gw_scu_shiftersts_0xc8_c8* other) {
  std::swap(checksum_0xc8_, other->checksum_0xc8_);
  std::swap(rolling_counter_0xc8_, other->rolling_counter_0xc8_);
  std::swap(scu_shifterlockstatus_, other->scu_shifterlockstatus_);
  std::swap(shifterlockstatus_, other->shifterlockstatus_);
  std::swap(shifterpositionfailure_, other->shifterpositionfailure_);
  std::swap(shifterposition_, other->shifterposition_);
  std::swap(sys_sts_scu_, other->sys_sts_scu_);
  std::swap(shifterpositioninv_, other->shifterpositioninv_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_scu_shiftersts_0xc8_c8::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_scu_shiftersts_0xc8_c8

// optional int32 checksum_0xc8 = 1;
bool Gw_scu_shiftersts_0xc8_c8::has_checksum_0xc8() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_checksum_0xc8() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_checksum_0xc8() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_checksum_0xc8() {
  checksum_0xc8_ = 0;
  clear_has_checksum_0xc8();
}
::google::protobuf::int32 Gw_scu_shiftersts_0xc8_c8::checksum_0xc8() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.checksum_0xc8)
  return checksum_0xc8_;
}
void Gw_scu_shiftersts_0xc8_c8::set_checksum_0xc8(::google::protobuf::int32 value) {
  set_has_checksum_0xc8();
  checksum_0xc8_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.checksum_0xc8)
}

// optional int32 rolling_counter_0xc8 = 2;
bool Gw_scu_shiftersts_0xc8_c8::has_rolling_counter_0xc8() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_rolling_counter_0xc8() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_rolling_counter_0xc8() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_rolling_counter_0xc8() {
  rolling_counter_0xc8_ = 0;
  clear_has_rolling_counter_0xc8();
}
::google::protobuf::int32 Gw_scu_shiftersts_0xc8_c8::rolling_counter_0xc8() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.rolling_counter_0xc8)
  return rolling_counter_0xc8_;
}
void Gw_scu_shiftersts_0xc8_c8::set_rolling_counter_0xc8(::google::protobuf::int32 value) {
  set_has_rolling_counter_0xc8();
  rolling_counter_0xc8_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.rolling_counter_0xc8)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Scu_shifterlockstatusType scu_shifterlockstatus = 3;
bool Gw_scu_shiftersts_0xc8_c8::has_scu_shifterlockstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_scu_shifterlockstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_scu_shifterlockstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_scu_shifterlockstatus() {
  scu_shifterlockstatus_ = 0;
  clear_has_scu_shifterlockstatus();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType Gw_scu_shiftersts_0xc8_c8::scu_shifterlockstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.scu_shifterlockstatus)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType >(scu_shifterlockstatus_);
}
void Gw_scu_shiftersts_0xc8_c8::set_scu_shifterlockstatus(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Scu_shifterlockstatusType_IsValid(value));
  set_has_scu_shifterlockstatus();
  scu_shifterlockstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.scu_shifterlockstatus)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterlockstatusType shifterlockstatus = 4;
bool Gw_scu_shiftersts_0xc8_c8::has_shifterlockstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_shifterlockstatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_shifterlockstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_shifterlockstatus() {
  shifterlockstatus_ = 0;
  clear_has_shifterlockstatus();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType Gw_scu_shiftersts_0xc8_c8::shifterlockstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterlockstatus)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType >(shifterlockstatus_);
}
void Gw_scu_shiftersts_0xc8_c8::set_shifterlockstatus(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterlockstatusType_IsValid(value));
  set_has_shifterlockstatus();
  shifterlockstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterlockstatus)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionfailureType shifterpositionfailure = 5;
bool Gw_scu_shiftersts_0xc8_c8::has_shifterpositionfailure() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_shifterpositionfailure() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_shifterpositionfailure() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_shifterpositionfailure() {
  shifterpositionfailure_ = 0;
  clear_has_shifterpositionfailure();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType Gw_scu_shiftersts_0xc8_c8::shifterpositionfailure() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterpositionfailure)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType >(shifterpositionfailure_);
}
void Gw_scu_shiftersts_0xc8_c8::set_shifterpositionfailure(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionfailureType_IsValid(value));
  set_has_shifterpositionfailure();
  shifterpositionfailure_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterpositionfailure)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositionType shifterposition = 6;
bool Gw_scu_shiftersts_0xc8_c8::has_shifterposition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_shifterposition() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_shifterposition() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_shifterposition() {
  shifterposition_ = 0;
  clear_has_shifterposition();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType Gw_scu_shiftersts_0xc8_c8::shifterposition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterposition)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType >(shifterposition_);
}
void Gw_scu_shiftersts_0xc8_c8::set_shifterposition(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositionType_IsValid(value));
  set_has_shifterposition();
  shifterposition_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterposition)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.ShifterpositioninvType shifterpositioninv = 7;
bool Gw_scu_shiftersts_0xc8_c8::has_shifterpositioninv() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_shifterpositioninv() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_shifterpositioninv() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_shifterpositioninv() {
  shifterpositioninv_ = 5;
  clear_has_shifterpositioninv();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType Gw_scu_shiftersts_0xc8_c8::shifterpositioninv() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterpositioninv)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType >(shifterpositioninv_);
}
void Gw_scu_shiftersts_0xc8_c8::set_shifterpositioninv(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_ShifterpositioninvType_IsValid(value));
  set_has_shifterpositioninv();
  shifterpositioninv_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.shifterpositioninv)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.Sys_sts_scuType sys_sts_scu = 8;
bool Gw_scu_shiftersts_0xc8_c8::has_sys_sts_scu() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_scu_shiftersts_0xc8_c8::set_has_sys_sts_scu() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_has_sys_sts_scu() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_scu_shiftersts_0xc8_c8::clear_sys_sts_scu() {
  sys_sts_scu_ = 0;
  clear_has_sys_sts_scu();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType Gw_scu_shiftersts_0xc8_c8::sys_sts_scu() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.sys_sts_scu)
  return static_cast< ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType >(sys_sts_scu_);
}
void Gw_scu_shiftersts_0xc8_c8::set_sys_sts_scu(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType value) {
  assert(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8_Sys_sts_scuType_IsValid(value));
  set_has_sys_sts_scu();
  sys_sts_scu_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8.sys_sts_scu)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_drivests_0x10a_10a::kChecksum0X10AFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kRollingCounter0X10AFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuVehicleerrorInterveneFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuTorqueControlstatusFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuTorquedriverInterveneFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuGearposControlstatusFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuGearposdriverInterveneFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuVehStsFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuAxlespdstFieldNumber;
const int Gw_vcu_drivests_0x10a_10a::kVcuAxlespdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_drivests_0x10a_10a::Gw_vcu_drivests_0x10a_10a()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
}
Gw_vcu_drivests_0x10a_10a::Gw_vcu_drivests_0x10a_10a(const Gw_vcu_drivests_0x10a_10a& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x10a_, &from.checksum_0x10a_,
    reinterpret_cast<char*>(&vcu_axlespdst_) -
    reinterpret_cast<char*>(&checksum_0x10a_) + sizeof(vcu_axlespdst_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
}

void Gw_vcu_drivests_0x10a_10a::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x10a_, 0, reinterpret_cast<char*>(&vcu_axlespdst_) -
    reinterpret_cast<char*>(&checksum_0x10a_) + sizeof(vcu_axlespdst_));
}

Gw_vcu_drivests_0x10a_10a::~Gw_vcu_drivests_0x10a_10a() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  SharedDtor();
}

void Gw_vcu_drivests_0x10a_10a::SharedDtor() {
}

void Gw_vcu_drivests_0x10a_10a::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_drivests_0x10a_10a::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_drivests_0x10a_10a& Gw_vcu_drivests_0x10a_10a::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_drivests_0x10a_10a* Gw_vcu_drivests_0x10a_10a::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_drivests_0x10a_10a* n = new Gw_vcu_drivests_0x10a_10a;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_drivests_0x10a_10a::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x10a_, 0, reinterpret_cast<char*>(&vcu_veh_sts_) -
      reinterpret_cast<char*>(&checksum_0x10a_) + sizeof(vcu_veh_sts_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&vcu_axlespd_, 0, reinterpret_cast<char*>(&vcu_axlespdst_) -
      reinterpret_cast<char*>(&vcu_axlespd_) + sizeof(vcu_axlespdst_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_drivests_0x10a_10a::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x10a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x10a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x10a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x10a = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x10a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x10a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_vehicleerror_interveneType vcu_vehicleerror_intervene = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType_IsValid(value)) {
            set_vcu_vehicleerror_intervene(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torque_controlstatusType vcu_torque_controlstatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType_IsValid(value)) {
            set_vcu_torque_controlstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torquedriver_interveneType vcu_torquedriver_intervene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType_IsValid(value)) {
            set_vcu_torquedriver_intervene(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearpos_controlstatusType vcu_gearpos_controlstatus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType_IsValid(value)) {
            set_vcu_gearpos_controlstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearposdriver_interveneType vcu_gearposdriver_intervene = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType_IsValid(value)) {
            set_vcu_gearposdriver_intervene(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_veh_stsType vcu_veh_sts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType_IsValid(value)) {
            set_vcu_veh_sts(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_axlespdstType vcu_axlespdst = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType_IsValid(value)) {
            set_vcu_axlespdst(static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_axlespd = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_vcu_axlespd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_axlespd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  return false;
#undef DO_
}

void Gw_vcu_drivests_0x10a_10a::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x10a = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x10a(), output);
  }

  // optional int32 rolling_counter_0x10a = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x10a(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_vehicleerror_interveneType vcu_vehicleerror_intervene = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_vehicleerror_intervene(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torque_controlstatusType vcu_torque_controlstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vcu_torque_controlstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torquedriver_interveneType vcu_torquedriver_intervene = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->vcu_torquedriver_intervene(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearpos_controlstatusType vcu_gearpos_controlstatus = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->vcu_gearpos_controlstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearposdriver_interveneType vcu_gearposdriver_intervene = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vcu_gearposdriver_intervene(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_veh_stsType vcu_veh_sts = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->vcu_veh_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_axlespdstType vcu_axlespdst = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->vcu_axlespdst(), output);
  }

  // optional double vcu_axlespd = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->vcu_axlespd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
}

::google::protobuf::uint8* Gw_vcu_drivests_0x10a_10a::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x10a = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x10a(), target);
  }

  // optional int32 rolling_counter_0x10a = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x10a(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_vehicleerror_interveneType vcu_vehicleerror_intervene = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_vehicleerror_intervene(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torque_controlstatusType vcu_torque_controlstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vcu_torque_controlstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torquedriver_interveneType vcu_torquedriver_intervene = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->vcu_torquedriver_intervene(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearpos_controlstatusType vcu_gearpos_controlstatus = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->vcu_gearpos_controlstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearposdriver_interveneType vcu_gearposdriver_intervene = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->vcu_gearposdriver_intervene(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_veh_stsType vcu_veh_sts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->vcu_veh_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_axlespdstType vcu_axlespdst = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->vcu_axlespdst(), target);
  }

  // optional double vcu_axlespd = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->vcu_axlespd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  return target;
}

size_t Gw_vcu_drivests_0x10a_10a::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x10a = 1;
    if (has_checksum_0x10a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x10a());
    }

    // optional int32 rolling_counter_0x10a = 2;
    if (has_rolling_counter_0x10a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x10a());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_vehicleerror_interveneType vcu_vehicleerror_intervene = 3;
    if (has_vcu_vehicleerror_intervene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_vehicleerror_intervene());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torque_controlstatusType vcu_torque_controlstatus = 4;
    if (has_vcu_torque_controlstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_torque_controlstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torquedriver_interveneType vcu_torquedriver_intervene = 5;
    if (has_vcu_torquedriver_intervene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_torquedriver_intervene());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearpos_controlstatusType vcu_gearpos_controlstatus = 6;
    if (has_vcu_gearpos_controlstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_gearpos_controlstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearposdriver_interveneType vcu_gearposdriver_intervene = 7;
    if (has_vcu_gearposdriver_intervene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_gearposdriver_intervene());
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_veh_stsType vcu_veh_sts = 8;
    if (has_vcu_veh_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_veh_sts());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional double vcu_axlespd = 10;
    if (has_vcu_axlespd()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_axlespdstType vcu_axlespdst = 9;
    if (has_vcu_axlespdst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_axlespdst());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_drivests_0x10a_10a::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_drivests_0x10a_10a* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_drivests_0x10a_10a>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
    MergeFrom(*source);
  }
}

void Gw_vcu_drivests_0x10a_10a::MergeFrom(const Gw_vcu_drivests_0x10a_10a& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x10a_ = from.checksum_0x10a_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x10a_ = from.rolling_counter_0x10a_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_vehicleerror_intervene_ = from.vcu_vehicleerror_intervene_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_torque_controlstatus_ = from.vcu_torque_controlstatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_torquedriver_intervene_ = from.vcu_torquedriver_intervene_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_gearpos_controlstatus_ = from.vcu_gearpos_controlstatus_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_gearposdriver_intervene_ = from.vcu_gearposdriver_intervene_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_veh_sts_ = from.vcu_veh_sts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_axlespd_ = from.vcu_axlespd_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_axlespdst_ = from.vcu_axlespdst_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_vcu_drivests_0x10a_10a::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_drivests_0x10a_10a::CopyFrom(const Gw_vcu_drivests_0x10a_10a& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_drivests_0x10a_10a::IsInitialized() const {
  return true;
}

void Gw_vcu_drivests_0x10a_10a::Swap(Gw_vcu_drivests_0x10a_10a* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_drivests_0x10a_10a::InternalSwap(Gw_vcu_drivests_0x10a_10a* other) {
  std::swap(checksum_0x10a_, other->checksum_0x10a_);
  std::swap(rolling_counter_0x10a_, other->rolling_counter_0x10a_);
  std::swap(vcu_vehicleerror_intervene_, other->vcu_vehicleerror_intervene_);
  std::swap(vcu_torque_controlstatus_, other->vcu_torque_controlstatus_);
  std::swap(vcu_torquedriver_intervene_, other->vcu_torquedriver_intervene_);
  std::swap(vcu_gearpos_controlstatus_, other->vcu_gearpos_controlstatus_);
  std::swap(vcu_gearposdriver_intervene_, other->vcu_gearposdriver_intervene_);
  std::swap(vcu_veh_sts_, other->vcu_veh_sts_);
  std::swap(vcu_axlespd_, other->vcu_axlespd_);
  std::swap(vcu_axlespdst_, other->vcu_axlespdst_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_drivests_0x10a_10a::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_drivests_0x10a_10a

// optional int32 checksum_0x10a = 1;
bool Gw_vcu_drivests_0x10a_10a::has_checksum_0x10a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_checksum_0x10a() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_checksum_0x10a() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_drivests_0x10a_10a::clear_checksum_0x10a() {
  checksum_0x10a_ = 0;
  clear_has_checksum_0x10a();
}
::google::protobuf::int32 Gw_vcu_drivests_0x10a_10a::checksum_0x10a() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.checksum_0x10a)
  return checksum_0x10a_;
}
void Gw_vcu_drivests_0x10a_10a::set_checksum_0x10a(::google::protobuf::int32 value) {
  set_has_checksum_0x10a();
  checksum_0x10a_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.checksum_0x10a)
}

// optional int32 rolling_counter_0x10a = 2;
bool Gw_vcu_drivests_0x10a_10a::has_rolling_counter_0x10a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_rolling_counter_0x10a() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_rolling_counter_0x10a() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_drivests_0x10a_10a::clear_rolling_counter_0x10a() {
  rolling_counter_0x10a_ = 0;
  clear_has_rolling_counter_0x10a();
}
::google::protobuf::int32 Gw_vcu_drivests_0x10a_10a::rolling_counter_0x10a() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.rolling_counter_0x10a)
  return rolling_counter_0x10a_;
}
void Gw_vcu_drivests_0x10a_10a::set_rolling_counter_0x10a(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x10a();
  rolling_counter_0x10a_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.rolling_counter_0x10a)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_vehicleerror_interveneType vcu_vehicleerror_intervene = 3;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_vehicleerror_intervene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_vehicleerror_intervene() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_vehicleerror_intervene() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_vehicleerror_intervene() {
  vcu_vehicleerror_intervene_ = 0;
  clear_has_vcu_vehicleerror_intervene();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType Gw_vcu_drivests_0x10a_10a::vcu_vehicleerror_intervene() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_vehicleerror_intervene)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType >(vcu_vehicleerror_intervene_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_vehicleerror_intervene(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_vehicleerror_interveneType_IsValid(value));
  set_has_vcu_vehicleerror_intervene();
  vcu_vehicleerror_intervene_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_vehicleerror_intervene)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torque_controlstatusType vcu_torque_controlstatus = 4;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_torque_controlstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_torque_controlstatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_torque_controlstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_torque_controlstatus() {
  vcu_torque_controlstatus_ = 0;
  clear_has_vcu_torque_controlstatus();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType Gw_vcu_drivests_0x10a_10a::vcu_torque_controlstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_torque_controlstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType >(vcu_torque_controlstatus_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_torque_controlstatus(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torque_controlstatusType_IsValid(value));
  set_has_vcu_torque_controlstatus();
  vcu_torque_controlstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_torque_controlstatus)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_torquedriver_interveneType vcu_torquedriver_intervene = 5;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_torquedriver_intervene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_torquedriver_intervene() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_torquedriver_intervene() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_torquedriver_intervene() {
  vcu_torquedriver_intervene_ = 0;
  clear_has_vcu_torquedriver_intervene();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType Gw_vcu_drivests_0x10a_10a::vcu_torquedriver_intervene() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_torquedriver_intervene)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType >(vcu_torquedriver_intervene_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_torquedriver_intervene(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_torquedriver_interveneType_IsValid(value));
  set_has_vcu_torquedriver_intervene();
  vcu_torquedriver_intervene_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_torquedriver_intervene)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearpos_controlstatusType vcu_gearpos_controlstatus = 6;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_gearpos_controlstatus() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_gearpos_controlstatus() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_gearpos_controlstatus() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_gearpos_controlstatus() {
  vcu_gearpos_controlstatus_ = 0;
  clear_has_vcu_gearpos_controlstatus();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType Gw_vcu_drivests_0x10a_10a::vcu_gearpos_controlstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_gearpos_controlstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType >(vcu_gearpos_controlstatus_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_gearpos_controlstatus(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearpos_controlstatusType_IsValid(value));
  set_has_vcu_gearpos_controlstatus();
  vcu_gearpos_controlstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_gearpos_controlstatus)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_gearposdriver_interveneType vcu_gearposdriver_intervene = 7;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_gearposdriver_intervene() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_gearposdriver_intervene() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_gearposdriver_intervene() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_gearposdriver_intervene() {
  vcu_gearposdriver_intervene_ = 0;
  clear_has_vcu_gearposdriver_intervene();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType Gw_vcu_drivests_0x10a_10a::vcu_gearposdriver_intervene() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_gearposdriver_intervene)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType >(vcu_gearposdriver_intervene_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_gearposdriver_intervene(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_gearposdriver_interveneType_IsValid(value));
  set_has_vcu_gearposdriver_intervene();
  vcu_gearposdriver_intervene_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_gearposdriver_intervene)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_veh_stsType vcu_veh_sts = 8;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_veh_sts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_veh_sts() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_veh_sts() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_veh_sts() {
  vcu_veh_sts_ = 0;
  clear_has_vcu_veh_sts();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType Gw_vcu_drivests_0x10a_10a::vcu_veh_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_veh_sts)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType >(vcu_veh_sts_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_veh_sts(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_veh_stsType_IsValid(value));
  set_has_vcu_veh_sts();
  vcu_veh_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_veh_sts)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.Vcu_axlespdstType vcu_axlespdst = 9;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_axlespdst() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_axlespdst() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_axlespdst() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_axlespdst() {
  vcu_axlespdst_ = 0;
  clear_has_vcu_axlespdst();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType Gw_vcu_drivests_0x10a_10a::vcu_axlespdst() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_axlespdst)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType >(vcu_axlespdst_);
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_axlespdst(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType value) {
  assert(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a_Vcu_axlespdstType_IsValid(value));
  set_has_vcu_axlespdst();
  vcu_axlespdst_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_axlespdst)
}

// optional double vcu_axlespd = 10;
bool Gw_vcu_drivests_0x10a_10a::has_vcu_axlespd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_vcu_drivests_0x10a_10a::set_has_vcu_axlespd() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_vcu_drivests_0x10a_10a::clear_has_vcu_axlespd() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_vcu_drivests_0x10a_10a::clear_vcu_axlespd() {
  vcu_axlespd_ = 0;
  clear_has_vcu_axlespd();
}
double Gw_vcu_drivests_0x10a_10a::vcu_axlespd() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_axlespd)
  return vcu_axlespd_;
}
void Gw_vcu_drivests_0x10a_10a::set_vcu_axlespd(double value) {
  set_has_vcu_axlespd();
  vcu_axlespd_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a.vcu_axlespd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adu_controlbrake_0x110_110::kIcChecksum0X110FieldNumber;
const int Adu_controlbrake_0x110_110::kIcRollingCounter0X110FieldNumber;
const int Adu_controlbrake_0x110_110::kAduTgtDecelerationFieldNumber;
const int Adu_controlbrake_0x110_110::kAduBrktmcpositionReqFieldNumber;
const int Adu_controlbrake_0x110_110::kAduParkreleaseReqFieldNumber;
const int Adu_controlbrake_0x110_110::kAduControbrkStandstillFieldNumber;
const int Adu_controlbrake_0x110_110::kAduControbrkEnableFieldNumber;
const int Adu_controlbrake_0x110_110::kAduMastercylinderpressreqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adu_controlbrake_0x110_110::Adu_controlbrake_0x110_110()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Adu_controlbrake_0x110_110)
}
Adu_controlbrake_0x110_110::Adu_controlbrake_0x110_110(const Adu_controlbrake_0x110_110& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ic_checksum_0x110_, &from.ic_checksum_0x110_,
    reinterpret_cast<char*>(&adu_mastercylinderpressreq_) -
    reinterpret_cast<char*>(&ic_checksum_0x110_) + sizeof(adu_mastercylinderpressreq_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Adu_controlbrake_0x110_110)
}

void Adu_controlbrake_0x110_110::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ic_checksum_0x110_, 0, reinterpret_cast<char*>(&adu_mastercylinderpressreq_) -
    reinterpret_cast<char*>(&ic_checksum_0x110_) + sizeof(adu_mastercylinderpressreq_));
}

Adu_controlbrake_0x110_110::~Adu_controlbrake_0x110_110() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  SharedDtor();
}

void Adu_controlbrake_0x110_110::SharedDtor() {
}

void Adu_controlbrake_0x110_110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Adu_controlbrake_0x110_110::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adu_controlbrake_0x110_110& Adu_controlbrake_0x110_110::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Adu_controlbrake_0x110_110* Adu_controlbrake_0x110_110::New(::google::protobuf::Arena* arena) const {
  Adu_controlbrake_0x110_110* n = new Adu_controlbrake_0x110_110;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Adu_controlbrake_0x110_110::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&ic_checksum_0x110_, 0, reinterpret_cast<char*>(&adu_mastercylinderpressreq_) -
      reinterpret_cast<char*>(&ic_checksum_0x110_) + sizeof(adu_mastercylinderpressreq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adu_controlbrake_0x110_110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ic_checksum_0x110 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ic_checksum_0x110();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ic_checksum_0x110_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ic_rolling_counter_0x110 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_ic_rolling_counter_0x110();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ic_rolling_counter_0x110_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adu_tgt_deceleration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_adu_tgt_deceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adu_tgt_deceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adu_brktmcposition_req = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_adu_brktmcposition_req();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adu_brktmcposition_req_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_parkrelease_reqType adu_parkrelease_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType_IsValid(value)) {
            set_adu_parkrelease_req(static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_standstillType adu_controbrk_standstill = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType_IsValid(value)) {
            set_adu_controbrk_standstill(static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_enableType adu_controbrk_enable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType_IsValid(value)) {
            set_adu_controbrk_enable(static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adu_mastercylinderpressreq = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_adu_mastercylinderpressreq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adu_mastercylinderpressreq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  return false;
#undef DO_
}

void Adu_controlbrake_0x110_110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ic_checksum_0x110 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ic_checksum_0x110(), output);
  }

  // optional int32 ic_rolling_counter_0x110 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ic_rolling_counter_0x110(), output);
  }

  // optional double adu_tgt_deceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->adu_tgt_deceleration(), output);
  }

  // optional double adu_brktmcposition_req = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->adu_brktmcposition_req(), output);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_parkrelease_reqType adu_parkrelease_req = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->adu_parkrelease_req(), output);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_standstillType adu_controbrk_standstill = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->adu_controbrk_standstill(), output);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_enableType adu_controbrk_enable = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->adu_controbrk_enable(), output);
  }

  // optional int32 adu_mastercylinderpressreq = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->adu_mastercylinderpressreq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Adu_controlbrake_0x110_110)
}

::google::protobuf::uint8* Adu_controlbrake_0x110_110::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 ic_checksum_0x110 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ic_checksum_0x110(), target);
  }

  // optional int32 ic_rolling_counter_0x110 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ic_rolling_counter_0x110(), target);
  }

  // optional double adu_tgt_deceleration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->adu_tgt_deceleration(), target);
  }

  // optional double adu_brktmcposition_req = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->adu_brktmcposition_req(), target);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_parkrelease_reqType adu_parkrelease_req = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->adu_parkrelease_req(), target);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_standstillType adu_controbrk_standstill = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->adu_controbrk_standstill(), target);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_enableType adu_controbrk_enable = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->adu_controbrk_enable(), target);
  }

  // optional int32 adu_mastercylinderpressreq = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->adu_mastercylinderpressreq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  return target;
}

size_t Adu_controlbrake_0x110_110::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 ic_checksum_0x110 = 1;
    if (has_ic_checksum_0x110()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ic_checksum_0x110());
    }

    // optional int32 ic_rolling_counter_0x110 = 2;
    if (has_ic_rolling_counter_0x110()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ic_rolling_counter_0x110());
    }

    // optional double adu_tgt_deceleration = 3;
    if (has_adu_tgt_deceleration()) {
      total_size += 1 + 8;
    }

    // optional double adu_brktmcposition_req = 4;
    if (has_adu_brktmcposition_req()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_parkrelease_reqType adu_parkrelease_req = 5;
    if (has_adu_parkrelease_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_parkrelease_req());
    }

    // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_standstillType adu_controbrk_standstill = 6;
    if (has_adu_controbrk_standstill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_controbrk_standstill());
    }

    // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_enableType adu_controbrk_enable = 7;
    if (has_adu_controbrk_enable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_controbrk_enable());
    }

    // optional int32 adu_mastercylinderpressreq = 8;
    if (has_adu_mastercylinderpressreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adu_mastercylinderpressreq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Adu_controlbrake_0x110_110::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  GOOGLE_DCHECK_NE(&from, this);
  const Adu_controlbrake_0x110_110* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adu_controlbrake_0x110_110>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Adu_controlbrake_0x110_110)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Adu_controlbrake_0x110_110)
    MergeFrom(*source);
  }
}

void Adu_controlbrake_0x110_110::MergeFrom(const Adu_controlbrake_0x110_110& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      ic_checksum_0x110_ = from.ic_checksum_0x110_;
    }
    if (cached_has_bits & 0x00000002u) {
      ic_rolling_counter_0x110_ = from.ic_rolling_counter_0x110_;
    }
    if (cached_has_bits & 0x00000004u) {
      adu_tgt_deceleration_ = from.adu_tgt_deceleration_;
    }
    if (cached_has_bits & 0x00000008u) {
      adu_brktmcposition_req_ = from.adu_brktmcposition_req_;
    }
    if (cached_has_bits & 0x00000010u) {
      adu_parkrelease_req_ = from.adu_parkrelease_req_;
    }
    if (cached_has_bits & 0x00000020u) {
      adu_controbrk_standstill_ = from.adu_controbrk_standstill_;
    }
    if (cached_has_bits & 0x00000040u) {
      adu_controbrk_enable_ = from.adu_controbrk_enable_;
    }
    if (cached_has_bits & 0x00000080u) {
      adu_mastercylinderpressreq_ = from.adu_mastercylinderpressreq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adu_controlbrake_0x110_110::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adu_controlbrake_0x110_110::CopyFrom(const Adu_controlbrake_0x110_110& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Adu_controlbrake_0x110_110)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adu_controlbrake_0x110_110::IsInitialized() const {
  return true;
}

void Adu_controlbrake_0x110_110::Swap(Adu_controlbrake_0x110_110* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adu_controlbrake_0x110_110::InternalSwap(Adu_controlbrake_0x110_110* other) {
  std::swap(ic_checksum_0x110_, other->ic_checksum_0x110_);
  std::swap(ic_rolling_counter_0x110_, other->ic_rolling_counter_0x110_);
  std::swap(adu_tgt_deceleration_, other->adu_tgt_deceleration_);
  std::swap(adu_brktmcposition_req_, other->adu_brktmcposition_req_);
  std::swap(adu_parkrelease_req_, other->adu_parkrelease_req_);
  std::swap(adu_controbrk_standstill_, other->adu_controbrk_standstill_);
  std::swap(adu_controbrk_enable_, other->adu_controbrk_enable_);
  std::swap(adu_mastercylinderpressreq_, other->adu_mastercylinderpressreq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Adu_controlbrake_0x110_110::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Adu_controlbrake_0x110_110

// optional int32 ic_checksum_0x110 = 1;
bool Adu_controlbrake_0x110_110::has_ic_checksum_0x110() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_ic_checksum_0x110() {
  _has_bits_[0] |= 0x00000001u;
}
void Adu_controlbrake_0x110_110::clear_has_ic_checksum_0x110() {
  _has_bits_[0] &= ~0x00000001u;
}
void Adu_controlbrake_0x110_110::clear_ic_checksum_0x110() {
  ic_checksum_0x110_ = 0;
  clear_has_ic_checksum_0x110();
}
::google::protobuf::int32 Adu_controlbrake_0x110_110::ic_checksum_0x110() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.ic_checksum_0x110)
  return ic_checksum_0x110_;
}
void Adu_controlbrake_0x110_110::set_ic_checksum_0x110(::google::protobuf::int32 value) {
  set_has_ic_checksum_0x110();
  ic_checksum_0x110_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.ic_checksum_0x110)
}

// optional int32 ic_rolling_counter_0x110 = 2;
bool Adu_controlbrake_0x110_110::has_ic_rolling_counter_0x110() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_ic_rolling_counter_0x110() {
  _has_bits_[0] |= 0x00000002u;
}
void Adu_controlbrake_0x110_110::clear_has_ic_rolling_counter_0x110() {
  _has_bits_[0] &= ~0x00000002u;
}
void Adu_controlbrake_0x110_110::clear_ic_rolling_counter_0x110() {
  ic_rolling_counter_0x110_ = 0;
  clear_has_ic_rolling_counter_0x110();
}
::google::protobuf::int32 Adu_controlbrake_0x110_110::ic_rolling_counter_0x110() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.ic_rolling_counter_0x110)
  return ic_rolling_counter_0x110_;
}
void Adu_controlbrake_0x110_110::set_ic_rolling_counter_0x110(::google::protobuf::int32 value) {
  set_has_ic_rolling_counter_0x110();
  ic_rolling_counter_0x110_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.ic_rolling_counter_0x110)
}

// optional double adu_tgt_deceleration = 3;
bool Adu_controlbrake_0x110_110::has_adu_tgt_deceleration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_tgt_deceleration() {
  _has_bits_[0] |= 0x00000004u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_tgt_deceleration() {
  _has_bits_[0] &= ~0x00000004u;
}
void Adu_controlbrake_0x110_110::clear_adu_tgt_deceleration() {
  adu_tgt_deceleration_ = 0;
  clear_has_adu_tgt_deceleration();
}
double Adu_controlbrake_0x110_110::adu_tgt_deceleration() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_tgt_deceleration)
  return adu_tgt_deceleration_;
}
void Adu_controlbrake_0x110_110::set_adu_tgt_deceleration(double value) {
  set_has_adu_tgt_deceleration();
  adu_tgt_deceleration_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_tgt_deceleration)
}

// optional double adu_brktmcposition_req = 4;
bool Adu_controlbrake_0x110_110::has_adu_brktmcposition_req() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_brktmcposition_req() {
  _has_bits_[0] |= 0x00000008u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_brktmcposition_req() {
  _has_bits_[0] &= ~0x00000008u;
}
void Adu_controlbrake_0x110_110::clear_adu_brktmcposition_req() {
  adu_brktmcposition_req_ = 0;
  clear_has_adu_brktmcposition_req();
}
double Adu_controlbrake_0x110_110::adu_brktmcposition_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_brktmcposition_req)
  return adu_brktmcposition_req_;
}
void Adu_controlbrake_0x110_110::set_adu_brktmcposition_req(double value) {
  set_has_adu_brktmcposition_req();
  adu_brktmcposition_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_brktmcposition_req)
}

// optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_parkrelease_reqType adu_parkrelease_req = 5;
bool Adu_controlbrake_0x110_110::has_adu_parkrelease_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_parkrelease_req() {
  _has_bits_[0] |= 0x00000010u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_parkrelease_req() {
  _has_bits_[0] &= ~0x00000010u;
}
void Adu_controlbrake_0x110_110::clear_adu_parkrelease_req() {
  adu_parkrelease_req_ = 0;
  clear_has_adu_parkrelease_req();
}
::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType Adu_controlbrake_0x110_110::adu_parkrelease_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_parkrelease_req)
  return static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType >(adu_parkrelease_req_);
}
void Adu_controlbrake_0x110_110::set_adu_parkrelease_req(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType value) {
  assert(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_parkrelease_reqType_IsValid(value));
  set_has_adu_parkrelease_req();
  adu_parkrelease_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_parkrelease_req)
}

// optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_standstillType adu_controbrk_standstill = 6;
bool Adu_controlbrake_0x110_110::has_adu_controbrk_standstill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_controbrk_standstill() {
  _has_bits_[0] |= 0x00000020u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_controbrk_standstill() {
  _has_bits_[0] &= ~0x00000020u;
}
void Adu_controlbrake_0x110_110::clear_adu_controbrk_standstill() {
  adu_controbrk_standstill_ = 0;
  clear_has_adu_controbrk_standstill();
}
::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType Adu_controlbrake_0x110_110::adu_controbrk_standstill() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_controbrk_standstill)
  return static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType >(adu_controbrk_standstill_);
}
void Adu_controlbrake_0x110_110::set_adu_controbrk_standstill(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType value) {
  assert(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_standstillType_IsValid(value));
  set_has_adu_controbrk_standstill();
  adu_controbrk_standstill_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_controbrk_standstill)
}

// optional .jmc_auto.canbus.Adu_controlbrake_0x110_110.Adu_controbrk_enableType adu_controbrk_enable = 7;
bool Adu_controlbrake_0x110_110::has_adu_controbrk_enable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_controbrk_enable() {
  _has_bits_[0] |= 0x00000040u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_controbrk_enable() {
  _has_bits_[0] &= ~0x00000040u;
}
void Adu_controlbrake_0x110_110::clear_adu_controbrk_enable() {
  adu_controbrk_enable_ = 0;
  clear_has_adu_controbrk_enable();
}
::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType Adu_controlbrake_0x110_110::adu_controbrk_enable() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_controbrk_enable)
  return static_cast< ::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType >(adu_controbrk_enable_);
}
void Adu_controlbrake_0x110_110::set_adu_controbrk_enable(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType value) {
  assert(::jmc_auto::canbus::Adu_controlbrake_0x110_110_Adu_controbrk_enableType_IsValid(value));
  set_has_adu_controbrk_enable();
  adu_controbrk_enable_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_controbrk_enable)
}

// optional int32 adu_mastercylinderpressreq = 8;
bool Adu_controlbrake_0x110_110::has_adu_mastercylinderpressreq() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Adu_controlbrake_0x110_110::set_has_adu_mastercylinderpressreq() {
  _has_bits_[0] |= 0x00000080u;
}
void Adu_controlbrake_0x110_110::clear_has_adu_mastercylinderpressreq() {
  _has_bits_[0] &= ~0x00000080u;
}
void Adu_controlbrake_0x110_110::clear_adu_mastercylinderpressreq() {
  adu_mastercylinderpressreq_ = 0;
  clear_has_adu_mastercylinderpressreq();
}
::google::protobuf::int32 Adu_controlbrake_0x110_110::adu_mastercylinderpressreq() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_mastercylinderpressreq)
  return adu_mastercylinderpressreq_;
}
void Adu_controlbrake_0x110_110::set_adu_mastercylinderpressreq(::google::protobuf::int32 value) {
  set_has_adu_mastercylinderpressreq();
  adu_mastercylinderpressreq_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controlbrake_0x110_110.adu_mastercylinderpressreq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Eps2_status_0x112_112::kEpsControlstatusFieldNumber;
const int Eps2_status_0x112_112::kEpsDriverInterveneFieldNumber;
const int Eps2_status_0x112_112::kEpsSteerwheelrotspdFieldNumber;
const int Eps2_status_0x112_112::kEpsSteeringwheelangFieldNumber;
const int Eps2_status_0x112_112::kEpsTorsionbartorqueFieldNumber;
const int Eps2_status_0x112_112::kEpsSasfailurestsFieldNumber;
const int Eps2_status_0x112_112::kEpsTorsionbartorquedirFieldNumber;
const int Eps2_status_0x112_112::kEpsTorsionbartorquevalidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Eps2_status_0x112_112::Eps2_status_0x112_112()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Eps2_status_0x112_112)
}
Eps2_status_0x112_112::Eps2_status_0x112_112(const Eps2_status_0x112_112& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eps_controlstatus_, &from.eps_controlstatus_,
    reinterpret_cast<char*>(&eps_torsionbartorquevalid_) -
    reinterpret_cast<char*>(&eps_controlstatus_) + sizeof(eps_torsionbartorquevalid_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Eps2_status_0x112_112)
}

void Eps2_status_0x112_112::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&eps_controlstatus_, 0, reinterpret_cast<char*>(&eps_torsionbartorquevalid_) -
    reinterpret_cast<char*>(&eps_controlstatus_) + sizeof(eps_torsionbartorquevalid_));
}

Eps2_status_0x112_112::~Eps2_status_0x112_112() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Eps2_status_0x112_112)
  SharedDtor();
}

void Eps2_status_0x112_112::SharedDtor() {
}

void Eps2_status_0x112_112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Eps2_status_0x112_112::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Eps2_status_0x112_112& Eps2_status_0x112_112::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Eps2_status_0x112_112* Eps2_status_0x112_112::New(::google::protobuf::Arena* arena) const {
  Eps2_status_0x112_112* n = new Eps2_status_0x112_112;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Eps2_status_0x112_112::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Eps2_status_0x112_112)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&eps_controlstatus_, 0, reinterpret_cast<char*>(&eps_torsionbartorquevalid_) -
      reinterpret_cast<char*>(&eps_controlstatus_) + sizeof(eps_torsionbartorquevalid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Eps2_status_0x112_112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Eps2_status_0x112_112)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_controlstatusType eps_controlstatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType_IsValid(value)) {
            set_eps_controlstatus(static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_driver_interveneType eps_driver_intervene = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType_IsValid(value)) {
            set_eps_driver_intervene(static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eps_steerwheelrotspd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_eps_steerwheelrotspd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eps_steerwheelrotspd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double eps_steeringwheelang = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_eps_steeringwheelang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &eps_steeringwheelang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double eps_torsionbartorque = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_eps_torsionbartorque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &eps_torsionbartorque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_sasfailurestsType eps_sasfailurests = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType_IsValid(value)) {
            set_eps_sasfailurests(static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquedirType eps_torsionbartorquedir = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType_IsValid(value)) {
            set_eps_torsionbartorquedir(static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquevalidType eps_torsionbartorquevalid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType_IsValid(value)) {
            set_eps_torsionbartorquevalid(static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Eps2_status_0x112_112)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Eps2_status_0x112_112)
  return false;
#undef DO_
}

void Eps2_status_0x112_112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Eps2_status_0x112_112)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_controlstatusType eps_controlstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eps_controlstatus(), output);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_driver_interveneType eps_driver_intervene = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->eps_driver_intervene(), output);
  }

  // optional int32 eps_steerwheelrotspd = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eps_steerwheelrotspd(), output);
  }

  // optional double eps_steeringwheelang = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->eps_steeringwheelang(), output);
  }

  // optional double eps_torsionbartorque = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->eps_torsionbartorque(), output);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_sasfailurestsType eps_sasfailurests = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->eps_sasfailurests(), output);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquedirType eps_torsionbartorquedir = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->eps_torsionbartorquedir(), output);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquevalidType eps_torsionbartorquevalid = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->eps_torsionbartorquevalid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Eps2_status_0x112_112)
}

::google::protobuf::uint8* Eps2_status_0x112_112::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Eps2_status_0x112_112)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_controlstatusType eps_controlstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eps_controlstatus(), target);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_driver_interveneType eps_driver_intervene = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->eps_driver_intervene(), target);
  }

  // optional int32 eps_steerwheelrotspd = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eps_steerwheelrotspd(), target);
  }

  // optional double eps_steeringwheelang = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->eps_steeringwheelang(), target);
  }

  // optional double eps_torsionbartorque = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->eps_torsionbartorque(), target);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_sasfailurestsType eps_sasfailurests = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->eps_sasfailurests(), target);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquedirType eps_torsionbartorquedir = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->eps_torsionbartorquedir(), target);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquevalidType eps_torsionbartorquevalid = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->eps_torsionbartorquevalid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Eps2_status_0x112_112)
  return target;
}

size_t Eps2_status_0x112_112::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Eps2_status_0x112_112)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_controlstatusType eps_controlstatus = 1;
    if (has_eps_controlstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eps_controlstatus());
    }

    // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_driver_interveneType eps_driver_intervene = 2;
    if (has_eps_driver_intervene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eps_driver_intervene());
    }

    // optional double eps_steeringwheelang = 4;
    if (has_eps_steeringwheelang()) {
      total_size += 1 + 8;
    }

    // optional int32 eps_steerwheelrotspd = 3;
    if (has_eps_steerwheelrotspd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eps_steerwheelrotspd());
    }

    // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_sasfailurestsType eps_sasfailurests = 6;
    if (has_eps_sasfailurests()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eps_sasfailurests());
    }

    // optional double eps_torsionbartorque = 5;
    if (has_eps_torsionbartorque()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquedirType eps_torsionbartorquedir = 7;
    if (has_eps_torsionbartorquedir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eps_torsionbartorquedir());
    }

    // optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquevalidType eps_torsionbartorquevalid = 8;
    if (has_eps_torsionbartorquevalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->eps_torsionbartorquevalid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Eps2_status_0x112_112::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Eps2_status_0x112_112)
  GOOGLE_DCHECK_NE(&from, this);
  const Eps2_status_0x112_112* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Eps2_status_0x112_112>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Eps2_status_0x112_112)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Eps2_status_0x112_112)
    MergeFrom(*source);
  }
}

void Eps2_status_0x112_112::MergeFrom(const Eps2_status_0x112_112& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Eps2_status_0x112_112)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      eps_controlstatus_ = from.eps_controlstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      eps_driver_intervene_ = from.eps_driver_intervene_;
    }
    if (cached_has_bits & 0x00000004u) {
      eps_steeringwheelang_ = from.eps_steeringwheelang_;
    }
    if (cached_has_bits & 0x00000008u) {
      eps_steerwheelrotspd_ = from.eps_steerwheelrotspd_;
    }
    if (cached_has_bits & 0x00000010u) {
      eps_sasfailurests_ = from.eps_sasfailurests_;
    }
    if (cached_has_bits & 0x00000020u) {
      eps_torsionbartorque_ = from.eps_torsionbartorque_;
    }
    if (cached_has_bits & 0x00000040u) {
      eps_torsionbartorquedir_ = from.eps_torsionbartorquedir_;
    }
    if (cached_has_bits & 0x00000080u) {
      eps_torsionbartorquevalid_ = from.eps_torsionbartorquevalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Eps2_status_0x112_112::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Eps2_status_0x112_112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Eps2_status_0x112_112::CopyFrom(const Eps2_status_0x112_112& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Eps2_status_0x112_112)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Eps2_status_0x112_112::IsInitialized() const {
  return true;
}

void Eps2_status_0x112_112::Swap(Eps2_status_0x112_112* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Eps2_status_0x112_112::InternalSwap(Eps2_status_0x112_112* other) {
  std::swap(eps_controlstatus_, other->eps_controlstatus_);
  std::swap(eps_driver_intervene_, other->eps_driver_intervene_);
  std::swap(eps_steeringwheelang_, other->eps_steeringwheelang_);
  std::swap(eps_steerwheelrotspd_, other->eps_steerwheelrotspd_);
  std::swap(eps_sasfailurests_, other->eps_sasfailurests_);
  std::swap(eps_torsionbartorque_, other->eps_torsionbartorque_);
  std::swap(eps_torsionbartorquedir_, other->eps_torsionbartorquedir_);
  std::swap(eps_torsionbartorquevalid_, other->eps_torsionbartorquevalid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Eps2_status_0x112_112::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Eps2_status_0x112_112

// optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_controlstatusType eps_controlstatus = 1;
bool Eps2_status_0x112_112::has_eps_controlstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_controlstatus() {
  _has_bits_[0] |= 0x00000001u;
}
void Eps2_status_0x112_112::clear_has_eps_controlstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
void Eps2_status_0x112_112::clear_eps_controlstatus() {
  eps_controlstatus_ = 0;
  clear_has_eps_controlstatus();
}
::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType Eps2_status_0x112_112::eps_controlstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_controlstatus)
  return static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType >(eps_controlstatus_);
}
void Eps2_status_0x112_112::set_eps_controlstatus(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType value) {
  assert(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_controlstatusType_IsValid(value));
  set_has_eps_controlstatus();
  eps_controlstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_controlstatus)
}

// optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_driver_interveneType eps_driver_intervene = 2;
bool Eps2_status_0x112_112::has_eps_driver_intervene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_driver_intervene() {
  _has_bits_[0] |= 0x00000002u;
}
void Eps2_status_0x112_112::clear_has_eps_driver_intervene() {
  _has_bits_[0] &= ~0x00000002u;
}
void Eps2_status_0x112_112::clear_eps_driver_intervene() {
  eps_driver_intervene_ = 0;
  clear_has_eps_driver_intervene();
}
::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType Eps2_status_0x112_112::eps_driver_intervene() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_driver_intervene)
  return static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType >(eps_driver_intervene_);
}
void Eps2_status_0x112_112::set_eps_driver_intervene(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType value) {
  assert(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_driver_interveneType_IsValid(value));
  set_has_eps_driver_intervene();
  eps_driver_intervene_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_driver_intervene)
}

// optional int32 eps_steerwheelrotspd = 3;
bool Eps2_status_0x112_112::has_eps_steerwheelrotspd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_steerwheelrotspd() {
  _has_bits_[0] |= 0x00000008u;
}
void Eps2_status_0x112_112::clear_has_eps_steerwheelrotspd() {
  _has_bits_[0] &= ~0x00000008u;
}
void Eps2_status_0x112_112::clear_eps_steerwheelrotspd() {
  eps_steerwheelrotspd_ = 0;
  clear_has_eps_steerwheelrotspd();
}
::google::protobuf::int32 Eps2_status_0x112_112::eps_steerwheelrotspd() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_steerwheelrotspd)
  return eps_steerwheelrotspd_;
}
void Eps2_status_0x112_112::set_eps_steerwheelrotspd(::google::protobuf::int32 value) {
  set_has_eps_steerwheelrotspd();
  eps_steerwheelrotspd_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_steerwheelrotspd)
}

// optional double eps_steeringwheelang = 4;
bool Eps2_status_0x112_112::has_eps_steeringwheelang() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_steeringwheelang() {
  _has_bits_[0] |= 0x00000004u;
}
void Eps2_status_0x112_112::clear_has_eps_steeringwheelang() {
  _has_bits_[0] &= ~0x00000004u;
}
void Eps2_status_0x112_112::clear_eps_steeringwheelang() {
  eps_steeringwheelang_ = 0;
  clear_has_eps_steeringwheelang();
}
double Eps2_status_0x112_112::eps_steeringwheelang() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_steeringwheelang)
  return eps_steeringwheelang_;
}
void Eps2_status_0x112_112::set_eps_steeringwheelang(double value) {
  set_has_eps_steeringwheelang();
  eps_steeringwheelang_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_steeringwheelang)
}

// optional double eps_torsionbartorque = 5;
bool Eps2_status_0x112_112::has_eps_torsionbartorque() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_torsionbartorque() {
  _has_bits_[0] |= 0x00000020u;
}
void Eps2_status_0x112_112::clear_has_eps_torsionbartorque() {
  _has_bits_[0] &= ~0x00000020u;
}
void Eps2_status_0x112_112::clear_eps_torsionbartorque() {
  eps_torsionbartorque_ = 0;
  clear_has_eps_torsionbartorque();
}
double Eps2_status_0x112_112::eps_torsionbartorque() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorque)
  return eps_torsionbartorque_;
}
void Eps2_status_0x112_112::set_eps_torsionbartorque(double value) {
  set_has_eps_torsionbartorque();
  eps_torsionbartorque_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorque)
}

// optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_sasfailurestsType eps_sasfailurests = 6;
bool Eps2_status_0x112_112::has_eps_sasfailurests() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_sasfailurests() {
  _has_bits_[0] |= 0x00000010u;
}
void Eps2_status_0x112_112::clear_has_eps_sasfailurests() {
  _has_bits_[0] &= ~0x00000010u;
}
void Eps2_status_0x112_112::clear_eps_sasfailurests() {
  eps_sasfailurests_ = 0;
  clear_has_eps_sasfailurests();
}
::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType Eps2_status_0x112_112::eps_sasfailurests() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_sasfailurests)
  return static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType >(eps_sasfailurests_);
}
void Eps2_status_0x112_112::set_eps_sasfailurests(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType value) {
  assert(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_sasfailurestsType_IsValid(value));
  set_has_eps_sasfailurests();
  eps_sasfailurests_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_sasfailurests)
}

// optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquedirType eps_torsionbartorquedir = 7;
bool Eps2_status_0x112_112::has_eps_torsionbartorquedir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_torsionbartorquedir() {
  _has_bits_[0] |= 0x00000040u;
}
void Eps2_status_0x112_112::clear_has_eps_torsionbartorquedir() {
  _has_bits_[0] &= ~0x00000040u;
}
void Eps2_status_0x112_112::clear_eps_torsionbartorquedir() {
  eps_torsionbartorquedir_ = 0;
  clear_has_eps_torsionbartorquedir();
}
::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType Eps2_status_0x112_112::eps_torsionbartorquedir() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorquedir)
  return static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType >(eps_torsionbartorquedir_);
}
void Eps2_status_0x112_112::set_eps_torsionbartorquedir(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType value) {
  assert(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquedirType_IsValid(value));
  set_has_eps_torsionbartorquedir();
  eps_torsionbartorquedir_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorquedir)
}

// optional .jmc_auto.canbus.Eps2_status_0x112_112.Eps_torsionbartorquevalidType eps_torsionbartorquevalid = 8;
bool Eps2_status_0x112_112::has_eps_torsionbartorquevalid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Eps2_status_0x112_112::set_has_eps_torsionbartorquevalid() {
  _has_bits_[0] |= 0x00000080u;
}
void Eps2_status_0x112_112::clear_has_eps_torsionbartorquevalid() {
  _has_bits_[0] &= ~0x00000080u;
}
void Eps2_status_0x112_112::clear_eps_torsionbartorquevalid() {
  eps_torsionbartorquevalid_ = 0;
  clear_has_eps_torsionbartorquevalid();
}
::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType Eps2_status_0x112_112::eps_torsionbartorquevalid() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorquevalid)
  return static_cast< ::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType >(eps_torsionbartorquevalid_);
}
void Eps2_status_0x112_112::set_eps_torsionbartorquevalid(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType value) {
  assert(::jmc_auto::canbus::Eps2_status_0x112_112_Eps_torsionbartorquevalidType_IsValid(value));
  set_has_eps_torsionbartorquevalid();
  eps_torsionbartorquevalid_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Eps2_status_0x112_112.eps_torsionbartorquevalid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_mcu_power_0x226_226::kChecksum0X226FieldNumber;
const int Gw_mcu_power_0x226_226::kRollingCounter0X226FieldNumber;
const int Gw_mcu_power_0x226_226::kMcuSerialnumEstFieldNumber;
const int Gw_mcu_power_0x226_226::kMcuTm04TrqmindynFieldNumber;
const int Gw_mcu_power_0x226_226::kMcuTm04TrqmaxdynFieldNumber;
const int Gw_mcu_power_0x226_226::kMcuMaxtrqEstFieldNumber;
const int Gw_mcu_power_0x226_226::kMcuMintrqEstFieldNumber;
const int Gw_mcu_power_0x226_226::kMcuSysStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_mcu_power_0x226_226::Gw_mcu_power_0x226_226()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_mcu_power_0x226_226)
}
Gw_mcu_power_0x226_226::Gw_mcu_power_0x226_226(const Gw_mcu_power_0x226_226& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x226_, &from.checksum_0x226_,
    reinterpret_cast<char*>(&mcu_sys_sts_) -
    reinterpret_cast<char*>(&checksum_0x226_) + sizeof(mcu_sys_sts_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_mcu_power_0x226_226)
}

void Gw_mcu_power_0x226_226::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x226_, 0, reinterpret_cast<char*>(&mcu_sys_sts_) -
    reinterpret_cast<char*>(&checksum_0x226_) + sizeof(mcu_sys_sts_));
}

Gw_mcu_power_0x226_226::~Gw_mcu_power_0x226_226() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  SharedDtor();
}

void Gw_mcu_power_0x226_226::SharedDtor() {
}

void Gw_mcu_power_0x226_226::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_mcu_power_0x226_226::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_mcu_power_0x226_226& Gw_mcu_power_0x226_226::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_mcu_power_0x226_226* Gw_mcu_power_0x226_226::New(::google::protobuf::Arena* arena) const {
  Gw_mcu_power_0x226_226* n = new Gw_mcu_power_0x226_226;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_mcu_power_0x226_226::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x226_, 0, reinterpret_cast<char*>(&mcu_sys_sts_) -
      reinterpret_cast<char*>(&checksum_0x226_) + sizeof(mcu_sys_sts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_mcu_power_0x226_226::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x226 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x226();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x226_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x226 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x226();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x226_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool mcu_serialnum_est = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_mcu_serialnum_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mcu_serialnum_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_tm04_trqmindyn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_mcu_tm04_trqmindyn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_tm04_trqmindyn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_tm04_trqmaxdyn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_mcu_tm04_trqmaxdyn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_tm04_trqmaxdyn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_maxtrq_est = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_mcu_maxtrq_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_maxtrq_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_mintrq_est = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_mcu_mintrq_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_mintrq_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226.Mcu_sys_stsType mcu_sys_sts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType_IsValid(value)) {
            set_mcu_sys_sts(static_cast< ::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  return false;
#undef DO_
}

void Gw_mcu_power_0x226_226::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x226 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x226(), output);
  }

  // optional int32 rolling_counter_0x226 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x226(), output);
  }

  // optional bool mcu_serialnum_est = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->mcu_serialnum_est(), output);
  }

  // optional int32 mcu_tm04_trqmindyn = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mcu_tm04_trqmindyn(), output);
  }

  // optional int32 mcu_tm04_trqmaxdyn = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mcu_tm04_trqmaxdyn(), output);
  }

  // optional int32 mcu_maxtrq_est = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mcu_maxtrq_est(), output);
  }

  // optional int32 mcu_mintrq_est = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mcu_mintrq_est(), output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226.Mcu_sys_stsType mcu_sys_sts = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->mcu_sys_sts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_mcu_power_0x226_226)
}

::google::protobuf::uint8* Gw_mcu_power_0x226_226::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x226 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x226(), target);
  }

  // optional int32 rolling_counter_0x226 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x226(), target);
  }

  // optional bool mcu_serialnum_est = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->mcu_serialnum_est(), target);
  }

  // optional int32 mcu_tm04_trqmindyn = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mcu_tm04_trqmindyn(), target);
  }

  // optional int32 mcu_tm04_trqmaxdyn = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mcu_tm04_trqmaxdyn(), target);
  }

  // optional int32 mcu_maxtrq_est = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mcu_maxtrq_est(), target);
  }

  // optional int32 mcu_mintrq_est = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mcu_mintrq_est(), target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226.Mcu_sys_stsType mcu_sys_sts = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->mcu_sys_sts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  return target;
}

size_t Gw_mcu_power_0x226_226::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x226 = 1;
    if (has_checksum_0x226()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x226());
    }

    // optional int32 rolling_counter_0x226 = 2;
    if (has_rolling_counter_0x226()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x226());
    }

    // optional bool mcu_serialnum_est = 3;
    if (has_mcu_serialnum_est()) {
      total_size += 1 + 1;
    }

    // optional int32 mcu_tm04_trqmindyn = 4;
    if (has_mcu_tm04_trqmindyn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_tm04_trqmindyn());
    }

    // optional int32 mcu_tm04_trqmaxdyn = 5;
    if (has_mcu_tm04_trqmaxdyn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_tm04_trqmaxdyn());
    }

    // optional int32 mcu_maxtrq_est = 6;
    if (has_mcu_maxtrq_est()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_maxtrq_est());
    }

    // optional int32 mcu_mintrq_est = 7;
    if (has_mcu_mintrq_est()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_mintrq_est());
    }

    // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226.Mcu_sys_stsType mcu_sys_sts = 8;
    if (has_mcu_sys_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mcu_sys_sts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_mcu_power_0x226_226::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_mcu_power_0x226_226* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_mcu_power_0x226_226>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_mcu_power_0x226_226)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_mcu_power_0x226_226)
    MergeFrom(*source);
  }
}

void Gw_mcu_power_0x226_226::MergeFrom(const Gw_mcu_power_0x226_226& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x226_ = from.checksum_0x226_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x226_ = from.rolling_counter_0x226_;
    }
    if (cached_has_bits & 0x00000004u) {
      mcu_serialnum_est_ = from.mcu_serialnum_est_;
    }
    if (cached_has_bits & 0x00000008u) {
      mcu_tm04_trqmindyn_ = from.mcu_tm04_trqmindyn_;
    }
    if (cached_has_bits & 0x00000010u) {
      mcu_tm04_trqmaxdyn_ = from.mcu_tm04_trqmaxdyn_;
    }
    if (cached_has_bits & 0x00000020u) {
      mcu_maxtrq_est_ = from.mcu_maxtrq_est_;
    }
    if (cached_has_bits & 0x00000040u) {
      mcu_mintrq_est_ = from.mcu_mintrq_est_;
    }
    if (cached_has_bits & 0x00000080u) {
      mcu_sys_sts_ = from.mcu_sys_sts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_mcu_power_0x226_226::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_mcu_power_0x226_226::CopyFrom(const Gw_mcu_power_0x226_226& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_mcu_power_0x226_226)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_mcu_power_0x226_226::IsInitialized() const {
  return true;
}

void Gw_mcu_power_0x226_226::Swap(Gw_mcu_power_0x226_226* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_mcu_power_0x226_226::InternalSwap(Gw_mcu_power_0x226_226* other) {
  std::swap(checksum_0x226_, other->checksum_0x226_);
  std::swap(rolling_counter_0x226_, other->rolling_counter_0x226_);
  std::swap(mcu_serialnum_est_, other->mcu_serialnum_est_);
  std::swap(mcu_tm04_trqmindyn_, other->mcu_tm04_trqmindyn_);
  std::swap(mcu_tm04_trqmaxdyn_, other->mcu_tm04_trqmaxdyn_);
  std::swap(mcu_maxtrq_est_, other->mcu_maxtrq_est_);
  std::swap(mcu_mintrq_est_, other->mcu_mintrq_est_);
  std::swap(mcu_sys_sts_, other->mcu_sys_sts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_mcu_power_0x226_226::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_mcu_power_0x226_226

// optional int32 checksum_0x226 = 1;
bool Gw_mcu_power_0x226_226::has_checksum_0x226() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_checksum_0x226() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_mcu_power_0x226_226::clear_has_checksum_0x226() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_mcu_power_0x226_226::clear_checksum_0x226() {
  checksum_0x226_ = 0;
  clear_has_checksum_0x226();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::checksum_0x226() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.checksum_0x226)
  return checksum_0x226_;
}
void Gw_mcu_power_0x226_226::set_checksum_0x226(::google::protobuf::int32 value) {
  set_has_checksum_0x226();
  checksum_0x226_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.checksum_0x226)
}

// optional int32 rolling_counter_0x226 = 2;
bool Gw_mcu_power_0x226_226::has_rolling_counter_0x226() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_rolling_counter_0x226() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_mcu_power_0x226_226::clear_has_rolling_counter_0x226() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_mcu_power_0x226_226::clear_rolling_counter_0x226() {
  rolling_counter_0x226_ = 0;
  clear_has_rolling_counter_0x226();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::rolling_counter_0x226() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.rolling_counter_0x226)
  return rolling_counter_0x226_;
}
void Gw_mcu_power_0x226_226::set_rolling_counter_0x226(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x226();
  rolling_counter_0x226_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.rolling_counter_0x226)
}

// optional bool mcu_serialnum_est = 3;
bool Gw_mcu_power_0x226_226::has_mcu_serialnum_est() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_serialnum_est() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_serialnum_est() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_mcu_power_0x226_226::clear_mcu_serialnum_est() {
  mcu_serialnum_est_ = false;
  clear_has_mcu_serialnum_est();
}
bool Gw_mcu_power_0x226_226::mcu_serialnum_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_serialnum_est)
  return mcu_serialnum_est_;
}
void Gw_mcu_power_0x226_226::set_mcu_serialnum_est(bool value) {
  set_has_mcu_serialnum_est();
  mcu_serialnum_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_serialnum_est)
}

// optional int32 mcu_tm04_trqmindyn = 4;
bool Gw_mcu_power_0x226_226::has_mcu_tm04_trqmindyn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_tm04_trqmindyn() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_tm04_trqmindyn() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_mcu_power_0x226_226::clear_mcu_tm04_trqmindyn() {
  mcu_tm04_trqmindyn_ = 0;
  clear_has_mcu_tm04_trqmindyn();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::mcu_tm04_trqmindyn() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_tm04_trqmindyn)
  return mcu_tm04_trqmindyn_;
}
void Gw_mcu_power_0x226_226::set_mcu_tm04_trqmindyn(::google::protobuf::int32 value) {
  set_has_mcu_tm04_trqmindyn();
  mcu_tm04_trqmindyn_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_tm04_trqmindyn)
}

// optional int32 mcu_tm04_trqmaxdyn = 5;
bool Gw_mcu_power_0x226_226::has_mcu_tm04_trqmaxdyn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_tm04_trqmaxdyn() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_tm04_trqmaxdyn() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_mcu_power_0x226_226::clear_mcu_tm04_trqmaxdyn() {
  mcu_tm04_trqmaxdyn_ = 0;
  clear_has_mcu_tm04_trqmaxdyn();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::mcu_tm04_trqmaxdyn() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_tm04_trqmaxdyn)
  return mcu_tm04_trqmaxdyn_;
}
void Gw_mcu_power_0x226_226::set_mcu_tm04_trqmaxdyn(::google::protobuf::int32 value) {
  set_has_mcu_tm04_trqmaxdyn();
  mcu_tm04_trqmaxdyn_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_tm04_trqmaxdyn)
}

// optional int32 mcu_maxtrq_est = 6;
bool Gw_mcu_power_0x226_226::has_mcu_maxtrq_est() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_maxtrq_est() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_maxtrq_est() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_mcu_power_0x226_226::clear_mcu_maxtrq_est() {
  mcu_maxtrq_est_ = 0;
  clear_has_mcu_maxtrq_est();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::mcu_maxtrq_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_maxtrq_est)
  return mcu_maxtrq_est_;
}
void Gw_mcu_power_0x226_226::set_mcu_maxtrq_est(::google::protobuf::int32 value) {
  set_has_mcu_maxtrq_est();
  mcu_maxtrq_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_maxtrq_est)
}

// optional int32 mcu_mintrq_est = 7;
bool Gw_mcu_power_0x226_226::has_mcu_mintrq_est() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_mintrq_est() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_mintrq_est() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_mcu_power_0x226_226::clear_mcu_mintrq_est() {
  mcu_mintrq_est_ = 0;
  clear_has_mcu_mintrq_est();
}
::google::protobuf::int32 Gw_mcu_power_0x226_226::mcu_mintrq_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_mintrq_est)
  return mcu_mintrq_est_;
}
void Gw_mcu_power_0x226_226::set_mcu_mintrq_est(::google::protobuf::int32 value) {
  set_has_mcu_mintrq_est();
  mcu_mintrq_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_mintrq_est)
}

// optional .jmc_auto.canbus.Gw_mcu_power_0x226_226.Mcu_sys_stsType mcu_sys_sts = 8;
bool Gw_mcu_power_0x226_226::has_mcu_sys_sts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_mcu_power_0x226_226::set_has_mcu_sys_sts() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_mcu_power_0x226_226::clear_has_mcu_sys_sts() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_mcu_power_0x226_226::clear_mcu_sys_sts() {
  mcu_sys_sts_ = 0;
  clear_has_mcu_sys_sts();
}
::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType Gw_mcu_power_0x226_226::mcu_sys_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_sys_sts)
  return static_cast< ::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType >(mcu_sys_sts_);
}
void Gw_mcu_power_0x226_226::set_mcu_sys_sts(::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType value) {
  assert(::jmc_auto::canbus::Gw_mcu_power_0x226_226_Mcu_sys_stsType_IsValid(value));
  set_has_mcu_sys_sts();
  mcu_sys_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_power_0x226_226.mcu_sys_sts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adu_controleps2_0x100_100::kAdu100HMessagechecksumFieldNumber;
const int Adu_controleps2_0x100_100::kAdu100HMessagecounterFieldNumber;
const int Adu_controleps2_0x100_100::kAduCtrsteeringwheelanglespeedFieldNumber;
const int Adu_controleps2_0x100_100::kAduControsteeringwheelangleFieldNumber;
const int Adu_controleps2_0x100_100::kAduControepsenableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adu_controleps2_0x100_100::Adu_controleps2_0x100_100()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Adu_controleps2_0x100_100)
}
Adu_controleps2_0x100_100::Adu_controleps2_0x100_100(const Adu_controleps2_0x100_100& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adu_100h_messagechecksum_, &from.adu_100h_messagechecksum_,
    reinterpret_cast<char*>(&adu_controepsenable_) -
    reinterpret_cast<char*>(&adu_100h_messagechecksum_) + sizeof(adu_controepsenable_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Adu_controleps2_0x100_100)
}

void Adu_controleps2_0x100_100::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&adu_100h_messagechecksum_, 0, reinterpret_cast<char*>(&adu_controepsenable_) -
    reinterpret_cast<char*>(&adu_100h_messagechecksum_) + sizeof(adu_controepsenable_));
}

Adu_controleps2_0x100_100::~Adu_controleps2_0x100_100() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Adu_controleps2_0x100_100)
  SharedDtor();
}

void Adu_controleps2_0x100_100::SharedDtor() {
}

void Adu_controleps2_0x100_100::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Adu_controleps2_0x100_100::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adu_controleps2_0x100_100& Adu_controleps2_0x100_100::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Adu_controleps2_0x100_100* Adu_controleps2_0x100_100::New(::google::protobuf::Arena* arena) const {
  Adu_controleps2_0x100_100* n = new Adu_controleps2_0x100_100;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Adu_controleps2_0x100_100::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&adu_100h_messagechecksum_, 0, reinterpret_cast<char*>(&adu_controepsenable_) -
      reinterpret_cast<char*>(&adu_100h_messagechecksum_) + sizeof(adu_controepsenable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adu_controleps2_0x100_100::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 adu_100h_messagechecksum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_adu_100h_messagechecksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adu_100h_messagechecksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adu_100h_messagecounter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_adu_100h_messagecounter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adu_100h_messagecounter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 adu_ctrsteeringwheelanglespeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_adu_ctrsteeringwheelanglespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adu_ctrsteeringwheelanglespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double adu_controsteeringwheelangle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_adu_controsteeringwheelangle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adu_controsteeringwheelangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controleps2_0x100_100.Adu_controepsenableType adu_controepsenable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType_IsValid(value)) {
            set_adu_controepsenable(static_cast< ::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Adu_controleps2_0x100_100)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Adu_controleps2_0x100_100)
  return false;
#undef DO_
}

void Adu_controleps2_0x100_100::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 adu_100h_messagechecksum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->adu_100h_messagechecksum(), output);
  }

  // optional int32 adu_100h_messagecounter = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adu_100h_messagecounter(), output);
  }

  // optional int32 adu_ctrsteeringwheelanglespeed = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->adu_ctrsteeringwheelanglespeed(), output);
  }

  // optional double adu_controsteeringwheelangle = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->adu_controsteeringwheelangle(), output);
  }

  // optional .jmc_auto.canbus.Adu_controleps2_0x100_100.Adu_controepsenableType adu_controepsenable = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->adu_controepsenable(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Adu_controleps2_0x100_100)
}

::google::protobuf::uint8* Adu_controleps2_0x100_100::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 adu_100h_messagechecksum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->adu_100h_messagechecksum(), target);
  }

  // optional int32 adu_100h_messagecounter = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adu_100h_messagecounter(), target);
  }

  // optional int32 adu_ctrsteeringwheelanglespeed = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->adu_ctrsteeringwheelanglespeed(), target);
  }

  // optional double adu_controsteeringwheelangle = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->adu_controsteeringwheelangle(), target);
  }

  // optional .jmc_auto.canbus.Adu_controleps2_0x100_100.Adu_controepsenableType adu_controepsenable = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->adu_controepsenable(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Adu_controleps2_0x100_100)
  return target;
}

size_t Adu_controleps2_0x100_100::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 adu_100h_messagechecksum = 1;
    if (has_adu_100h_messagechecksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adu_100h_messagechecksum());
    }

    // optional int32 adu_100h_messagecounter = 2;
    if (has_adu_100h_messagecounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adu_100h_messagecounter());
    }

    // optional double adu_controsteeringwheelangle = 4;
    if (has_adu_controsteeringwheelangle()) {
      total_size += 1 + 8;
    }

    // optional int32 adu_ctrsteeringwheelanglespeed = 3;
    if (has_adu_ctrsteeringwheelanglespeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adu_ctrsteeringwheelanglespeed());
    }

    // optional .jmc_auto.canbus.Adu_controleps2_0x100_100.Adu_controepsenableType adu_controepsenable = 5;
    if (has_adu_controepsenable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_controepsenable());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Adu_controleps2_0x100_100::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  GOOGLE_DCHECK_NE(&from, this);
  const Adu_controleps2_0x100_100* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adu_controleps2_0x100_100>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Adu_controleps2_0x100_100)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Adu_controleps2_0x100_100)
    MergeFrom(*source);
  }
}

void Adu_controleps2_0x100_100::MergeFrom(const Adu_controleps2_0x100_100& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      adu_100h_messagechecksum_ = from.adu_100h_messagechecksum_;
    }
    if (cached_has_bits & 0x00000002u) {
      adu_100h_messagecounter_ = from.adu_100h_messagecounter_;
    }
    if (cached_has_bits & 0x00000004u) {
      adu_controsteeringwheelangle_ = from.adu_controsteeringwheelangle_;
    }
    if (cached_has_bits & 0x00000008u) {
      adu_ctrsteeringwheelanglespeed_ = from.adu_ctrsteeringwheelanglespeed_;
    }
    if (cached_has_bits & 0x00000010u) {
      adu_controepsenable_ = from.adu_controepsenable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adu_controleps2_0x100_100::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adu_controleps2_0x100_100::CopyFrom(const Adu_controleps2_0x100_100& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Adu_controleps2_0x100_100)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adu_controleps2_0x100_100::IsInitialized() const {
  return true;
}

void Adu_controleps2_0x100_100::Swap(Adu_controleps2_0x100_100* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adu_controleps2_0x100_100::InternalSwap(Adu_controleps2_0x100_100* other) {
  std::swap(adu_100h_messagechecksum_, other->adu_100h_messagechecksum_);
  std::swap(adu_100h_messagecounter_, other->adu_100h_messagecounter_);
  std::swap(adu_controsteeringwheelangle_, other->adu_controsteeringwheelangle_);
  std::swap(adu_ctrsteeringwheelanglespeed_, other->adu_ctrsteeringwheelanglespeed_);
  std::swap(adu_controepsenable_, other->adu_controepsenable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Adu_controleps2_0x100_100::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Adu_controleps2_0x100_100

// optional int32 adu_100h_messagechecksum = 1;
bool Adu_controleps2_0x100_100::has_adu_100h_messagechecksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Adu_controleps2_0x100_100::set_has_adu_100h_messagechecksum() {
  _has_bits_[0] |= 0x00000001u;
}
void Adu_controleps2_0x100_100::clear_has_adu_100h_messagechecksum() {
  _has_bits_[0] &= ~0x00000001u;
}
void Adu_controleps2_0x100_100::clear_adu_100h_messagechecksum() {
  adu_100h_messagechecksum_ = 0;
  clear_has_adu_100h_messagechecksum();
}
::google::protobuf::int32 Adu_controleps2_0x100_100::adu_100h_messagechecksum() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_100h_messagechecksum)
  return adu_100h_messagechecksum_;
}
void Adu_controleps2_0x100_100::set_adu_100h_messagechecksum(::google::protobuf::int32 value) {
  set_has_adu_100h_messagechecksum();
  adu_100h_messagechecksum_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_100h_messagechecksum)
}

// optional int32 adu_100h_messagecounter = 2;
bool Adu_controleps2_0x100_100::has_adu_100h_messagecounter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Adu_controleps2_0x100_100::set_has_adu_100h_messagecounter() {
  _has_bits_[0] |= 0x00000002u;
}
void Adu_controleps2_0x100_100::clear_has_adu_100h_messagecounter() {
  _has_bits_[0] &= ~0x00000002u;
}
void Adu_controleps2_0x100_100::clear_adu_100h_messagecounter() {
  adu_100h_messagecounter_ = 0;
  clear_has_adu_100h_messagecounter();
}
::google::protobuf::int32 Adu_controleps2_0x100_100::adu_100h_messagecounter() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_100h_messagecounter)
  return adu_100h_messagecounter_;
}
void Adu_controleps2_0x100_100::set_adu_100h_messagecounter(::google::protobuf::int32 value) {
  set_has_adu_100h_messagecounter();
  adu_100h_messagecounter_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_100h_messagecounter)
}

// optional int32 adu_ctrsteeringwheelanglespeed = 3;
bool Adu_controleps2_0x100_100::has_adu_ctrsteeringwheelanglespeed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Adu_controleps2_0x100_100::set_has_adu_ctrsteeringwheelanglespeed() {
  _has_bits_[0] |= 0x00000008u;
}
void Adu_controleps2_0x100_100::clear_has_adu_ctrsteeringwheelanglespeed() {
  _has_bits_[0] &= ~0x00000008u;
}
void Adu_controleps2_0x100_100::clear_adu_ctrsteeringwheelanglespeed() {
  adu_ctrsteeringwheelanglespeed_ = 0;
  clear_has_adu_ctrsteeringwheelanglespeed();
}
::google::protobuf::int32 Adu_controleps2_0x100_100::adu_ctrsteeringwheelanglespeed() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_ctrsteeringwheelanglespeed)
  return adu_ctrsteeringwheelanglespeed_;
}
void Adu_controleps2_0x100_100::set_adu_ctrsteeringwheelanglespeed(::google::protobuf::int32 value) {
  set_has_adu_ctrsteeringwheelanglespeed();
  adu_ctrsteeringwheelanglespeed_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_ctrsteeringwheelanglespeed)
}

// optional double adu_controsteeringwheelangle = 4;
bool Adu_controleps2_0x100_100::has_adu_controsteeringwheelangle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Adu_controleps2_0x100_100::set_has_adu_controsteeringwheelangle() {
  _has_bits_[0] |= 0x00000004u;
}
void Adu_controleps2_0x100_100::clear_has_adu_controsteeringwheelangle() {
  _has_bits_[0] &= ~0x00000004u;
}
void Adu_controleps2_0x100_100::clear_adu_controsteeringwheelangle() {
  adu_controsteeringwheelangle_ = 0;
  clear_has_adu_controsteeringwheelangle();
}
double Adu_controleps2_0x100_100::adu_controsteeringwheelangle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_controsteeringwheelangle)
  return adu_controsteeringwheelangle_;
}
void Adu_controleps2_0x100_100::set_adu_controsteeringwheelangle(double value) {
  set_has_adu_controsteeringwheelangle();
  adu_controsteeringwheelangle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_controsteeringwheelangle)
}

// optional .jmc_auto.canbus.Adu_controleps2_0x100_100.Adu_controepsenableType adu_controepsenable = 5;
bool Adu_controleps2_0x100_100::has_adu_controepsenable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Adu_controleps2_0x100_100::set_has_adu_controepsenable() {
  _has_bits_[0] |= 0x00000010u;
}
void Adu_controleps2_0x100_100::clear_has_adu_controepsenable() {
  _has_bits_[0] &= ~0x00000010u;
}
void Adu_controleps2_0x100_100::clear_adu_controepsenable() {
  adu_controepsenable_ = 0;
  clear_has_adu_controepsenable();
}
::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType Adu_controleps2_0x100_100::adu_controepsenable() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_controepsenable)
  return static_cast< ::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType >(adu_controepsenable_);
}
void Adu_controleps2_0x100_100::set_adu_controepsenable(::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType value) {
  assert(::jmc_auto::canbus::Adu_controleps2_0x100_100_Adu_controepsenableType_IsValid(value));
  set_has_adu_controepsenable();
  adu_controepsenable_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_controleps2_0x100_100.adu_controepsenable)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_mcu_output_0x225_225::kChecksum0X225FieldNumber;
const int Gw_mcu_output_0x225_225::kRollingCounter0X225FieldNumber;
const int Gw_mcu_output_0x225_225::kMcuWorkStsFieldNumber;
const int Gw_mcu_output_0x225_225::kMcuCtrmodeStsFieldNumber;
const int Gw_mcu_output_0x225_225::kMcuCapacitorStsFieldNumber;
const int Gw_mcu_output_0x225_225::kMcuSpdMeasFieldNumber;
const int Gw_mcu_output_0x225_225::kMcuTrqMeasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_mcu_output_0x225_225::Gw_mcu_output_0x225_225()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_mcu_output_0x225_225)
}
Gw_mcu_output_0x225_225::Gw_mcu_output_0x225_225(const Gw_mcu_output_0x225_225& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x225_, &from.checksum_0x225_,
    reinterpret_cast<char*>(&mcu_trq_meas_) -
    reinterpret_cast<char*>(&checksum_0x225_) + sizeof(mcu_trq_meas_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_mcu_output_0x225_225)
}

void Gw_mcu_output_0x225_225::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x225_, 0, reinterpret_cast<char*>(&mcu_trq_meas_) -
    reinterpret_cast<char*>(&checksum_0x225_) + sizeof(mcu_trq_meas_));
}

Gw_mcu_output_0x225_225::~Gw_mcu_output_0x225_225() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  SharedDtor();
}

void Gw_mcu_output_0x225_225::SharedDtor() {
}

void Gw_mcu_output_0x225_225::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_mcu_output_0x225_225::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_mcu_output_0x225_225& Gw_mcu_output_0x225_225::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_mcu_output_0x225_225* Gw_mcu_output_0x225_225::New(::google::protobuf::Arena* arena) const {
  Gw_mcu_output_0x225_225* n = new Gw_mcu_output_0x225_225;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_mcu_output_0x225_225::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&checksum_0x225_, 0, reinterpret_cast<char*>(&mcu_trq_meas_) -
      reinterpret_cast<char*>(&checksum_0x225_) + sizeof(mcu_trq_meas_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_mcu_output_0x225_225::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x225 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x225();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x225_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x225 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x225();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x225_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_work_stsType mcu_work_sts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType_IsValid(value)) {
            set_mcu_work_sts(static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_ctrmode_stsType mcu_ctrmode_sts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType_IsValid(value)) {
            set_mcu_ctrmode_sts(static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_capacitor_stsType mcu_capacitor_sts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType_IsValid(value)) {
            set_mcu_capacitor_sts(static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_spd_meas = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_mcu_spd_meas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_spd_meas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mcu_trq_meas = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_mcu_trq_meas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mcu_trq_meas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  return false;
#undef DO_
}

void Gw_mcu_output_0x225_225::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x225 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x225(), output);
  }

  // optional int32 rolling_counter_0x225 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x225(), output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_work_stsType mcu_work_sts = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->mcu_work_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_ctrmode_stsType mcu_ctrmode_sts = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mcu_ctrmode_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_capacitor_stsType mcu_capacitor_sts = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mcu_capacitor_sts(), output);
  }

  // optional int32 mcu_spd_meas = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mcu_spd_meas(), output);
  }

  // optional int32 mcu_trq_meas = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mcu_trq_meas(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_mcu_output_0x225_225)
}

::google::protobuf::uint8* Gw_mcu_output_0x225_225::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x225 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x225(), target);
  }

  // optional int32 rolling_counter_0x225 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x225(), target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_work_stsType mcu_work_sts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->mcu_work_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_ctrmode_stsType mcu_ctrmode_sts = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mcu_ctrmode_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_capacitor_stsType mcu_capacitor_sts = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mcu_capacitor_sts(), target);
  }

  // optional int32 mcu_spd_meas = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mcu_spd_meas(), target);
  }

  // optional int32 mcu_trq_meas = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mcu_trq_meas(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  return target;
}

size_t Gw_mcu_output_0x225_225::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 checksum_0x225 = 1;
    if (has_checksum_0x225()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x225());
    }

    // optional int32 rolling_counter_0x225 = 2;
    if (has_rolling_counter_0x225()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x225());
    }

    // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_work_stsType mcu_work_sts = 3;
    if (has_mcu_work_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mcu_work_sts());
    }

    // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_ctrmode_stsType mcu_ctrmode_sts = 4;
    if (has_mcu_ctrmode_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mcu_ctrmode_sts());
    }

    // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_capacitor_stsType mcu_capacitor_sts = 5;
    if (has_mcu_capacitor_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mcu_capacitor_sts());
    }

    // optional int32 mcu_spd_meas = 6;
    if (has_mcu_spd_meas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_spd_meas());
    }

    // optional int32 mcu_trq_meas = 7;
    if (has_mcu_trq_meas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mcu_trq_meas());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_mcu_output_0x225_225::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_mcu_output_0x225_225* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_mcu_output_0x225_225>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_mcu_output_0x225_225)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_mcu_output_0x225_225)
    MergeFrom(*source);
  }
}

void Gw_mcu_output_0x225_225::MergeFrom(const Gw_mcu_output_0x225_225& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x225_ = from.checksum_0x225_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x225_ = from.rolling_counter_0x225_;
    }
    if (cached_has_bits & 0x00000004u) {
      mcu_work_sts_ = from.mcu_work_sts_;
    }
    if (cached_has_bits & 0x00000008u) {
      mcu_ctrmode_sts_ = from.mcu_ctrmode_sts_;
    }
    if (cached_has_bits & 0x00000010u) {
      mcu_capacitor_sts_ = from.mcu_capacitor_sts_;
    }
    if (cached_has_bits & 0x00000020u) {
      mcu_spd_meas_ = from.mcu_spd_meas_;
    }
    if (cached_has_bits & 0x00000040u) {
      mcu_trq_meas_ = from.mcu_trq_meas_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_mcu_output_0x225_225::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_mcu_output_0x225_225::CopyFrom(const Gw_mcu_output_0x225_225& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_mcu_output_0x225_225)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_mcu_output_0x225_225::IsInitialized() const {
  return true;
}

void Gw_mcu_output_0x225_225::Swap(Gw_mcu_output_0x225_225* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_mcu_output_0x225_225::InternalSwap(Gw_mcu_output_0x225_225* other) {
  std::swap(checksum_0x225_, other->checksum_0x225_);
  std::swap(rolling_counter_0x225_, other->rolling_counter_0x225_);
  std::swap(mcu_work_sts_, other->mcu_work_sts_);
  std::swap(mcu_ctrmode_sts_, other->mcu_ctrmode_sts_);
  std::swap(mcu_capacitor_sts_, other->mcu_capacitor_sts_);
  std::swap(mcu_spd_meas_, other->mcu_spd_meas_);
  std::swap(mcu_trq_meas_, other->mcu_trq_meas_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_mcu_output_0x225_225::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_mcu_output_0x225_225

// optional int32 checksum_0x225 = 1;
bool Gw_mcu_output_0x225_225::has_checksum_0x225() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_checksum_0x225() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_mcu_output_0x225_225::clear_has_checksum_0x225() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_mcu_output_0x225_225::clear_checksum_0x225() {
  checksum_0x225_ = 0;
  clear_has_checksum_0x225();
}
::google::protobuf::int32 Gw_mcu_output_0x225_225::checksum_0x225() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.checksum_0x225)
  return checksum_0x225_;
}
void Gw_mcu_output_0x225_225::set_checksum_0x225(::google::protobuf::int32 value) {
  set_has_checksum_0x225();
  checksum_0x225_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.checksum_0x225)
}

// optional int32 rolling_counter_0x225 = 2;
bool Gw_mcu_output_0x225_225::has_rolling_counter_0x225() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_rolling_counter_0x225() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_mcu_output_0x225_225::clear_has_rolling_counter_0x225() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_mcu_output_0x225_225::clear_rolling_counter_0x225() {
  rolling_counter_0x225_ = 0;
  clear_has_rolling_counter_0x225();
}
::google::protobuf::int32 Gw_mcu_output_0x225_225::rolling_counter_0x225() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.rolling_counter_0x225)
  return rolling_counter_0x225_;
}
void Gw_mcu_output_0x225_225::set_rolling_counter_0x225(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x225();
  rolling_counter_0x225_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.rolling_counter_0x225)
}

// optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_work_stsType mcu_work_sts = 3;
bool Gw_mcu_output_0x225_225::has_mcu_work_sts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_mcu_work_sts() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_mcu_output_0x225_225::clear_has_mcu_work_sts() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_mcu_output_0x225_225::clear_mcu_work_sts() {
  mcu_work_sts_ = 0;
  clear_has_mcu_work_sts();
}
::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType Gw_mcu_output_0x225_225::mcu_work_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_work_sts)
  return static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType >(mcu_work_sts_);
}
void Gw_mcu_output_0x225_225::set_mcu_work_sts(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType value) {
  assert(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_work_stsType_IsValid(value));
  set_has_mcu_work_sts();
  mcu_work_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_work_sts)
}

// optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_ctrmode_stsType mcu_ctrmode_sts = 4;
bool Gw_mcu_output_0x225_225::has_mcu_ctrmode_sts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_mcu_ctrmode_sts() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_mcu_output_0x225_225::clear_has_mcu_ctrmode_sts() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_mcu_output_0x225_225::clear_mcu_ctrmode_sts() {
  mcu_ctrmode_sts_ = 0;
  clear_has_mcu_ctrmode_sts();
}
::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType Gw_mcu_output_0x225_225::mcu_ctrmode_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_ctrmode_sts)
  return static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType >(mcu_ctrmode_sts_);
}
void Gw_mcu_output_0x225_225::set_mcu_ctrmode_sts(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType value) {
  assert(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_ctrmode_stsType_IsValid(value));
  set_has_mcu_ctrmode_sts();
  mcu_ctrmode_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_ctrmode_sts)
}

// optional .jmc_auto.canbus.Gw_mcu_output_0x225_225.Mcu_capacitor_stsType mcu_capacitor_sts = 5;
bool Gw_mcu_output_0x225_225::has_mcu_capacitor_sts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_mcu_capacitor_sts() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_mcu_output_0x225_225::clear_has_mcu_capacitor_sts() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_mcu_output_0x225_225::clear_mcu_capacitor_sts() {
  mcu_capacitor_sts_ = 0;
  clear_has_mcu_capacitor_sts();
}
::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType Gw_mcu_output_0x225_225::mcu_capacitor_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_capacitor_sts)
  return static_cast< ::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType >(mcu_capacitor_sts_);
}
void Gw_mcu_output_0x225_225::set_mcu_capacitor_sts(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType value) {
  assert(::jmc_auto::canbus::Gw_mcu_output_0x225_225_Mcu_capacitor_stsType_IsValid(value));
  set_has_mcu_capacitor_sts();
  mcu_capacitor_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_capacitor_sts)
}

// optional int32 mcu_spd_meas = 6;
bool Gw_mcu_output_0x225_225::has_mcu_spd_meas() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_mcu_spd_meas() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_mcu_output_0x225_225::clear_has_mcu_spd_meas() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_mcu_output_0x225_225::clear_mcu_spd_meas() {
  mcu_spd_meas_ = 0;
  clear_has_mcu_spd_meas();
}
::google::protobuf::int32 Gw_mcu_output_0x225_225::mcu_spd_meas() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_spd_meas)
  return mcu_spd_meas_;
}
void Gw_mcu_output_0x225_225::set_mcu_spd_meas(::google::protobuf::int32 value) {
  set_has_mcu_spd_meas();
  mcu_spd_meas_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_spd_meas)
}

// optional int32 mcu_trq_meas = 7;
bool Gw_mcu_output_0x225_225::has_mcu_trq_meas() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_mcu_output_0x225_225::set_has_mcu_trq_meas() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_mcu_output_0x225_225::clear_has_mcu_trq_meas() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_mcu_output_0x225_225::clear_mcu_trq_meas() {
  mcu_trq_meas_ = 0;
  clear_has_mcu_trq_meas();
}
::google::protobuf::int32 Gw_mcu_output_0x225_225::mcu_trq_meas() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_trq_meas)
  return mcu_trq_meas_;
}
void Gw_mcu_output_0x225_225::set_mcu_trq_meas(::google::protobuf::int32 value) {
  set_has_mcu_trq_meas();
  mcu_trq_meas_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_mcu_output_0x225_225.mcu_trq_meas)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_abs_sts_0x221_221::kChecksum0X221FieldNumber;
const int Gw_abs_sts_0x221_221::kRollingCounter0X221FieldNumber;
const int Gw_abs_sts_0x221_221::kAbsWhlmilgfrntlestatusFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsWhlmilgfrntristatusFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsVehspdlgtstatusFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsVehspddirectionFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsVehspdlgtFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsEbdflgfltFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsAbsflgfltFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsAbsctrlactvFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsWhlmilgfrntriFieldNumber;
const int Gw_abs_sts_0x221_221::kAbsWhlmilgfrntleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_abs_sts_0x221_221::Gw_abs_sts_0x221_221()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_abs_sts_0x221_221)
}
Gw_abs_sts_0x221_221::Gw_abs_sts_0x221_221(const Gw_abs_sts_0x221_221& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x221_, &from.checksum_0x221_,
    reinterpret_cast<char*>(&abs_whlmilgfrntle_) -
    reinterpret_cast<char*>(&checksum_0x221_) + sizeof(abs_whlmilgfrntle_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_abs_sts_0x221_221)
}

void Gw_abs_sts_0x221_221::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x221_, 0, reinterpret_cast<char*>(&abs_whlmilgfrntle_) -
    reinterpret_cast<char*>(&checksum_0x221_) + sizeof(abs_whlmilgfrntle_));
}

Gw_abs_sts_0x221_221::~Gw_abs_sts_0x221_221() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  SharedDtor();
}

void Gw_abs_sts_0x221_221::SharedDtor() {
}

void Gw_abs_sts_0x221_221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_abs_sts_0x221_221::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_abs_sts_0x221_221& Gw_abs_sts_0x221_221::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_abs_sts_0x221_221* Gw_abs_sts_0x221_221::New(::google::protobuf::Arena* arena) const {
  Gw_abs_sts_0x221_221* n = new Gw_abs_sts_0x221_221;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_abs_sts_0x221_221::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x221_, 0, reinterpret_cast<char*>(&abs_ebdflgflt_) -
      reinterpret_cast<char*>(&checksum_0x221_) + sizeof(abs_ebdflgflt_));
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ::memset(&abs_absflgflt_, 0, reinterpret_cast<char*>(&abs_whlmilgfrntle_) -
      reinterpret_cast<char*>(&abs_absflgflt_) + sizeof(abs_whlmilgfrntle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_abs_sts_0x221_221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x221 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x221();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x221_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x221 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x221();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x221_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType_IsValid(value)) {
            set_abs_whlmilgfrntlestatus(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType_IsValid(value)) {
            set_abs_whlmilgfrntristatus(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType_IsValid(value)) {
            set_abs_vehspdlgtstatus(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspddirectionType abs_vehspddirection = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType_IsValid(value)) {
            set_abs_vehspddirection(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double abs_vehspdlgt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_abs_vehspdlgt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &abs_vehspdlgt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_ebdflgfltType abs_ebdflgflt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType_IsValid(value)) {
            set_abs_ebdflgflt(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absflgfltType abs_absflgflt = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType_IsValid(value)) {
            set_abs_absflgflt(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absctrlactvType abs_absctrlactv = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType_IsValid(value)) {
            set_abs_absctrlactv(static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 abs_whlmilgfrntri = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_abs_whlmilgfrntri();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abs_whlmilgfrntri_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 abs_whlmilgfrntle = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_abs_whlmilgfrntle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abs_whlmilgfrntle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  return false;
#undef DO_
}

void Gw_abs_sts_0x221_221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x221 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x221(), output);
  }

  // optional int32 rolling_counter_0x221 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x221(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->abs_whlmilgfrntlestatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->abs_whlmilgfrntristatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->abs_vehspdlgtstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspddirectionType abs_vehspddirection = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->abs_vehspddirection(), output);
  }

  // optional double abs_vehspdlgt = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->abs_vehspdlgt(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_ebdflgfltType abs_ebdflgflt = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->abs_ebdflgflt(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absflgfltType abs_absflgflt = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->abs_absflgflt(), output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absctrlactvType abs_absctrlactv = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->abs_absctrlactv(), output);
  }

  // optional int32 abs_whlmilgfrntri = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->abs_whlmilgfrntri(), output);
  }

  // optional int32 abs_whlmilgfrntle = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->abs_whlmilgfrntle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_abs_sts_0x221_221)
}

::google::protobuf::uint8* Gw_abs_sts_0x221_221::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x221 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x221(), target);
  }

  // optional int32 rolling_counter_0x221 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x221(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->abs_whlmilgfrntlestatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->abs_whlmilgfrntristatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->abs_vehspdlgtstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspddirectionType abs_vehspddirection = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->abs_vehspddirection(), target);
  }

  // optional double abs_vehspdlgt = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->abs_vehspdlgt(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_ebdflgfltType abs_ebdflgflt = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->abs_ebdflgflt(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absflgfltType abs_absflgflt = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->abs_absflgflt(), target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absctrlactvType abs_absctrlactv = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->abs_absctrlactv(), target);
  }

  // optional int32 abs_whlmilgfrntri = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->abs_whlmilgfrntri(), target);
  }

  // optional int32 abs_whlmilgfrntle = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->abs_whlmilgfrntle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  return target;
}

size_t Gw_abs_sts_0x221_221::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x221 = 1;
    if (has_checksum_0x221()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x221());
    }

    // optional int32 rolling_counter_0x221 = 2;
    if (has_rolling_counter_0x221()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x221());
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 3;
    if (has_abs_whlmilgfrntlestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlmilgfrntlestatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 4;
    if (has_abs_whlmilgfrntristatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_whlmilgfrntristatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 5;
    if (has_abs_vehspdlgtstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_vehspdlgtstatus());
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspddirectionType abs_vehspddirection = 6;
    if (has_abs_vehspddirection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_vehspddirection());
    }

    // optional double abs_vehspdlgt = 7;
    if (has_abs_vehspdlgt()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_ebdflgfltType abs_ebdflgflt = 8;
    if (has_abs_ebdflgflt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_ebdflgflt());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absflgfltType abs_absflgflt = 9;
    if (has_abs_absflgflt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_absflgflt());
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absctrlactvType abs_absctrlactv = 10;
    if (has_abs_absctrlactv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs_absctrlactv());
    }

    // optional int32 abs_whlmilgfrntri = 11;
    if (has_abs_whlmilgfrntri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->abs_whlmilgfrntri());
    }

    // optional int32 abs_whlmilgfrntle = 12;
    if (has_abs_whlmilgfrntle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->abs_whlmilgfrntle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_abs_sts_0x221_221::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_abs_sts_0x221_221* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_abs_sts_0x221_221>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_abs_sts_0x221_221)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_abs_sts_0x221_221)
    MergeFrom(*source);
  }
}

void Gw_abs_sts_0x221_221::MergeFrom(const Gw_abs_sts_0x221_221& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x221_ = from.checksum_0x221_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x221_ = from.rolling_counter_0x221_;
    }
    if (cached_has_bits & 0x00000004u) {
      abs_whlmilgfrntlestatus_ = from.abs_whlmilgfrntlestatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      abs_whlmilgfrntristatus_ = from.abs_whlmilgfrntristatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      abs_vehspdlgtstatus_ = from.abs_vehspdlgtstatus_;
    }
    if (cached_has_bits & 0x00000020u) {
      abs_vehspddirection_ = from.abs_vehspddirection_;
    }
    if (cached_has_bits & 0x00000040u) {
      abs_vehspdlgt_ = from.abs_vehspdlgt_;
    }
    if (cached_has_bits & 0x00000080u) {
      abs_ebdflgflt_ = from.abs_ebdflgflt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      abs_absflgflt_ = from.abs_absflgflt_;
    }
    if (cached_has_bits & 0x00000200u) {
      abs_absctrlactv_ = from.abs_absctrlactv_;
    }
    if (cached_has_bits & 0x00000400u) {
      abs_whlmilgfrntri_ = from.abs_whlmilgfrntri_;
    }
    if (cached_has_bits & 0x00000800u) {
      abs_whlmilgfrntle_ = from.abs_whlmilgfrntle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_abs_sts_0x221_221::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_abs_sts_0x221_221::CopyFrom(const Gw_abs_sts_0x221_221& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_abs_sts_0x221_221)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_abs_sts_0x221_221::IsInitialized() const {
  return true;
}

void Gw_abs_sts_0x221_221::Swap(Gw_abs_sts_0x221_221* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_abs_sts_0x221_221::InternalSwap(Gw_abs_sts_0x221_221* other) {
  std::swap(checksum_0x221_, other->checksum_0x221_);
  std::swap(rolling_counter_0x221_, other->rolling_counter_0x221_);
  std::swap(abs_whlmilgfrntlestatus_, other->abs_whlmilgfrntlestatus_);
  std::swap(abs_whlmilgfrntristatus_, other->abs_whlmilgfrntristatus_);
  std::swap(abs_vehspdlgtstatus_, other->abs_vehspdlgtstatus_);
  std::swap(abs_vehspddirection_, other->abs_vehspddirection_);
  std::swap(abs_vehspdlgt_, other->abs_vehspdlgt_);
  std::swap(abs_ebdflgflt_, other->abs_ebdflgflt_);
  std::swap(abs_absflgflt_, other->abs_absflgflt_);
  std::swap(abs_absctrlactv_, other->abs_absctrlactv_);
  std::swap(abs_whlmilgfrntri_, other->abs_whlmilgfrntri_);
  std::swap(abs_whlmilgfrntle_, other->abs_whlmilgfrntle_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_abs_sts_0x221_221::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_abs_sts_0x221_221

// optional int32 checksum_0x221 = 1;
bool Gw_abs_sts_0x221_221::has_checksum_0x221() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_checksum_0x221() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_abs_sts_0x221_221::clear_has_checksum_0x221() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_abs_sts_0x221_221::clear_checksum_0x221() {
  checksum_0x221_ = 0;
  clear_has_checksum_0x221();
}
::google::protobuf::int32 Gw_abs_sts_0x221_221::checksum_0x221() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.checksum_0x221)
  return checksum_0x221_;
}
void Gw_abs_sts_0x221_221::set_checksum_0x221(::google::protobuf::int32 value) {
  set_has_checksum_0x221();
  checksum_0x221_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.checksum_0x221)
}

// optional int32 rolling_counter_0x221 = 2;
bool Gw_abs_sts_0x221_221::has_rolling_counter_0x221() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_rolling_counter_0x221() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_abs_sts_0x221_221::clear_has_rolling_counter_0x221() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_abs_sts_0x221_221::clear_rolling_counter_0x221() {
  rolling_counter_0x221_ = 0;
  clear_has_rolling_counter_0x221();
}
::google::protobuf::int32 Gw_abs_sts_0x221_221::rolling_counter_0x221() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.rolling_counter_0x221)
  return rolling_counter_0x221_;
}
void Gw_abs_sts_0x221_221::set_rolling_counter_0x221(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x221();
  rolling_counter_0x221_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.rolling_counter_0x221)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntlestatusType abs_whlmilgfrntlestatus = 3;
bool Gw_abs_sts_0x221_221::has_abs_whlmilgfrntlestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_whlmilgfrntlestatus() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_whlmilgfrntlestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_abs_sts_0x221_221::clear_abs_whlmilgfrntlestatus() {
  abs_whlmilgfrntlestatus_ = 0;
  clear_has_abs_whlmilgfrntlestatus();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType Gw_abs_sts_0x221_221::abs_whlmilgfrntlestatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntlestatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType >(abs_whlmilgfrntlestatus_);
}
void Gw_abs_sts_0x221_221::set_abs_whlmilgfrntlestatus(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntlestatusType_IsValid(value));
  set_has_abs_whlmilgfrntlestatus();
  abs_whlmilgfrntlestatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntlestatus)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_whlmilgfrntristatusType abs_whlmilgfrntristatus = 4;
bool Gw_abs_sts_0x221_221::has_abs_whlmilgfrntristatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_whlmilgfrntristatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_whlmilgfrntristatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_abs_sts_0x221_221::clear_abs_whlmilgfrntristatus() {
  abs_whlmilgfrntristatus_ = 0;
  clear_has_abs_whlmilgfrntristatus();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType Gw_abs_sts_0x221_221::abs_whlmilgfrntristatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntristatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType >(abs_whlmilgfrntristatus_);
}
void Gw_abs_sts_0x221_221::set_abs_whlmilgfrntristatus(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_whlmilgfrntristatusType_IsValid(value));
  set_has_abs_whlmilgfrntristatus();
  abs_whlmilgfrntristatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntristatus)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspdlgtstatusType abs_vehspdlgtstatus = 5;
bool Gw_abs_sts_0x221_221::has_abs_vehspdlgtstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_vehspdlgtstatus() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_vehspdlgtstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_abs_sts_0x221_221::clear_abs_vehspdlgtstatus() {
  abs_vehspdlgtstatus_ = 0;
  clear_has_abs_vehspdlgtstatus();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType Gw_abs_sts_0x221_221::abs_vehspdlgtstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspdlgtstatus)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType >(abs_vehspdlgtstatus_);
}
void Gw_abs_sts_0x221_221::set_abs_vehspdlgtstatus(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspdlgtstatusType_IsValid(value));
  set_has_abs_vehspdlgtstatus();
  abs_vehspdlgtstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspdlgtstatus)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_vehspddirectionType abs_vehspddirection = 6;
bool Gw_abs_sts_0x221_221::has_abs_vehspddirection() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_vehspddirection() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_vehspddirection() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_abs_sts_0x221_221::clear_abs_vehspddirection() {
  abs_vehspddirection_ = 0;
  clear_has_abs_vehspddirection();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType Gw_abs_sts_0x221_221::abs_vehspddirection() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspddirection)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType >(abs_vehspddirection_);
}
void Gw_abs_sts_0x221_221::set_abs_vehspddirection(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_vehspddirectionType_IsValid(value));
  set_has_abs_vehspddirection();
  abs_vehspddirection_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspddirection)
}

// optional double abs_vehspdlgt = 7;
bool Gw_abs_sts_0x221_221::has_abs_vehspdlgt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_vehspdlgt() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_vehspdlgt() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_abs_sts_0x221_221::clear_abs_vehspdlgt() {
  abs_vehspdlgt_ = 0;
  clear_has_abs_vehspdlgt();
}
double Gw_abs_sts_0x221_221::abs_vehspdlgt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspdlgt)
  return abs_vehspdlgt_;
}
void Gw_abs_sts_0x221_221::set_abs_vehspdlgt(double value) {
  set_has_abs_vehspdlgt();
  abs_vehspdlgt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_vehspdlgt)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_ebdflgfltType abs_ebdflgflt = 8;
bool Gw_abs_sts_0x221_221::has_abs_ebdflgflt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_ebdflgflt() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_ebdflgflt() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_abs_sts_0x221_221::clear_abs_ebdflgflt() {
  abs_ebdflgflt_ = 0;
  clear_has_abs_ebdflgflt();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType Gw_abs_sts_0x221_221::abs_ebdflgflt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_ebdflgflt)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType >(abs_ebdflgflt_);
}
void Gw_abs_sts_0x221_221::set_abs_ebdflgflt(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_ebdflgfltType_IsValid(value));
  set_has_abs_ebdflgflt();
  abs_ebdflgflt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_ebdflgflt)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absflgfltType abs_absflgflt = 9;
bool Gw_abs_sts_0x221_221::has_abs_absflgflt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_absflgflt() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_absflgflt() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_abs_sts_0x221_221::clear_abs_absflgflt() {
  abs_absflgflt_ = 0;
  clear_has_abs_absflgflt();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType Gw_abs_sts_0x221_221::abs_absflgflt() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_absflgflt)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType >(abs_absflgflt_);
}
void Gw_abs_sts_0x221_221::set_abs_absflgflt(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absflgfltType_IsValid(value));
  set_has_abs_absflgflt();
  abs_absflgflt_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_absflgflt)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221.Abs_absctrlactvType abs_absctrlactv = 10;
bool Gw_abs_sts_0x221_221::has_abs_absctrlactv() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_absctrlactv() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_absctrlactv() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_abs_sts_0x221_221::clear_abs_absctrlactv() {
  abs_absctrlactv_ = 0;
  clear_has_abs_absctrlactv();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType Gw_abs_sts_0x221_221::abs_absctrlactv() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_absctrlactv)
  return static_cast< ::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType >(abs_absctrlactv_);
}
void Gw_abs_sts_0x221_221::set_abs_absctrlactv(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType value) {
  assert(::jmc_auto::canbus::Gw_abs_sts_0x221_221_Abs_absctrlactvType_IsValid(value));
  set_has_abs_absctrlactv();
  abs_absctrlactv_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_absctrlactv)
}

// optional int32 abs_whlmilgfrntri = 11;
bool Gw_abs_sts_0x221_221::has_abs_whlmilgfrntri() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_whlmilgfrntri() {
  _has_bits_[0] |= 0x00000400u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_whlmilgfrntri() {
  _has_bits_[0] &= ~0x00000400u;
}
void Gw_abs_sts_0x221_221::clear_abs_whlmilgfrntri() {
  abs_whlmilgfrntri_ = 0;
  clear_has_abs_whlmilgfrntri();
}
::google::protobuf::int32 Gw_abs_sts_0x221_221::abs_whlmilgfrntri() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntri)
  return abs_whlmilgfrntri_;
}
void Gw_abs_sts_0x221_221::set_abs_whlmilgfrntri(::google::protobuf::int32 value) {
  set_has_abs_whlmilgfrntri();
  abs_whlmilgfrntri_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntri)
}

// optional int32 abs_whlmilgfrntle = 12;
bool Gw_abs_sts_0x221_221::has_abs_whlmilgfrntle() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Gw_abs_sts_0x221_221::set_has_abs_whlmilgfrntle() {
  _has_bits_[0] |= 0x00000800u;
}
void Gw_abs_sts_0x221_221::clear_has_abs_whlmilgfrntle() {
  _has_bits_[0] &= ~0x00000800u;
}
void Gw_abs_sts_0x221_221::clear_abs_whlmilgfrntle() {
  abs_whlmilgfrntle_ = 0;
  clear_has_abs_whlmilgfrntle();
}
::google::protobuf::int32 Gw_abs_sts_0x221_221::abs_whlmilgfrntle() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntle)
  return abs_whlmilgfrntle_;
}
void Gw_abs_sts_0x221_221::set_abs_whlmilgfrntle(::google::protobuf::int32 value) {
  set_has_abs_whlmilgfrntle();
  abs_whlmilgfrntle_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_abs_sts_0x221_221.abs_whlmilgfrntle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ibc_status_0x122_122::kChecksum0X122FieldNumber;
const int Ibc_status_0x122_122::kRollingCounter0X122FieldNumber;
const int Ibc_status_0x122_122::kIbcParkreleaseReqFieldNumber;
const int Ibc_status_0x122_122::kIbcFaultcodeFieldNumber;
const int Ibc_status_0x122_122::kIbcBrkpedalrawpositionFieldNumber;
const int Ibc_status_0x122_122::kIbcMastercylinderpressvalidFieldNumber;
const int Ibc_status_0x122_122::kIbcMastercylinderpressFieldNumber;
const int Ibc_status_0x122_122::kIbcBrakeactiveFieldNumber;
const int Ibc_status_0x122_122::kIbcBrakereqavailabeFieldNumber;
const int Ibc_status_0x122_122::kIbcBrakepressurereqackFieldNumber;
const int Ibc_status_0x122_122::kIbcControlstatusFieldNumber;
const int Ibc_status_0x122_122::kIbcDriverInterveneFieldNumber;
const int Ibc_status_0x122_122::kIbcSystemstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ibc_status_0x122_122::Ibc_status_0x122_122()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Ibc_status_0x122_122)
}
Ibc_status_0x122_122::Ibc_status_0x122_122(const Ibc_status_0x122_122& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x122_, &from.checksum_0x122_,
    reinterpret_cast<char*>(&ibc_systemstatus_) -
    reinterpret_cast<char*>(&checksum_0x122_) + sizeof(ibc_systemstatus_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Ibc_status_0x122_122)
}

void Ibc_status_0x122_122::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x122_, 0, reinterpret_cast<char*>(&ibc_systemstatus_) -
    reinterpret_cast<char*>(&checksum_0x122_) + sizeof(ibc_systemstatus_));
}

Ibc_status_0x122_122::~Ibc_status_0x122_122() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Ibc_status_0x122_122)
  SharedDtor();
}

void Ibc_status_0x122_122::SharedDtor() {
}

void Ibc_status_0x122_122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ibc_status_0x122_122::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ibc_status_0x122_122& Ibc_status_0x122_122::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Ibc_status_0x122_122* Ibc_status_0x122_122::New(::google::protobuf::Arena* arena) const {
  Ibc_status_0x122_122* n = new Ibc_status_0x122_122;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ibc_status_0x122_122::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Ibc_status_0x122_122)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x122_, 0, reinterpret_cast<char*>(&ibc_brakeactive_) -
      reinterpret_cast<char*>(&checksum_0x122_) + sizeof(ibc_brakeactive_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&ibc_brakereqavailabe_, 0, reinterpret_cast<char*>(&ibc_systemstatus_) -
      reinterpret_cast<char*>(&ibc_brakereqavailabe_) + sizeof(ibc_systemstatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ibc_status_0x122_122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Ibc_status_0x122_122)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x122 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x122();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x122_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x122 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x122();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x122_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_parkrelease_reqType ibc_parkrelease_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType_IsValid(value)) {
            set_ibc_parkrelease_req(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ibc_faultcode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ibc_faultcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibc_faultcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ibc_brkpedalrawposition = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_ibc_brkpedalrawposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ibc_brkpedalrawposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_mastercylinderpressvalidType ibc_mastercylinderpressvalid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType_IsValid(value)) {
            set_ibc_mastercylinderpressvalid(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ibc_mastercylinderpress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_ibc_mastercylinderpress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ibc_mastercylinderpress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakeactiveType ibc_brakeactive = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType_IsValid(value)) {
            set_ibc_brakeactive(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakereqavailabeType ibc_brakereqavailabe = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType_IsValid(value)) {
            set_ibc_brakereqavailabe(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakepressurereqackType ibc_brakepressurereqack = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType_IsValid(value)) {
            set_ibc_brakepressurereqack(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_controlstatusType ibc_controlstatus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType_IsValid(value)) {
            set_ibc_controlstatus(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_driver_interveneType ibc_driver_intervene = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType_IsValid(value)) {
            set_ibc_driver_intervene(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_systemstatusType ibc_systemstatus = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType_IsValid(value)) {
            set_ibc_systemstatus(static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Ibc_status_0x122_122)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Ibc_status_0x122_122)
  return false;
#undef DO_
}

void Ibc_status_0x122_122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Ibc_status_0x122_122)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x122 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x122(), output);
  }

  // optional int32 rolling_counter_0x122 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x122(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_parkrelease_reqType ibc_parkrelease_req = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ibc_parkrelease_req(), output);
  }

  // optional int32 ibc_faultcode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ibc_faultcode(), output);
  }

  // optional double ibc_brkpedalrawposition = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ibc_brkpedalrawposition(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_mastercylinderpressvalidType ibc_mastercylinderpressvalid = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->ibc_mastercylinderpressvalid(), output);
  }

  // optional int32 ibc_mastercylinderpress = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ibc_mastercylinderpress(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakeactiveType ibc_brakeactive = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->ibc_brakeactive(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakereqavailabeType ibc_brakereqavailabe = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->ibc_brakereqavailabe(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakepressurereqackType ibc_brakepressurereqack = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->ibc_brakepressurereqack(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_controlstatusType ibc_controlstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->ibc_controlstatus(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_driver_interveneType ibc_driver_intervene = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->ibc_driver_intervene(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_systemstatusType ibc_systemstatus = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->ibc_systemstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Ibc_status_0x122_122)
}

::google::protobuf::uint8* Ibc_status_0x122_122::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Ibc_status_0x122_122)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x122 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x122(), target);
  }

  // optional int32 rolling_counter_0x122 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x122(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_parkrelease_reqType ibc_parkrelease_req = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ibc_parkrelease_req(), target);
  }

  // optional int32 ibc_faultcode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ibc_faultcode(), target);
  }

  // optional double ibc_brkpedalrawposition = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ibc_brkpedalrawposition(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_mastercylinderpressvalidType ibc_mastercylinderpressvalid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->ibc_mastercylinderpressvalid(), target);
  }

  // optional int32 ibc_mastercylinderpress = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ibc_mastercylinderpress(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakeactiveType ibc_brakeactive = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->ibc_brakeactive(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakereqavailabeType ibc_brakereqavailabe = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->ibc_brakereqavailabe(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakepressurereqackType ibc_brakepressurereqack = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->ibc_brakepressurereqack(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_controlstatusType ibc_controlstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->ibc_controlstatus(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_driver_interveneType ibc_driver_intervene = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->ibc_driver_intervene(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_systemstatusType ibc_systemstatus = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->ibc_systemstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Ibc_status_0x122_122)
  return target;
}

size_t Ibc_status_0x122_122::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Ibc_status_0x122_122)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x122 = 1;
    if (has_checksum_0x122()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x122());
    }

    // optional int32 rolling_counter_0x122 = 2;
    if (has_rolling_counter_0x122()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x122());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_parkrelease_reqType ibc_parkrelease_req = 3;
    if (has_ibc_parkrelease_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_parkrelease_req());
    }

    // optional int32 ibc_faultcode = 4;
    if (has_ibc_faultcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ibc_faultcode());
    }

    // optional double ibc_brkpedalrawposition = 5;
    if (has_ibc_brkpedalrawposition()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_mastercylinderpressvalidType ibc_mastercylinderpressvalid = 6;
    if (has_ibc_mastercylinderpressvalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_mastercylinderpressvalid());
    }

    // optional int32 ibc_mastercylinderpress = 7;
    if (has_ibc_mastercylinderpress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ibc_mastercylinderpress());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakeactiveType ibc_brakeactive = 8;
    if (has_ibc_brakeactive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_brakeactive());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakereqavailabeType ibc_brakereqavailabe = 9;
    if (has_ibc_brakereqavailabe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_brakereqavailabe());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakepressurereqackType ibc_brakepressurereqack = 10;
    if (has_ibc_brakepressurereqack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_brakepressurereqack());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_controlstatusType ibc_controlstatus = 11;
    if (has_ibc_controlstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_controlstatus());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_driver_interveneType ibc_driver_intervene = 12;
    if (has_ibc_driver_intervene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_driver_intervene());
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_systemstatusType ibc_systemstatus = 13;
    if (has_ibc_systemstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_systemstatus());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ibc_status_0x122_122::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Ibc_status_0x122_122)
  GOOGLE_DCHECK_NE(&from, this);
  const Ibc_status_0x122_122* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ibc_status_0x122_122>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Ibc_status_0x122_122)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Ibc_status_0x122_122)
    MergeFrom(*source);
  }
}

void Ibc_status_0x122_122::MergeFrom(const Ibc_status_0x122_122& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Ibc_status_0x122_122)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x122_ = from.checksum_0x122_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x122_ = from.rolling_counter_0x122_;
    }
    if (cached_has_bits & 0x00000004u) {
      ibc_parkrelease_req_ = from.ibc_parkrelease_req_;
    }
    if (cached_has_bits & 0x00000008u) {
      ibc_faultcode_ = from.ibc_faultcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      ibc_brkpedalrawposition_ = from.ibc_brkpedalrawposition_;
    }
    if (cached_has_bits & 0x00000020u) {
      ibc_mastercylinderpressvalid_ = from.ibc_mastercylinderpressvalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      ibc_mastercylinderpress_ = from.ibc_mastercylinderpress_;
    }
    if (cached_has_bits & 0x00000080u) {
      ibc_brakeactive_ = from.ibc_brakeactive_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      ibc_brakereqavailabe_ = from.ibc_brakereqavailabe_;
    }
    if (cached_has_bits & 0x00000200u) {
      ibc_brakepressurereqack_ = from.ibc_brakepressurereqack_;
    }
    if (cached_has_bits & 0x00000400u) {
      ibc_controlstatus_ = from.ibc_controlstatus_;
    }
    if (cached_has_bits & 0x00000800u) {
      ibc_driver_intervene_ = from.ibc_driver_intervene_;
    }
    if (cached_has_bits & 0x00001000u) {
      ibc_systemstatus_ = from.ibc_systemstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ibc_status_0x122_122::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Ibc_status_0x122_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ibc_status_0x122_122::CopyFrom(const Ibc_status_0x122_122& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Ibc_status_0x122_122)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ibc_status_0x122_122::IsInitialized() const {
  return true;
}

void Ibc_status_0x122_122::Swap(Ibc_status_0x122_122* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ibc_status_0x122_122::InternalSwap(Ibc_status_0x122_122* other) {
  std::swap(checksum_0x122_, other->checksum_0x122_);
  std::swap(rolling_counter_0x122_, other->rolling_counter_0x122_);
  std::swap(ibc_parkrelease_req_, other->ibc_parkrelease_req_);
  std::swap(ibc_faultcode_, other->ibc_faultcode_);
  std::swap(ibc_brkpedalrawposition_, other->ibc_brkpedalrawposition_);
  std::swap(ibc_mastercylinderpressvalid_, other->ibc_mastercylinderpressvalid_);
  std::swap(ibc_mastercylinderpress_, other->ibc_mastercylinderpress_);
  std::swap(ibc_brakeactive_, other->ibc_brakeactive_);
  std::swap(ibc_brakereqavailabe_, other->ibc_brakereqavailabe_);
  std::swap(ibc_brakepressurereqack_, other->ibc_brakepressurereqack_);
  std::swap(ibc_controlstatus_, other->ibc_controlstatus_);
  std::swap(ibc_driver_intervene_, other->ibc_driver_intervene_);
  std::swap(ibc_systemstatus_, other->ibc_systemstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ibc_status_0x122_122::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ibc_status_0x122_122

// optional int32 checksum_0x122 = 1;
bool Ibc_status_0x122_122::has_checksum_0x122() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Ibc_status_0x122_122::set_has_checksum_0x122() {
  _has_bits_[0] |= 0x00000001u;
}
void Ibc_status_0x122_122::clear_has_checksum_0x122() {
  _has_bits_[0] &= ~0x00000001u;
}
void Ibc_status_0x122_122::clear_checksum_0x122() {
  checksum_0x122_ = 0;
  clear_has_checksum_0x122();
}
::google::protobuf::int32 Ibc_status_0x122_122::checksum_0x122() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.checksum_0x122)
  return checksum_0x122_;
}
void Ibc_status_0x122_122::set_checksum_0x122(::google::protobuf::int32 value) {
  set_has_checksum_0x122();
  checksum_0x122_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.checksum_0x122)
}

// optional int32 rolling_counter_0x122 = 2;
bool Ibc_status_0x122_122::has_rolling_counter_0x122() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Ibc_status_0x122_122::set_has_rolling_counter_0x122() {
  _has_bits_[0] |= 0x00000002u;
}
void Ibc_status_0x122_122::clear_has_rolling_counter_0x122() {
  _has_bits_[0] &= ~0x00000002u;
}
void Ibc_status_0x122_122::clear_rolling_counter_0x122() {
  rolling_counter_0x122_ = 0;
  clear_has_rolling_counter_0x122();
}
::google::protobuf::int32 Ibc_status_0x122_122::rolling_counter_0x122() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.rolling_counter_0x122)
  return rolling_counter_0x122_;
}
void Ibc_status_0x122_122::set_rolling_counter_0x122(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x122();
  rolling_counter_0x122_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.rolling_counter_0x122)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_parkrelease_reqType ibc_parkrelease_req = 3;
bool Ibc_status_0x122_122::has_ibc_parkrelease_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_parkrelease_req() {
  _has_bits_[0] |= 0x00000004u;
}
void Ibc_status_0x122_122::clear_has_ibc_parkrelease_req() {
  _has_bits_[0] &= ~0x00000004u;
}
void Ibc_status_0x122_122::clear_ibc_parkrelease_req() {
  ibc_parkrelease_req_ = 0;
  clear_has_ibc_parkrelease_req();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType Ibc_status_0x122_122::ibc_parkrelease_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_parkrelease_req)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType >(ibc_parkrelease_req_);
}
void Ibc_status_0x122_122::set_ibc_parkrelease_req(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_parkrelease_reqType_IsValid(value));
  set_has_ibc_parkrelease_req();
  ibc_parkrelease_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_parkrelease_req)
}

// optional int32 ibc_faultcode = 4;
bool Ibc_status_0x122_122::has_ibc_faultcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_faultcode() {
  _has_bits_[0] |= 0x00000008u;
}
void Ibc_status_0x122_122::clear_has_ibc_faultcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void Ibc_status_0x122_122::clear_ibc_faultcode() {
  ibc_faultcode_ = 0;
  clear_has_ibc_faultcode();
}
::google::protobuf::int32 Ibc_status_0x122_122::ibc_faultcode() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_faultcode)
  return ibc_faultcode_;
}
void Ibc_status_0x122_122::set_ibc_faultcode(::google::protobuf::int32 value) {
  set_has_ibc_faultcode();
  ibc_faultcode_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_faultcode)
}

// optional double ibc_brkpedalrawposition = 5;
bool Ibc_status_0x122_122::has_ibc_brkpedalrawposition() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_brkpedalrawposition() {
  _has_bits_[0] |= 0x00000010u;
}
void Ibc_status_0x122_122::clear_has_ibc_brkpedalrawposition() {
  _has_bits_[0] &= ~0x00000010u;
}
void Ibc_status_0x122_122::clear_ibc_brkpedalrawposition() {
  ibc_brkpedalrawposition_ = 0;
  clear_has_ibc_brkpedalrawposition();
}
double Ibc_status_0x122_122::ibc_brkpedalrawposition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brkpedalrawposition)
  return ibc_brkpedalrawposition_;
}
void Ibc_status_0x122_122::set_ibc_brkpedalrawposition(double value) {
  set_has_ibc_brkpedalrawposition();
  ibc_brkpedalrawposition_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brkpedalrawposition)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_mastercylinderpressvalidType ibc_mastercylinderpressvalid = 6;
bool Ibc_status_0x122_122::has_ibc_mastercylinderpressvalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_mastercylinderpressvalid() {
  _has_bits_[0] |= 0x00000020u;
}
void Ibc_status_0x122_122::clear_has_ibc_mastercylinderpressvalid() {
  _has_bits_[0] &= ~0x00000020u;
}
void Ibc_status_0x122_122::clear_ibc_mastercylinderpressvalid() {
  ibc_mastercylinderpressvalid_ = 0;
  clear_has_ibc_mastercylinderpressvalid();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType Ibc_status_0x122_122::ibc_mastercylinderpressvalid() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_mastercylinderpressvalid)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType >(ibc_mastercylinderpressvalid_);
}
void Ibc_status_0x122_122::set_ibc_mastercylinderpressvalid(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_mastercylinderpressvalidType_IsValid(value));
  set_has_ibc_mastercylinderpressvalid();
  ibc_mastercylinderpressvalid_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_mastercylinderpressvalid)
}

// optional int32 ibc_mastercylinderpress = 7;
bool Ibc_status_0x122_122::has_ibc_mastercylinderpress() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_mastercylinderpress() {
  _has_bits_[0] |= 0x00000040u;
}
void Ibc_status_0x122_122::clear_has_ibc_mastercylinderpress() {
  _has_bits_[0] &= ~0x00000040u;
}
void Ibc_status_0x122_122::clear_ibc_mastercylinderpress() {
  ibc_mastercylinderpress_ = 0;
  clear_has_ibc_mastercylinderpress();
}
::google::protobuf::int32 Ibc_status_0x122_122::ibc_mastercylinderpress() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_mastercylinderpress)
  return ibc_mastercylinderpress_;
}
void Ibc_status_0x122_122::set_ibc_mastercylinderpress(::google::protobuf::int32 value) {
  set_has_ibc_mastercylinderpress();
  ibc_mastercylinderpress_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_mastercylinderpress)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakeactiveType ibc_brakeactive = 8;
bool Ibc_status_0x122_122::has_ibc_brakeactive() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_brakeactive() {
  _has_bits_[0] |= 0x00000080u;
}
void Ibc_status_0x122_122::clear_has_ibc_brakeactive() {
  _has_bits_[0] &= ~0x00000080u;
}
void Ibc_status_0x122_122::clear_ibc_brakeactive() {
  ibc_brakeactive_ = 0;
  clear_has_ibc_brakeactive();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType Ibc_status_0x122_122::ibc_brakeactive() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakeactive)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType >(ibc_brakeactive_);
}
void Ibc_status_0x122_122::set_ibc_brakeactive(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakeactiveType_IsValid(value));
  set_has_ibc_brakeactive();
  ibc_brakeactive_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakeactive)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakereqavailabeType ibc_brakereqavailabe = 9;
bool Ibc_status_0x122_122::has_ibc_brakereqavailabe() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_brakereqavailabe() {
  _has_bits_[0] |= 0x00000100u;
}
void Ibc_status_0x122_122::clear_has_ibc_brakereqavailabe() {
  _has_bits_[0] &= ~0x00000100u;
}
void Ibc_status_0x122_122::clear_ibc_brakereqavailabe() {
  ibc_brakereqavailabe_ = 0;
  clear_has_ibc_brakereqavailabe();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType Ibc_status_0x122_122::ibc_brakereqavailabe() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakereqavailabe)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType >(ibc_brakereqavailabe_);
}
void Ibc_status_0x122_122::set_ibc_brakereqavailabe(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakereqavailabeType_IsValid(value));
  set_has_ibc_brakereqavailabe();
  ibc_brakereqavailabe_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakereqavailabe)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_brakepressurereqackType ibc_brakepressurereqack = 10;
bool Ibc_status_0x122_122::has_ibc_brakepressurereqack() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_brakepressurereqack() {
  _has_bits_[0] |= 0x00000200u;
}
void Ibc_status_0x122_122::clear_has_ibc_brakepressurereqack() {
  _has_bits_[0] &= ~0x00000200u;
}
void Ibc_status_0x122_122::clear_ibc_brakepressurereqack() {
  ibc_brakepressurereqack_ = 0;
  clear_has_ibc_brakepressurereqack();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType Ibc_status_0x122_122::ibc_brakepressurereqack() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakepressurereqack)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType >(ibc_brakepressurereqack_);
}
void Ibc_status_0x122_122::set_ibc_brakepressurereqack(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_brakepressurereqackType_IsValid(value));
  set_has_ibc_brakepressurereqack();
  ibc_brakepressurereqack_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_brakepressurereqack)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_controlstatusType ibc_controlstatus = 11;
bool Ibc_status_0x122_122::has_ibc_controlstatus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_controlstatus() {
  _has_bits_[0] |= 0x00000400u;
}
void Ibc_status_0x122_122::clear_has_ibc_controlstatus() {
  _has_bits_[0] &= ~0x00000400u;
}
void Ibc_status_0x122_122::clear_ibc_controlstatus() {
  ibc_controlstatus_ = 0;
  clear_has_ibc_controlstatus();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType Ibc_status_0x122_122::ibc_controlstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_controlstatus)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType >(ibc_controlstatus_);
}
void Ibc_status_0x122_122::set_ibc_controlstatus(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_controlstatusType_IsValid(value));
  set_has_ibc_controlstatus();
  ibc_controlstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_controlstatus)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_driver_interveneType ibc_driver_intervene = 12;
bool Ibc_status_0x122_122::has_ibc_driver_intervene() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_driver_intervene() {
  _has_bits_[0] |= 0x00000800u;
}
void Ibc_status_0x122_122::clear_has_ibc_driver_intervene() {
  _has_bits_[0] &= ~0x00000800u;
}
void Ibc_status_0x122_122::clear_ibc_driver_intervene() {
  ibc_driver_intervene_ = 0;
  clear_has_ibc_driver_intervene();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType Ibc_status_0x122_122::ibc_driver_intervene() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_driver_intervene)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType >(ibc_driver_intervene_);
}
void Ibc_status_0x122_122::set_ibc_driver_intervene(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_driver_interveneType_IsValid(value));
  set_has_ibc_driver_intervene();
  ibc_driver_intervene_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_driver_intervene)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122.Ibc_systemstatusType ibc_systemstatus = 13;
bool Ibc_status_0x122_122::has_ibc_systemstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Ibc_status_0x122_122::set_has_ibc_systemstatus() {
  _has_bits_[0] |= 0x00001000u;
}
void Ibc_status_0x122_122::clear_has_ibc_systemstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
void Ibc_status_0x122_122::clear_ibc_systemstatus() {
  ibc_systemstatus_ = 0;
  clear_has_ibc_systemstatus();
}
::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType Ibc_status_0x122_122::ibc_systemstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status_0x122_122.ibc_systemstatus)
  return static_cast< ::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType >(ibc_systemstatus_);
}
void Ibc_status_0x122_122::set_ibc_systemstatus(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType value) {
  assert(::jmc_auto::canbus::Ibc_status_0x122_122_Ibc_systemstatusType_IsValid(value));
  set_has_ibc_systemstatus();
  ibc_systemstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status_0x122_122.ibc_systemstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_whltq_0x107_107::kChecksum0X107FieldNumber;
const int Gw_vcu_whltq_0x107_107::kRollingCounter0X107FieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuKickdownFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuAccpedalratioerrorFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuAccpedalratioFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuAccrawpedalratioFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuBrkpedalstasusFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuMinindicatedtorqwhlFieldNumber;
const int Gw_vcu_whltq_0x107_107::kVcuMaxindicatedtorqwhlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_whltq_0x107_107::Gw_vcu_whltq_0x107_107()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
}
Gw_vcu_whltq_0x107_107::Gw_vcu_whltq_0x107_107(const Gw_vcu_whltq_0x107_107& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x107_, &from.checksum_0x107_,
    reinterpret_cast<char*>(&vcu_maxindicatedtorqwhl_) -
    reinterpret_cast<char*>(&checksum_0x107_) + sizeof(vcu_maxindicatedtorqwhl_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
}

void Gw_vcu_whltq_0x107_107::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x107_, 0, reinterpret_cast<char*>(&vcu_maxindicatedtorqwhl_) -
    reinterpret_cast<char*>(&checksum_0x107_) + sizeof(vcu_maxindicatedtorqwhl_));
}

Gw_vcu_whltq_0x107_107::~Gw_vcu_whltq_0x107_107() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  SharedDtor();
}

void Gw_vcu_whltq_0x107_107::SharedDtor() {
}

void Gw_vcu_whltq_0x107_107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_whltq_0x107_107::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_whltq_0x107_107& Gw_vcu_whltq_0x107_107::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_whltq_0x107_107* Gw_vcu_whltq_0x107_107::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_whltq_0x107_107* n = new Gw_vcu_whltq_0x107_107;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_whltq_0x107_107::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x107_, 0, reinterpret_cast<char*>(&vcu_minindicatedtorqwhl_) -
      reinterpret_cast<char*>(&checksum_0x107_) + sizeof(vcu_minindicatedtorqwhl_));
  }
  vcu_maxindicatedtorqwhl_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_whltq_0x107_107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x107 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x107();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x107_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x107 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x107();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x107_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_kickdownType vcu_kickdown = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType_IsValid(value)) {
            set_vcu_kickdown(static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_accpedalratioerrorType vcu_accpedalratioerror = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType_IsValid(value)) {
            set_vcu_accpedalratioerror(static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_accpedalratio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_vcu_accpedalratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_accpedalratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_accrawpedalratio = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_vcu_accrawpedalratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_accrawpedalratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkpedalstasusType vcu_brkpedalstasus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType_IsValid(value)) {
            set_vcu_brkpedalstasus(static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_minindicatedtorqwhl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_vcu_minindicatedtorqwhl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_minindicatedtorqwhl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_maxindicatedtorqwhl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_vcu_maxindicatedtorqwhl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_maxindicatedtorqwhl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  return false;
#undef DO_
}

void Gw_vcu_whltq_0x107_107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x107 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x107(), output);
  }

  // optional int32 rolling_counter_0x107 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x107(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_kickdownType vcu_kickdown = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_kickdown(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_accpedalratioerrorType vcu_accpedalratioerror = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vcu_accpedalratioerror(), output);
  }

  // optional double vcu_accpedalratio = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vcu_accpedalratio(), output);
  }

  // optional double vcu_accrawpedalratio = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vcu_accrawpedalratio(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkpedalstasusType vcu_brkpedalstasus = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vcu_brkpedalstasus(), output);
  }

  // optional int32 vcu_minindicatedtorqwhl = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vcu_minindicatedtorqwhl(), output);
  }

  // optional int32 vcu_maxindicatedtorqwhl = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vcu_maxindicatedtorqwhl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
}

::google::protobuf::uint8* Gw_vcu_whltq_0x107_107::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x107 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x107(), target);
  }

  // optional int32 rolling_counter_0x107 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x107(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_kickdownType vcu_kickdown = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_kickdown(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_accpedalratioerrorType vcu_accpedalratioerror = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vcu_accpedalratioerror(), target);
  }

  // optional double vcu_accpedalratio = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vcu_accpedalratio(), target);
  }

  // optional double vcu_accrawpedalratio = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->vcu_accrawpedalratio(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkpedalstasusType vcu_brkpedalstasus = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->vcu_brkpedalstasus(), target);
  }

  // optional int32 vcu_minindicatedtorqwhl = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vcu_minindicatedtorqwhl(), target);
  }

  // optional int32 vcu_maxindicatedtorqwhl = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vcu_maxindicatedtorqwhl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  return target;
}

size_t Gw_vcu_whltq_0x107_107::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x107 = 1;
    if (has_checksum_0x107()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x107());
    }

    // optional int32 rolling_counter_0x107 = 2;
    if (has_rolling_counter_0x107()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x107());
    }

    // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_kickdownType vcu_kickdown = 3;
    if (has_vcu_kickdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_kickdown());
    }

    // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_accpedalratioerrorType vcu_accpedalratioerror = 4;
    if (has_vcu_accpedalratioerror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_accpedalratioerror());
    }

    // optional double vcu_accpedalratio = 5;
    if (has_vcu_accpedalratio()) {
      total_size += 1 + 8;
    }

    // optional double vcu_accrawpedalratio = 6;
    if (has_vcu_accrawpedalratio()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkpedalstasusType vcu_brkpedalstasus = 7;
    if (has_vcu_brkpedalstasus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_brkpedalstasus());
    }

    // optional int32 vcu_minindicatedtorqwhl = 8;
    if (has_vcu_minindicatedtorqwhl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_minindicatedtorqwhl());
    }

  }
  // optional int32 vcu_maxindicatedtorqwhl = 9;
  if (has_vcu_maxindicatedtorqwhl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vcu_maxindicatedtorqwhl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_whltq_0x107_107::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_whltq_0x107_107* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_whltq_0x107_107>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
    MergeFrom(*source);
  }
}

void Gw_vcu_whltq_0x107_107::MergeFrom(const Gw_vcu_whltq_0x107_107& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x107_ = from.checksum_0x107_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x107_ = from.rolling_counter_0x107_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_kickdown_ = from.vcu_kickdown_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_accpedalratioerror_ = from.vcu_accpedalratioerror_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_accpedalratio_ = from.vcu_accpedalratio_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_accrawpedalratio_ = from.vcu_accrawpedalratio_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_brkpedalstasus_ = from.vcu_brkpedalstasus_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_minindicatedtorqwhl_ = from.vcu_minindicatedtorqwhl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_vcu_maxindicatedtorqwhl(from.vcu_maxindicatedtorqwhl());
  }
}

void Gw_vcu_whltq_0x107_107::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_whltq_0x107_107::CopyFrom(const Gw_vcu_whltq_0x107_107& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_whltq_0x107_107)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_whltq_0x107_107::IsInitialized() const {
  return true;
}

void Gw_vcu_whltq_0x107_107::Swap(Gw_vcu_whltq_0x107_107* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_whltq_0x107_107::InternalSwap(Gw_vcu_whltq_0x107_107* other) {
  std::swap(checksum_0x107_, other->checksum_0x107_);
  std::swap(rolling_counter_0x107_, other->rolling_counter_0x107_);
  std::swap(vcu_kickdown_, other->vcu_kickdown_);
  std::swap(vcu_accpedalratioerror_, other->vcu_accpedalratioerror_);
  std::swap(vcu_accpedalratio_, other->vcu_accpedalratio_);
  std::swap(vcu_accrawpedalratio_, other->vcu_accrawpedalratio_);
  std::swap(vcu_brkpedalstasus_, other->vcu_brkpedalstasus_);
  std::swap(vcu_minindicatedtorqwhl_, other->vcu_minindicatedtorqwhl_);
  std::swap(vcu_maxindicatedtorqwhl_, other->vcu_maxindicatedtorqwhl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_whltq_0x107_107::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_whltq_0x107_107

// optional int32 checksum_0x107 = 1;
bool Gw_vcu_whltq_0x107_107::has_checksum_0x107() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_checksum_0x107() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_whltq_0x107_107::clear_has_checksum_0x107() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_whltq_0x107_107::clear_checksum_0x107() {
  checksum_0x107_ = 0;
  clear_has_checksum_0x107();
}
::google::protobuf::int32 Gw_vcu_whltq_0x107_107::checksum_0x107() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.checksum_0x107)
  return checksum_0x107_;
}
void Gw_vcu_whltq_0x107_107::set_checksum_0x107(::google::protobuf::int32 value) {
  set_has_checksum_0x107();
  checksum_0x107_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.checksum_0x107)
}

// optional int32 rolling_counter_0x107 = 2;
bool Gw_vcu_whltq_0x107_107::has_rolling_counter_0x107() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_rolling_counter_0x107() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_whltq_0x107_107::clear_has_rolling_counter_0x107() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_whltq_0x107_107::clear_rolling_counter_0x107() {
  rolling_counter_0x107_ = 0;
  clear_has_rolling_counter_0x107();
}
::google::protobuf::int32 Gw_vcu_whltq_0x107_107::rolling_counter_0x107() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.rolling_counter_0x107)
  return rolling_counter_0x107_;
}
void Gw_vcu_whltq_0x107_107::set_rolling_counter_0x107(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x107();
  rolling_counter_0x107_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.rolling_counter_0x107)
}

// optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_kickdownType vcu_kickdown = 3;
bool Gw_vcu_whltq_0x107_107::has_vcu_kickdown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_kickdown() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_kickdown() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_kickdown() {
  vcu_kickdown_ = 0;
  clear_has_vcu_kickdown();
}
::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType Gw_vcu_whltq_0x107_107::vcu_kickdown() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_kickdown)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType >(vcu_kickdown_);
}
void Gw_vcu_whltq_0x107_107::set_vcu_kickdown(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType value) {
  assert(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_kickdownType_IsValid(value));
  set_has_vcu_kickdown();
  vcu_kickdown_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_kickdown)
}

// optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_accpedalratioerrorType vcu_accpedalratioerror = 4;
bool Gw_vcu_whltq_0x107_107::has_vcu_accpedalratioerror() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_accpedalratioerror() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_accpedalratioerror() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_accpedalratioerror() {
  vcu_accpedalratioerror_ = 0;
  clear_has_vcu_accpedalratioerror();
}
::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType Gw_vcu_whltq_0x107_107::vcu_accpedalratioerror() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accpedalratioerror)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType >(vcu_accpedalratioerror_);
}
void Gw_vcu_whltq_0x107_107::set_vcu_accpedalratioerror(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType value) {
  assert(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_accpedalratioerrorType_IsValid(value));
  set_has_vcu_accpedalratioerror();
  vcu_accpedalratioerror_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accpedalratioerror)
}

// optional double vcu_accpedalratio = 5;
bool Gw_vcu_whltq_0x107_107::has_vcu_accpedalratio() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_accpedalratio() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_accpedalratio() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_accpedalratio() {
  vcu_accpedalratio_ = 0;
  clear_has_vcu_accpedalratio();
}
double Gw_vcu_whltq_0x107_107::vcu_accpedalratio() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accpedalratio)
  return vcu_accpedalratio_;
}
void Gw_vcu_whltq_0x107_107::set_vcu_accpedalratio(double value) {
  set_has_vcu_accpedalratio();
  vcu_accpedalratio_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accpedalratio)
}

// optional double vcu_accrawpedalratio = 6;
bool Gw_vcu_whltq_0x107_107::has_vcu_accrawpedalratio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_accrawpedalratio() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_accrawpedalratio() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_accrawpedalratio() {
  vcu_accrawpedalratio_ = 0;
  clear_has_vcu_accrawpedalratio();
}
double Gw_vcu_whltq_0x107_107::vcu_accrawpedalratio() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accrawpedalratio)
  return vcu_accrawpedalratio_;
}
void Gw_vcu_whltq_0x107_107::set_vcu_accrawpedalratio(double value) {
  set_has_vcu_accrawpedalratio();
  vcu_accrawpedalratio_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_accrawpedalratio)
}

// optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107.Vcu_brkpedalstasusType vcu_brkpedalstasus = 7;
bool Gw_vcu_whltq_0x107_107::has_vcu_brkpedalstasus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_brkpedalstasus() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_brkpedalstasus() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_brkpedalstasus() {
  vcu_brkpedalstasus_ = 0;
  clear_has_vcu_brkpedalstasus();
}
::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType Gw_vcu_whltq_0x107_107::vcu_brkpedalstasus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_brkpedalstasus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType >(vcu_brkpedalstasus_);
}
void Gw_vcu_whltq_0x107_107::set_vcu_brkpedalstasus(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107_Vcu_brkpedalstasusType_IsValid(value));
  set_has_vcu_brkpedalstasus();
  vcu_brkpedalstasus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_brkpedalstasus)
}

// optional int32 vcu_minindicatedtorqwhl = 8;
bool Gw_vcu_whltq_0x107_107::has_vcu_minindicatedtorqwhl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_minindicatedtorqwhl() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_minindicatedtorqwhl() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_minindicatedtorqwhl() {
  vcu_minindicatedtorqwhl_ = 0;
  clear_has_vcu_minindicatedtorqwhl();
}
::google::protobuf::int32 Gw_vcu_whltq_0x107_107::vcu_minindicatedtorqwhl() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_minindicatedtorqwhl)
  return vcu_minindicatedtorqwhl_;
}
void Gw_vcu_whltq_0x107_107::set_vcu_minindicatedtorqwhl(::google::protobuf::int32 value) {
  set_has_vcu_minindicatedtorqwhl();
  vcu_minindicatedtorqwhl_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_minindicatedtorqwhl)
}

// optional int32 vcu_maxindicatedtorqwhl = 9;
bool Gw_vcu_whltq_0x107_107::has_vcu_maxindicatedtorqwhl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_vcu_whltq_0x107_107::set_has_vcu_maxindicatedtorqwhl() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_vcu_whltq_0x107_107::clear_has_vcu_maxindicatedtorqwhl() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_vcu_whltq_0x107_107::clear_vcu_maxindicatedtorqwhl() {
  vcu_maxindicatedtorqwhl_ = 0;
  clear_has_vcu_maxindicatedtorqwhl();
}
::google::protobuf::int32 Gw_vcu_whltq_0x107_107::vcu_maxindicatedtorqwhl() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_maxindicatedtorqwhl)
  return vcu_maxindicatedtorqwhl_;
}
void Gw_vcu_whltq_0x107_107::set_vcu_maxindicatedtorqwhl(::google::protobuf::int32 value) {
  set_has_vcu_maxindicatedtorqwhl();
  vcu_maxindicatedtorqwhl_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_whltq_0x107_107.vcu_maxindicatedtorqwhl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bcm_bodysts_0x344_344::kBcmBrakelampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmRearfoglampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmFrontfoglampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmWasherstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmWiperstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmDoorlockfeedbackFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmHornstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmHighbeamlampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmLowbeamlampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmPositionlampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmHazardlampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmRightturnlampstatusFieldNumber;
const int Bcm_bodysts_0x344_344::kBcmLeftturnlampstatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bcm_bodysts_0x344_344::Bcm_bodysts_0x344_344()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Bcm_bodysts_0x344_344)
}
Bcm_bodysts_0x344_344::Bcm_bodysts_0x344_344(const Bcm_bodysts_0x344_344& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bcm_brakelampstatus_, &from.bcm_brakelampstatus_,
    reinterpret_cast<char*>(&bcm_leftturnlampstatus_) -
    reinterpret_cast<char*>(&bcm_brakelampstatus_) + sizeof(bcm_leftturnlampstatus_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Bcm_bodysts_0x344_344)
}

void Bcm_bodysts_0x344_344::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bcm_brakelampstatus_, 0, reinterpret_cast<char*>(&bcm_leftturnlampstatus_) -
    reinterpret_cast<char*>(&bcm_brakelampstatus_) + sizeof(bcm_leftturnlampstatus_));
}

Bcm_bodysts_0x344_344::~Bcm_bodysts_0x344_344() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  SharedDtor();
}

void Bcm_bodysts_0x344_344::SharedDtor() {
}

void Bcm_bodysts_0x344_344::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bcm_bodysts_0x344_344::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bcm_bodysts_0x344_344& Bcm_bodysts_0x344_344::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bcm_bodysts_0x344_344* Bcm_bodysts_0x344_344::New(::google::protobuf::Arena* arena) const {
  Bcm_bodysts_0x344_344* n = new Bcm_bodysts_0x344_344;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bcm_bodysts_0x344_344::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&bcm_brakelampstatus_, 0, reinterpret_cast<char*>(&bcm_highbeamlampstatus_) -
      reinterpret_cast<char*>(&bcm_brakelampstatus_) + sizeof(bcm_highbeamlampstatus_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&bcm_lowbeamlampstatus_, 0, reinterpret_cast<char*>(&bcm_leftturnlampstatus_) -
      reinterpret_cast<char*>(&bcm_lowbeamlampstatus_) + sizeof(bcm_leftturnlampstatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bcm_bodysts_0x344_344::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_brakelampstatusType bcm_brakelampstatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType_IsValid(value)) {
            set_bcm_brakelampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rearfoglampstatusType bcm_rearfoglampstatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType_IsValid(value)) {
            set_bcm_rearfoglampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_frontfoglampstatusType bcm_frontfoglampstatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType_IsValid(value)) {
            set_bcm_frontfoglampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_washerstatusType bcm_washerstatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType_IsValid(value)) {
            set_bcm_washerstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_wiperstatusType bcm_wiperstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType_IsValid(value)) {
            set_bcm_wiperstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_doorlockfeedbackType bcm_doorlockfeedback = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType_IsValid(value)) {
            set_bcm_doorlockfeedback(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hornstatusType bcm_hornstatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType_IsValid(value)) {
            set_bcm_hornstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_highbeamlampstatusType bcm_highbeamlampstatus = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType_IsValid(value)) {
            set_bcm_highbeamlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_lowbeamlampstatusType bcm_lowbeamlampstatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType_IsValid(value)) {
            set_bcm_lowbeamlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_positionlampstatusType bcm_positionlampstatus = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType_IsValid(value)) {
            set_bcm_positionlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hazardlampstatusType bcm_hazardlampstatus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType_IsValid(value)) {
            set_bcm_hazardlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rightturnlampstatusType bcm_rightturnlampstatus = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType_IsValid(value)) {
            set_bcm_rightturnlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_leftturnlampstatusType bcm_leftturnlampstatus = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType_IsValid(value)) {
            set_bcm_leftturnlampstatus(static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  return false;
#undef DO_
}

void Bcm_bodysts_0x344_344::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_brakelampstatusType bcm_brakelampstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->bcm_brakelampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rearfoglampstatusType bcm_rearfoglampstatus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->bcm_rearfoglampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_frontfoglampstatusType bcm_frontfoglampstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bcm_frontfoglampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_washerstatusType bcm_washerstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bcm_washerstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_wiperstatusType bcm_wiperstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->bcm_wiperstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_doorlockfeedbackType bcm_doorlockfeedback = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->bcm_doorlockfeedback(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hornstatusType bcm_hornstatus = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->bcm_hornstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_highbeamlampstatusType bcm_highbeamlampstatus = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->bcm_highbeamlampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_lowbeamlampstatusType bcm_lowbeamlampstatus = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->bcm_lowbeamlampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_positionlampstatusType bcm_positionlampstatus = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->bcm_positionlampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hazardlampstatusType bcm_hazardlampstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->bcm_hazardlampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rightturnlampstatusType bcm_rightturnlampstatus = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->bcm_rightturnlampstatus(), output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_leftturnlampstatusType bcm_leftturnlampstatus = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->bcm_leftturnlampstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Bcm_bodysts_0x344_344)
}

::google::protobuf::uint8* Bcm_bodysts_0x344_344::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_brakelampstatusType bcm_brakelampstatus = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->bcm_brakelampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rearfoglampstatusType bcm_rearfoglampstatus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->bcm_rearfoglampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_frontfoglampstatusType bcm_frontfoglampstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bcm_frontfoglampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_washerstatusType bcm_washerstatus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bcm_washerstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_wiperstatusType bcm_wiperstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->bcm_wiperstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_doorlockfeedbackType bcm_doorlockfeedback = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->bcm_doorlockfeedback(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hornstatusType bcm_hornstatus = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->bcm_hornstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_highbeamlampstatusType bcm_highbeamlampstatus = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->bcm_highbeamlampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_lowbeamlampstatusType bcm_lowbeamlampstatus = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->bcm_lowbeamlampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_positionlampstatusType bcm_positionlampstatus = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->bcm_positionlampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hazardlampstatusType bcm_hazardlampstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->bcm_hazardlampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rightturnlampstatusType bcm_rightturnlampstatus = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->bcm_rightturnlampstatus(), target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_leftturnlampstatusType bcm_leftturnlampstatus = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->bcm_leftturnlampstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  return target;
}

size_t Bcm_bodysts_0x344_344::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_brakelampstatusType bcm_brakelampstatus = 1;
    if (has_bcm_brakelampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_brakelampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rearfoglampstatusType bcm_rearfoglampstatus = 2;
    if (has_bcm_rearfoglampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_rearfoglampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_frontfoglampstatusType bcm_frontfoglampstatus = 3;
    if (has_bcm_frontfoglampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_frontfoglampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_washerstatusType bcm_washerstatus = 4;
    if (has_bcm_washerstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_washerstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_wiperstatusType bcm_wiperstatus = 5;
    if (has_bcm_wiperstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_wiperstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_doorlockfeedbackType bcm_doorlockfeedback = 6;
    if (has_bcm_doorlockfeedback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_doorlockfeedback());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hornstatusType bcm_hornstatus = 7;
    if (has_bcm_hornstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_hornstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_highbeamlampstatusType bcm_highbeamlampstatus = 8;
    if (has_bcm_highbeamlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_highbeamlampstatus());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_lowbeamlampstatusType bcm_lowbeamlampstatus = 9;
    if (has_bcm_lowbeamlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_lowbeamlampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_positionlampstatusType bcm_positionlampstatus = 10;
    if (has_bcm_positionlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_positionlampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hazardlampstatusType bcm_hazardlampstatus = 11;
    if (has_bcm_hazardlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_hazardlampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rightturnlampstatusType bcm_rightturnlampstatus = 12;
    if (has_bcm_rightturnlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_rightturnlampstatus());
    }

    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_leftturnlampstatusType bcm_leftturnlampstatus = 13;
    if (has_bcm_leftturnlampstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bcm_leftturnlampstatus());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bcm_bodysts_0x344_344::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  GOOGLE_DCHECK_NE(&from, this);
  const Bcm_bodysts_0x344_344* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bcm_bodysts_0x344_344>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Bcm_bodysts_0x344_344)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Bcm_bodysts_0x344_344)
    MergeFrom(*source);
  }
}

void Bcm_bodysts_0x344_344::MergeFrom(const Bcm_bodysts_0x344_344& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      bcm_brakelampstatus_ = from.bcm_brakelampstatus_;
    }
    if (cached_has_bits & 0x00000002u) {
      bcm_rearfoglampstatus_ = from.bcm_rearfoglampstatus_;
    }
    if (cached_has_bits & 0x00000004u) {
      bcm_frontfoglampstatus_ = from.bcm_frontfoglampstatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      bcm_washerstatus_ = from.bcm_washerstatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      bcm_wiperstatus_ = from.bcm_wiperstatus_;
    }
    if (cached_has_bits & 0x00000020u) {
      bcm_doorlockfeedback_ = from.bcm_doorlockfeedback_;
    }
    if (cached_has_bits & 0x00000040u) {
      bcm_hornstatus_ = from.bcm_hornstatus_;
    }
    if (cached_has_bits & 0x00000080u) {
      bcm_highbeamlampstatus_ = from.bcm_highbeamlampstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      bcm_lowbeamlampstatus_ = from.bcm_lowbeamlampstatus_;
    }
    if (cached_has_bits & 0x00000200u) {
      bcm_positionlampstatus_ = from.bcm_positionlampstatus_;
    }
    if (cached_has_bits & 0x00000400u) {
      bcm_hazardlampstatus_ = from.bcm_hazardlampstatus_;
    }
    if (cached_has_bits & 0x00000800u) {
      bcm_rightturnlampstatus_ = from.bcm_rightturnlampstatus_;
    }
    if (cached_has_bits & 0x00001000u) {
      bcm_leftturnlampstatus_ = from.bcm_leftturnlampstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Bcm_bodysts_0x344_344::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bcm_bodysts_0x344_344::CopyFrom(const Bcm_bodysts_0x344_344& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Bcm_bodysts_0x344_344)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bcm_bodysts_0x344_344::IsInitialized() const {
  return true;
}

void Bcm_bodysts_0x344_344::Swap(Bcm_bodysts_0x344_344* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bcm_bodysts_0x344_344::InternalSwap(Bcm_bodysts_0x344_344* other) {
  std::swap(bcm_brakelampstatus_, other->bcm_brakelampstatus_);
  std::swap(bcm_rearfoglampstatus_, other->bcm_rearfoglampstatus_);
  std::swap(bcm_frontfoglampstatus_, other->bcm_frontfoglampstatus_);
  std::swap(bcm_washerstatus_, other->bcm_washerstatus_);
  std::swap(bcm_wiperstatus_, other->bcm_wiperstatus_);
  std::swap(bcm_doorlockfeedback_, other->bcm_doorlockfeedback_);
  std::swap(bcm_hornstatus_, other->bcm_hornstatus_);
  std::swap(bcm_highbeamlampstatus_, other->bcm_highbeamlampstatus_);
  std::swap(bcm_lowbeamlampstatus_, other->bcm_lowbeamlampstatus_);
  std::swap(bcm_positionlampstatus_, other->bcm_positionlampstatus_);
  std::swap(bcm_hazardlampstatus_, other->bcm_hazardlampstatus_);
  std::swap(bcm_rightturnlampstatus_, other->bcm_rightturnlampstatus_);
  std::swap(bcm_leftturnlampstatus_, other->bcm_leftturnlampstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bcm_bodysts_0x344_344::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bcm_bodysts_0x344_344

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_brakelampstatusType bcm_brakelampstatus = 1;
bool Bcm_bodysts_0x344_344::has_bcm_brakelampstatus() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_brakelampstatus() {
  _has_bits_[0] |= 0x00000001u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_brakelampstatus() {
  _has_bits_[0] &= ~0x00000001u;
}
void Bcm_bodysts_0x344_344::clear_bcm_brakelampstatus() {
  bcm_brakelampstatus_ = 0;
  clear_has_bcm_brakelampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType Bcm_bodysts_0x344_344::bcm_brakelampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_brakelampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType >(bcm_brakelampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_brakelampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_brakelampstatusType_IsValid(value));
  set_has_bcm_brakelampstatus();
  bcm_brakelampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_brakelampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rearfoglampstatusType bcm_rearfoglampstatus = 2;
bool Bcm_bodysts_0x344_344::has_bcm_rearfoglampstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_rearfoglampstatus() {
  _has_bits_[0] |= 0x00000002u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_rearfoglampstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
void Bcm_bodysts_0x344_344::clear_bcm_rearfoglampstatus() {
  bcm_rearfoglampstatus_ = 0;
  clear_has_bcm_rearfoglampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType Bcm_bodysts_0x344_344::bcm_rearfoglampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_rearfoglampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType >(bcm_rearfoglampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_rearfoglampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rearfoglampstatusType_IsValid(value));
  set_has_bcm_rearfoglampstatus();
  bcm_rearfoglampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_rearfoglampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_frontfoglampstatusType bcm_frontfoglampstatus = 3;
bool Bcm_bodysts_0x344_344::has_bcm_frontfoglampstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_frontfoglampstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_frontfoglampstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Bcm_bodysts_0x344_344::clear_bcm_frontfoglampstatus() {
  bcm_frontfoglampstatus_ = 0;
  clear_has_bcm_frontfoglampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType Bcm_bodysts_0x344_344::bcm_frontfoglampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_frontfoglampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType >(bcm_frontfoglampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_frontfoglampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_frontfoglampstatusType_IsValid(value));
  set_has_bcm_frontfoglampstatus();
  bcm_frontfoglampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_frontfoglampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_washerstatusType bcm_washerstatus = 4;
bool Bcm_bodysts_0x344_344::has_bcm_washerstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_washerstatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_washerstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Bcm_bodysts_0x344_344::clear_bcm_washerstatus() {
  bcm_washerstatus_ = 0;
  clear_has_bcm_washerstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType Bcm_bodysts_0x344_344::bcm_washerstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_washerstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType >(bcm_washerstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_washerstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_washerstatusType_IsValid(value));
  set_has_bcm_washerstatus();
  bcm_washerstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_washerstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_wiperstatusType bcm_wiperstatus = 5;
bool Bcm_bodysts_0x344_344::has_bcm_wiperstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_wiperstatus() {
  _has_bits_[0] |= 0x00000010u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_wiperstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void Bcm_bodysts_0x344_344::clear_bcm_wiperstatus() {
  bcm_wiperstatus_ = 0;
  clear_has_bcm_wiperstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType Bcm_bodysts_0x344_344::bcm_wiperstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_wiperstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType >(bcm_wiperstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_wiperstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_wiperstatusType_IsValid(value));
  set_has_bcm_wiperstatus();
  bcm_wiperstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_wiperstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_doorlockfeedbackType bcm_doorlockfeedback = 6;
bool Bcm_bodysts_0x344_344::has_bcm_doorlockfeedback() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_doorlockfeedback() {
  _has_bits_[0] |= 0x00000020u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_doorlockfeedback() {
  _has_bits_[0] &= ~0x00000020u;
}
void Bcm_bodysts_0x344_344::clear_bcm_doorlockfeedback() {
  bcm_doorlockfeedback_ = 0;
  clear_has_bcm_doorlockfeedback();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType Bcm_bodysts_0x344_344::bcm_doorlockfeedback() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_doorlockfeedback)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType >(bcm_doorlockfeedback_);
}
void Bcm_bodysts_0x344_344::set_bcm_doorlockfeedback(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_doorlockfeedbackType_IsValid(value));
  set_has_bcm_doorlockfeedback();
  bcm_doorlockfeedback_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_doorlockfeedback)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hornstatusType bcm_hornstatus = 7;
bool Bcm_bodysts_0x344_344::has_bcm_hornstatus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_hornstatus() {
  _has_bits_[0] |= 0x00000040u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_hornstatus() {
  _has_bits_[0] &= ~0x00000040u;
}
void Bcm_bodysts_0x344_344::clear_bcm_hornstatus() {
  bcm_hornstatus_ = 0;
  clear_has_bcm_hornstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType Bcm_bodysts_0x344_344::bcm_hornstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_hornstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType >(bcm_hornstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_hornstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hornstatusType_IsValid(value));
  set_has_bcm_hornstatus();
  bcm_hornstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_hornstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_highbeamlampstatusType bcm_highbeamlampstatus = 8;
bool Bcm_bodysts_0x344_344::has_bcm_highbeamlampstatus() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_highbeamlampstatus() {
  _has_bits_[0] |= 0x00000080u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_highbeamlampstatus() {
  _has_bits_[0] &= ~0x00000080u;
}
void Bcm_bodysts_0x344_344::clear_bcm_highbeamlampstatus() {
  bcm_highbeamlampstatus_ = 0;
  clear_has_bcm_highbeamlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType Bcm_bodysts_0x344_344::bcm_highbeamlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_highbeamlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType >(bcm_highbeamlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_highbeamlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_highbeamlampstatusType_IsValid(value));
  set_has_bcm_highbeamlampstatus();
  bcm_highbeamlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_highbeamlampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_lowbeamlampstatusType bcm_lowbeamlampstatus = 9;
bool Bcm_bodysts_0x344_344::has_bcm_lowbeamlampstatus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_lowbeamlampstatus() {
  _has_bits_[0] |= 0x00000100u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_lowbeamlampstatus() {
  _has_bits_[0] &= ~0x00000100u;
}
void Bcm_bodysts_0x344_344::clear_bcm_lowbeamlampstatus() {
  bcm_lowbeamlampstatus_ = 0;
  clear_has_bcm_lowbeamlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType Bcm_bodysts_0x344_344::bcm_lowbeamlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_lowbeamlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType >(bcm_lowbeamlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_lowbeamlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_lowbeamlampstatusType_IsValid(value));
  set_has_bcm_lowbeamlampstatus();
  bcm_lowbeamlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_lowbeamlampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_positionlampstatusType bcm_positionlampstatus = 10;
bool Bcm_bodysts_0x344_344::has_bcm_positionlampstatus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_positionlampstatus() {
  _has_bits_[0] |= 0x00000200u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_positionlampstatus() {
  _has_bits_[0] &= ~0x00000200u;
}
void Bcm_bodysts_0x344_344::clear_bcm_positionlampstatus() {
  bcm_positionlampstatus_ = 0;
  clear_has_bcm_positionlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType Bcm_bodysts_0x344_344::bcm_positionlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_positionlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType >(bcm_positionlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_positionlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_positionlampstatusType_IsValid(value));
  set_has_bcm_positionlampstatus();
  bcm_positionlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_positionlampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_hazardlampstatusType bcm_hazardlampstatus = 11;
bool Bcm_bodysts_0x344_344::has_bcm_hazardlampstatus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_hazardlampstatus() {
  _has_bits_[0] |= 0x00000400u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_hazardlampstatus() {
  _has_bits_[0] &= ~0x00000400u;
}
void Bcm_bodysts_0x344_344::clear_bcm_hazardlampstatus() {
  bcm_hazardlampstatus_ = 0;
  clear_has_bcm_hazardlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType Bcm_bodysts_0x344_344::bcm_hazardlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_hazardlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType >(bcm_hazardlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_hazardlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_hazardlampstatusType_IsValid(value));
  set_has_bcm_hazardlampstatus();
  bcm_hazardlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_hazardlampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_rightturnlampstatusType bcm_rightturnlampstatus = 12;
bool Bcm_bodysts_0x344_344::has_bcm_rightturnlampstatus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_rightturnlampstatus() {
  _has_bits_[0] |= 0x00000800u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_rightturnlampstatus() {
  _has_bits_[0] &= ~0x00000800u;
}
void Bcm_bodysts_0x344_344::clear_bcm_rightturnlampstatus() {
  bcm_rightturnlampstatus_ = 0;
  clear_has_bcm_rightturnlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType Bcm_bodysts_0x344_344::bcm_rightturnlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_rightturnlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType >(bcm_rightturnlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_rightturnlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_rightturnlampstatusType_IsValid(value));
  set_has_bcm_rightturnlampstatus();
  bcm_rightturnlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_rightturnlampstatus)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344.Bcm_leftturnlampstatusType bcm_leftturnlampstatus = 13;
bool Bcm_bodysts_0x344_344::has_bcm_leftturnlampstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Bcm_bodysts_0x344_344::set_has_bcm_leftturnlampstatus() {
  _has_bits_[0] |= 0x00001000u;
}
void Bcm_bodysts_0x344_344::clear_has_bcm_leftturnlampstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
void Bcm_bodysts_0x344_344::clear_bcm_leftturnlampstatus() {
  bcm_leftturnlampstatus_ = 0;
  clear_has_bcm_leftturnlampstatus();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType Bcm_bodysts_0x344_344::bcm_leftturnlampstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_leftturnlampstatus)
  return static_cast< ::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType >(bcm_leftturnlampstatus_);
}
void Bcm_bodysts_0x344_344::set_bcm_leftturnlampstatus(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType value) {
  assert(::jmc_auto::canbus::Bcm_bodysts_0x344_344_Bcm_leftturnlampstatusType_IsValid(value));
  set_has_bcm_leftturnlampstatus();
  bcm_leftturnlampstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Bcm_bodysts_0x344_344.bcm_leftturnlampstatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_bms_display_0x323_323::kChecksum0X323FieldNumber;
const int Gw_bms_display_0x323_323::kRollingCounter0X323FieldNumber;
const int Gw_bms_display_0x323_323::kBmsConsumeqEstFieldNumber;
const int Gw_bms_display_0x323_323::kBmsAvailableeqEstFieldNumber;
const int Gw_bms_display_0x323_323::kBmsSohEstFieldNumber;
const int Gw_bms_display_0x323_323::kBmsSocdisplayEstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_bms_display_0x323_323::Gw_bms_display_0x323_323()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_bms_display_0x323_323)
}
Gw_bms_display_0x323_323::Gw_bms_display_0x323_323(const Gw_bms_display_0x323_323& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x323_, &from.checksum_0x323_,
    reinterpret_cast<char*>(&bms_socdisplay_est_) -
    reinterpret_cast<char*>(&checksum_0x323_) + sizeof(bms_socdisplay_est_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_bms_display_0x323_323)
}

void Gw_bms_display_0x323_323::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x323_, 0, reinterpret_cast<char*>(&bms_socdisplay_est_) -
    reinterpret_cast<char*>(&checksum_0x323_) + sizeof(bms_socdisplay_est_));
}

Gw_bms_display_0x323_323::~Gw_bms_display_0x323_323() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_bms_display_0x323_323)
  SharedDtor();
}

void Gw_bms_display_0x323_323::SharedDtor() {
}

void Gw_bms_display_0x323_323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_bms_display_0x323_323::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_bms_display_0x323_323& Gw_bms_display_0x323_323::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_bms_display_0x323_323* Gw_bms_display_0x323_323::New(::google::protobuf::Arena* arena) const {
  Gw_bms_display_0x323_323* n = new Gw_bms_display_0x323_323;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_bms_display_0x323_323::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&checksum_0x323_, 0, reinterpret_cast<char*>(&bms_socdisplay_est_) -
      reinterpret_cast<char*>(&checksum_0x323_) + sizeof(bms_socdisplay_est_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_bms_display_0x323_323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x323 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x323();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x323_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x323 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x323();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x323_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_consumeq_est = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_bms_consumeq_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_consumeq_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_availableeq_est = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_bms_availableeq_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_availableeq_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_soh_est = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_bms_soh_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_soh_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_socdisplay_est = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_bms_socdisplay_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_socdisplay_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_bms_display_0x323_323)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_bms_display_0x323_323)
  return false;
#undef DO_
}

void Gw_bms_display_0x323_323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x323 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x323(), output);
  }

  // optional int32 rolling_counter_0x323 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x323(), output);
  }

  // optional double bms_consumeq_est = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->bms_consumeq_est(), output);
  }

  // optional double bms_availableeq_est = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->bms_availableeq_est(), output);
  }

  // optional double bms_soh_est = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bms_soh_est(), output);
  }

  // optional double bms_socdisplay_est = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bms_socdisplay_est(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_bms_display_0x323_323)
}

::google::protobuf::uint8* Gw_bms_display_0x323_323::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x323 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x323(), target);
  }

  // optional int32 rolling_counter_0x323 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x323(), target);
  }

  // optional double bms_consumeq_est = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->bms_consumeq_est(), target);
  }

  // optional double bms_availableeq_est = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->bms_availableeq_est(), target);
  }

  // optional double bms_soh_est = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bms_soh_est(), target);
  }

  // optional double bms_socdisplay_est = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bms_socdisplay_est(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_bms_display_0x323_323)
  return target;
}

size_t Gw_bms_display_0x323_323::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 checksum_0x323 = 1;
    if (has_checksum_0x323()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x323());
    }

    // optional int32 rolling_counter_0x323 = 2;
    if (has_rolling_counter_0x323()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x323());
    }

    // optional double bms_consumeq_est = 3;
    if (has_bms_consumeq_est()) {
      total_size += 1 + 8;
    }

    // optional double bms_availableeq_est = 4;
    if (has_bms_availableeq_est()) {
      total_size += 1 + 8;
    }

    // optional double bms_soh_est = 5;
    if (has_bms_soh_est()) {
      total_size += 1 + 8;
    }

    // optional double bms_socdisplay_est = 6;
    if (has_bms_socdisplay_est()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_bms_display_0x323_323::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_bms_display_0x323_323* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_bms_display_0x323_323>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_bms_display_0x323_323)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_bms_display_0x323_323)
    MergeFrom(*source);
  }
}

void Gw_bms_display_0x323_323::MergeFrom(const Gw_bms_display_0x323_323& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x323_ = from.checksum_0x323_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x323_ = from.rolling_counter_0x323_;
    }
    if (cached_has_bits & 0x00000004u) {
      bms_consumeq_est_ = from.bms_consumeq_est_;
    }
    if (cached_has_bits & 0x00000008u) {
      bms_availableeq_est_ = from.bms_availableeq_est_;
    }
    if (cached_has_bits & 0x00000010u) {
      bms_soh_est_ = from.bms_soh_est_;
    }
    if (cached_has_bits & 0x00000020u) {
      bms_socdisplay_est_ = from.bms_socdisplay_est_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_bms_display_0x323_323::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_bms_display_0x323_323::CopyFrom(const Gw_bms_display_0x323_323& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_bms_display_0x323_323)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_bms_display_0x323_323::IsInitialized() const {
  return true;
}

void Gw_bms_display_0x323_323::Swap(Gw_bms_display_0x323_323* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_bms_display_0x323_323::InternalSwap(Gw_bms_display_0x323_323* other) {
  std::swap(checksum_0x323_, other->checksum_0x323_);
  std::swap(rolling_counter_0x323_, other->rolling_counter_0x323_);
  std::swap(bms_consumeq_est_, other->bms_consumeq_est_);
  std::swap(bms_availableeq_est_, other->bms_availableeq_est_);
  std::swap(bms_soh_est_, other->bms_soh_est_);
  std::swap(bms_socdisplay_est_, other->bms_socdisplay_est_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_bms_display_0x323_323::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_bms_display_0x323_323

// optional int32 checksum_0x323 = 1;
bool Gw_bms_display_0x323_323::has_checksum_0x323() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_bms_display_0x323_323::set_has_checksum_0x323() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_bms_display_0x323_323::clear_has_checksum_0x323() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_bms_display_0x323_323::clear_checksum_0x323() {
  checksum_0x323_ = 0;
  clear_has_checksum_0x323();
}
::google::protobuf::int32 Gw_bms_display_0x323_323::checksum_0x323() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.checksum_0x323)
  return checksum_0x323_;
}
void Gw_bms_display_0x323_323::set_checksum_0x323(::google::protobuf::int32 value) {
  set_has_checksum_0x323();
  checksum_0x323_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.checksum_0x323)
}

// optional int32 rolling_counter_0x323 = 2;
bool Gw_bms_display_0x323_323::has_rolling_counter_0x323() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_bms_display_0x323_323::set_has_rolling_counter_0x323() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_bms_display_0x323_323::clear_has_rolling_counter_0x323() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_bms_display_0x323_323::clear_rolling_counter_0x323() {
  rolling_counter_0x323_ = 0;
  clear_has_rolling_counter_0x323();
}
::google::protobuf::int32 Gw_bms_display_0x323_323::rolling_counter_0x323() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.rolling_counter_0x323)
  return rolling_counter_0x323_;
}
void Gw_bms_display_0x323_323::set_rolling_counter_0x323(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x323();
  rolling_counter_0x323_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.rolling_counter_0x323)
}

// optional double bms_consumeq_est = 3;
bool Gw_bms_display_0x323_323::has_bms_consumeq_est() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_bms_display_0x323_323::set_has_bms_consumeq_est() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_bms_display_0x323_323::clear_has_bms_consumeq_est() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_bms_display_0x323_323::clear_bms_consumeq_est() {
  bms_consumeq_est_ = 0;
  clear_has_bms_consumeq_est();
}
double Gw_bms_display_0x323_323::bms_consumeq_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_consumeq_est)
  return bms_consumeq_est_;
}
void Gw_bms_display_0x323_323::set_bms_consumeq_est(double value) {
  set_has_bms_consumeq_est();
  bms_consumeq_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_consumeq_est)
}

// optional double bms_availableeq_est = 4;
bool Gw_bms_display_0x323_323::has_bms_availableeq_est() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_bms_display_0x323_323::set_has_bms_availableeq_est() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_bms_display_0x323_323::clear_has_bms_availableeq_est() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_bms_display_0x323_323::clear_bms_availableeq_est() {
  bms_availableeq_est_ = 0;
  clear_has_bms_availableeq_est();
}
double Gw_bms_display_0x323_323::bms_availableeq_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_availableeq_est)
  return bms_availableeq_est_;
}
void Gw_bms_display_0x323_323::set_bms_availableeq_est(double value) {
  set_has_bms_availableeq_est();
  bms_availableeq_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_availableeq_est)
}

// optional double bms_soh_est = 5;
bool Gw_bms_display_0x323_323::has_bms_soh_est() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_bms_display_0x323_323::set_has_bms_soh_est() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_bms_display_0x323_323::clear_has_bms_soh_est() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_bms_display_0x323_323::clear_bms_soh_est() {
  bms_soh_est_ = 0;
  clear_has_bms_soh_est();
}
double Gw_bms_display_0x323_323::bms_soh_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_soh_est)
  return bms_soh_est_;
}
void Gw_bms_display_0x323_323::set_bms_soh_est(double value) {
  set_has_bms_soh_est();
  bms_soh_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_soh_est)
}

// optional double bms_socdisplay_est = 6;
bool Gw_bms_display_0x323_323::has_bms_socdisplay_est() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_bms_display_0x323_323::set_has_bms_socdisplay_est() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_bms_display_0x323_323::clear_has_bms_socdisplay_est() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_bms_display_0x323_323::clear_bms_socdisplay_est() {
  bms_socdisplay_est_ = 0;
  clear_has_bms_socdisplay_est();
}
double Gw_bms_display_0x323_323::bms_socdisplay_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_socdisplay_est)
  return bms_socdisplay_est_;
}
void Gw_bms_display_0x323_323::set_bms_socdisplay_est(double value) {
  set_has_bms_socdisplay_est();
  bms_socdisplay_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_display_0x323_323.bms_socdisplay_est)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adu_bodycontrol_0x333_333::kAduRearfoglampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduFrontfoglampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduWashercontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduWipercontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduDoorcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduHorncontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduHighbeamlampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduLowbeamlampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduPositionlampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduHazardlampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduRightturnlampcontrolFieldNumber;
const int Adu_bodycontrol_0x333_333::kAduLeftturnlampcontrolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adu_bodycontrol_0x333_333::Adu_bodycontrol_0x333_333()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
}
Adu_bodycontrol_0x333_333::Adu_bodycontrol_0x333_333(const Adu_bodycontrol_0x333_333& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&adu_rearfoglampcontrol_, &from.adu_rearfoglampcontrol_,
    reinterpret_cast<char*>(&adu_leftturnlampcontrol_) -
    reinterpret_cast<char*>(&adu_rearfoglampcontrol_) + sizeof(adu_leftturnlampcontrol_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
}

void Adu_bodycontrol_0x333_333::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&adu_rearfoglampcontrol_, 0, reinterpret_cast<char*>(&adu_leftturnlampcontrol_) -
    reinterpret_cast<char*>(&adu_rearfoglampcontrol_) + sizeof(adu_leftturnlampcontrol_));
}

Adu_bodycontrol_0x333_333::~Adu_bodycontrol_0x333_333() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  SharedDtor();
}

void Adu_bodycontrol_0x333_333::SharedDtor() {
}

void Adu_bodycontrol_0x333_333::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Adu_bodycontrol_0x333_333::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adu_bodycontrol_0x333_333& Adu_bodycontrol_0x333_333::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Adu_bodycontrol_0x333_333* Adu_bodycontrol_0x333_333::New(::google::protobuf::Arena* arena) const {
  Adu_bodycontrol_0x333_333* n = new Adu_bodycontrol_0x333_333;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Adu_bodycontrol_0x333_333::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&adu_rearfoglampcontrol_, 0, reinterpret_cast<char*>(&adu_lowbeamlampcontrol_) -
      reinterpret_cast<char*>(&adu_rearfoglampcontrol_) + sizeof(adu_lowbeamlampcontrol_));
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ::memset(&adu_positionlampcontrol_, 0, reinterpret_cast<char*>(&adu_leftturnlampcontrol_) -
      reinterpret_cast<char*>(&adu_positionlampcontrol_) + sizeof(adu_leftturnlampcontrol_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Adu_bodycontrol_0x333_333::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rearfoglampcontrolType adu_rearfoglampcontrol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType_IsValid(value)) {
            set_adu_rearfoglampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_frontfoglampcontrolType adu_frontfoglampcontrol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType_IsValid(value)) {
            set_adu_frontfoglampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_washercontrolType adu_washercontrol = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType_IsValid(value)) {
            set_adu_washercontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_wipercontrolType adu_wipercontrol = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType_IsValid(value)) {
            set_adu_wipercontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_doorcontrolType adu_doorcontrol = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType_IsValid(value)) {
            set_adu_doorcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_horncontrolType adu_horncontrol = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType_IsValid(value)) {
            set_adu_horncontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_highbeamlampcontrolType adu_highbeamlampcontrol = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType_IsValid(value)) {
            set_adu_highbeamlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_lowbeamlampcontrolType adu_lowbeamlampcontrol = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType_IsValid(value)) {
            set_adu_lowbeamlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_positionlampcontrolType adu_positionlampcontrol = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType_IsValid(value)) {
            set_adu_positionlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_hazardlampcontrolType adu_hazardlampcontrol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType_IsValid(value)) {
            set_adu_hazardlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rightturnlampcontrolType adu_rightturnlampcontrol = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType_IsValid(value)) {
            set_adu_rightturnlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_leftturnlampcontrolType adu_leftturnlampcontrol = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType_IsValid(value)) {
            set_adu_leftturnlampcontrol(static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  return false;
#undef DO_
}

void Adu_bodycontrol_0x333_333::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rearfoglampcontrolType adu_rearfoglampcontrol = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->adu_rearfoglampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_frontfoglampcontrolType adu_frontfoglampcontrol = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->adu_frontfoglampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_washercontrolType adu_washercontrol = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->adu_washercontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_wipercontrolType adu_wipercontrol = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->adu_wipercontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_doorcontrolType adu_doorcontrol = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->adu_doorcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_horncontrolType adu_horncontrol = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->adu_horncontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_highbeamlampcontrolType adu_highbeamlampcontrol = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->adu_highbeamlampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_lowbeamlampcontrolType adu_lowbeamlampcontrol = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->adu_lowbeamlampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_positionlampcontrolType adu_positionlampcontrol = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->adu_positionlampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_hazardlampcontrolType adu_hazardlampcontrol = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->adu_hazardlampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rightturnlampcontrolType adu_rightturnlampcontrol = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->adu_rightturnlampcontrol(), output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_leftturnlampcontrolType adu_leftturnlampcontrol = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->adu_leftturnlampcontrol(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
}

::google::protobuf::uint8* Adu_bodycontrol_0x333_333::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rearfoglampcontrolType adu_rearfoglampcontrol = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->adu_rearfoglampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_frontfoglampcontrolType adu_frontfoglampcontrol = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->adu_frontfoglampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_washercontrolType adu_washercontrol = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->adu_washercontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_wipercontrolType adu_wipercontrol = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->adu_wipercontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_doorcontrolType adu_doorcontrol = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->adu_doorcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_horncontrolType adu_horncontrol = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->adu_horncontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_highbeamlampcontrolType adu_highbeamlampcontrol = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->adu_highbeamlampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_lowbeamlampcontrolType adu_lowbeamlampcontrol = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->adu_lowbeamlampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_positionlampcontrolType adu_positionlampcontrol = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->adu_positionlampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_hazardlampcontrolType adu_hazardlampcontrol = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->adu_hazardlampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rightturnlampcontrolType adu_rightturnlampcontrol = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->adu_rightturnlampcontrol(), target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_leftturnlampcontrolType adu_leftturnlampcontrol = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->adu_leftturnlampcontrol(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  return target;
}

size_t Adu_bodycontrol_0x333_333::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rearfoglampcontrolType adu_rearfoglampcontrol = 1;
    if (has_adu_rearfoglampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_rearfoglampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_frontfoglampcontrolType adu_frontfoglampcontrol = 2;
    if (has_adu_frontfoglampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_frontfoglampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_washercontrolType adu_washercontrol = 3;
    if (has_adu_washercontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_washercontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_wipercontrolType adu_wipercontrol = 4;
    if (has_adu_wipercontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_wipercontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_doorcontrolType adu_doorcontrol = 5;
    if (has_adu_doorcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_doorcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_horncontrolType adu_horncontrol = 6;
    if (has_adu_horncontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_horncontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_highbeamlampcontrolType adu_highbeamlampcontrol = 7;
    if (has_adu_highbeamlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_highbeamlampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_lowbeamlampcontrolType adu_lowbeamlampcontrol = 8;
    if (has_adu_lowbeamlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_lowbeamlampcontrol());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_positionlampcontrolType adu_positionlampcontrol = 9;
    if (has_adu_positionlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_positionlampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_hazardlampcontrolType adu_hazardlampcontrol = 10;
    if (has_adu_hazardlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_hazardlampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rightturnlampcontrolType adu_rightturnlampcontrol = 11;
    if (has_adu_rightturnlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_rightturnlampcontrol());
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_leftturnlampcontrolType adu_leftturnlampcontrol = 12;
    if (has_adu_leftturnlampcontrol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->adu_leftturnlampcontrol());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Adu_bodycontrol_0x333_333::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  GOOGLE_DCHECK_NE(&from, this);
  const Adu_bodycontrol_0x333_333* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adu_bodycontrol_0x333_333>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
    MergeFrom(*source);
  }
}

void Adu_bodycontrol_0x333_333::MergeFrom(const Adu_bodycontrol_0x333_333& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      adu_rearfoglampcontrol_ = from.adu_rearfoglampcontrol_;
    }
    if (cached_has_bits & 0x00000002u) {
      adu_frontfoglampcontrol_ = from.adu_frontfoglampcontrol_;
    }
    if (cached_has_bits & 0x00000004u) {
      adu_washercontrol_ = from.adu_washercontrol_;
    }
    if (cached_has_bits & 0x00000008u) {
      adu_wipercontrol_ = from.adu_wipercontrol_;
    }
    if (cached_has_bits & 0x00000010u) {
      adu_doorcontrol_ = from.adu_doorcontrol_;
    }
    if (cached_has_bits & 0x00000020u) {
      adu_horncontrol_ = from.adu_horncontrol_;
    }
    if (cached_has_bits & 0x00000040u) {
      adu_highbeamlampcontrol_ = from.adu_highbeamlampcontrol_;
    }
    if (cached_has_bits & 0x00000080u) {
      adu_lowbeamlampcontrol_ = from.adu_lowbeamlampcontrol_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      adu_positionlampcontrol_ = from.adu_positionlampcontrol_;
    }
    if (cached_has_bits & 0x00000200u) {
      adu_hazardlampcontrol_ = from.adu_hazardlampcontrol_;
    }
    if (cached_has_bits & 0x00000400u) {
      adu_rightturnlampcontrol_ = from.adu_rightturnlampcontrol_;
    }
    if (cached_has_bits & 0x00000800u) {
      adu_leftturnlampcontrol_ = from.adu_leftturnlampcontrol_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Adu_bodycontrol_0x333_333::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adu_bodycontrol_0x333_333::CopyFrom(const Adu_bodycontrol_0x333_333& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Adu_bodycontrol_0x333_333)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adu_bodycontrol_0x333_333::IsInitialized() const {
  return true;
}

void Adu_bodycontrol_0x333_333::Swap(Adu_bodycontrol_0x333_333* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adu_bodycontrol_0x333_333::InternalSwap(Adu_bodycontrol_0x333_333* other) {
  std::swap(adu_rearfoglampcontrol_, other->adu_rearfoglampcontrol_);
  std::swap(adu_frontfoglampcontrol_, other->adu_frontfoglampcontrol_);
  std::swap(adu_washercontrol_, other->adu_washercontrol_);
  std::swap(adu_wipercontrol_, other->adu_wipercontrol_);
  std::swap(adu_doorcontrol_, other->adu_doorcontrol_);
  std::swap(adu_horncontrol_, other->adu_horncontrol_);
  std::swap(adu_highbeamlampcontrol_, other->adu_highbeamlampcontrol_);
  std::swap(adu_lowbeamlampcontrol_, other->adu_lowbeamlampcontrol_);
  std::swap(adu_positionlampcontrol_, other->adu_positionlampcontrol_);
  std::swap(adu_hazardlampcontrol_, other->adu_hazardlampcontrol_);
  std::swap(adu_rightturnlampcontrol_, other->adu_rightturnlampcontrol_);
  std::swap(adu_leftturnlampcontrol_, other->adu_leftturnlampcontrol_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Adu_bodycontrol_0x333_333::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Adu_bodycontrol_0x333_333

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rearfoglampcontrolType adu_rearfoglampcontrol = 1;
bool Adu_bodycontrol_0x333_333::has_adu_rearfoglampcontrol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_rearfoglampcontrol() {
  _has_bits_[0] |= 0x00000001u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_rearfoglampcontrol() {
  _has_bits_[0] &= ~0x00000001u;
}
void Adu_bodycontrol_0x333_333::clear_adu_rearfoglampcontrol() {
  adu_rearfoglampcontrol_ = 0;
  clear_has_adu_rearfoglampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType Adu_bodycontrol_0x333_333::adu_rearfoglampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_rearfoglampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType >(adu_rearfoglampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_rearfoglampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rearfoglampcontrolType_IsValid(value));
  set_has_adu_rearfoglampcontrol();
  adu_rearfoglampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_rearfoglampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_frontfoglampcontrolType adu_frontfoglampcontrol = 2;
bool Adu_bodycontrol_0x333_333::has_adu_frontfoglampcontrol() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_frontfoglampcontrol() {
  _has_bits_[0] |= 0x00000002u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_frontfoglampcontrol() {
  _has_bits_[0] &= ~0x00000002u;
}
void Adu_bodycontrol_0x333_333::clear_adu_frontfoglampcontrol() {
  adu_frontfoglampcontrol_ = 0;
  clear_has_adu_frontfoglampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType Adu_bodycontrol_0x333_333::adu_frontfoglampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_frontfoglampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType >(adu_frontfoglampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_frontfoglampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_frontfoglampcontrolType_IsValid(value));
  set_has_adu_frontfoglampcontrol();
  adu_frontfoglampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_frontfoglampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_washercontrolType adu_washercontrol = 3;
bool Adu_bodycontrol_0x333_333::has_adu_washercontrol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_washercontrol() {
  _has_bits_[0] |= 0x00000004u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_washercontrol() {
  _has_bits_[0] &= ~0x00000004u;
}
void Adu_bodycontrol_0x333_333::clear_adu_washercontrol() {
  adu_washercontrol_ = 0;
  clear_has_adu_washercontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType Adu_bodycontrol_0x333_333::adu_washercontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_washercontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType >(adu_washercontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_washercontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_washercontrolType_IsValid(value));
  set_has_adu_washercontrol();
  adu_washercontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_washercontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_wipercontrolType adu_wipercontrol = 4;
bool Adu_bodycontrol_0x333_333::has_adu_wipercontrol() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_wipercontrol() {
  _has_bits_[0] |= 0x00000008u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_wipercontrol() {
  _has_bits_[0] &= ~0x00000008u;
}
void Adu_bodycontrol_0x333_333::clear_adu_wipercontrol() {
  adu_wipercontrol_ = 0;
  clear_has_adu_wipercontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType Adu_bodycontrol_0x333_333::adu_wipercontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_wipercontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType >(adu_wipercontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_wipercontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_wipercontrolType_IsValid(value));
  set_has_adu_wipercontrol();
  adu_wipercontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_wipercontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_doorcontrolType adu_doorcontrol = 5;
bool Adu_bodycontrol_0x333_333::has_adu_doorcontrol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_doorcontrol() {
  _has_bits_[0] |= 0x00000010u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_doorcontrol() {
  _has_bits_[0] &= ~0x00000010u;
}
void Adu_bodycontrol_0x333_333::clear_adu_doorcontrol() {
  adu_doorcontrol_ = 0;
  clear_has_adu_doorcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType Adu_bodycontrol_0x333_333::adu_doorcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_doorcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType >(adu_doorcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_doorcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_doorcontrolType_IsValid(value));
  set_has_adu_doorcontrol();
  adu_doorcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_doorcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_horncontrolType adu_horncontrol = 6;
bool Adu_bodycontrol_0x333_333::has_adu_horncontrol() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_horncontrol() {
  _has_bits_[0] |= 0x00000020u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_horncontrol() {
  _has_bits_[0] &= ~0x00000020u;
}
void Adu_bodycontrol_0x333_333::clear_adu_horncontrol() {
  adu_horncontrol_ = 0;
  clear_has_adu_horncontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType Adu_bodycontrol_0x333_333::adu_horncontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_horncontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType >(adu_horncontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_horncontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_horncontrolType_IsValid(value));
  set_has_adu_horncontrol();
  adu_horncontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_horncontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_highbeamlampcontrolType adu_highbeamlampcontrol = 7;
bool Adu_bodycontrol_0x333_333::has_adu_highbeamlampcontrol() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_highbeamlampcontrol() {
  _has_bits_[0] |= 0x00000040u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_highbeamlampcontrol() {
  _has_bits_[0] &= ~0x00000040u;
}
void Adu_bodycontrol_0x333_333::clear_adu_highbeamlampcontrol() {
  adu_highbeamlampcontrol_ = 0;
  clear_has_adu_highbeamlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType Adu_bodycontrol_0x333_333::adu_highbeamlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_highbeamlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType >(adu_highbeamlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_highbeamlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_highbeamlampcontrolType_IsValid(value));
  set_has_adu_highbeamlampcontrol();
  adu_highbeamlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_highbeamlampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_lowbeamlampcontrolType adu_lowbeamlampcontrol = 8;
bool Adu_bodycontrol_0x333_333::has_adu_lowbeamlampcontrol() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_lowbeamlampcontrol() {
  _has_bits_[0] |= 0x00000080u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_lowbeamlampcontrol() {
  _has_bits_[0] &= ~0x00000080u;
}
void Adu_bodycontrol_0x333_333::clear_adu_lowbeamlampcontrol() {
  adu_lowbeamlampcontrol_ = 0;
  clear_has_adu_lowbeamlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType Adu_bodycontrol_0x333_333::adu_lowbeamlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_lowbeamlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType >(adu_lowbeamlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_lowbeamlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_lowbeamlampcontrolType_IsValid(value));
  set_has_adu_lowbeamlampcontrol();
  adu_lowbeamlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_lowbeamlampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_positionlampcontrolType adu_positionlampcontrol = 9;
bool Adu_bodycontrol_0x333_333::has_adu_positionlampcontrol() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_positionlampcontrol() {
  _has_bits_[0] |= 0x00000100u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_positionlampcontrol() {
  _has_bits_[0] &= ~0x00000100u;
}
void Adu_bodycontrol_0x333_333::clear_adu_positionlampcontrol() {
  adu_positionlampcontrol_ = 0;
  clear_has_adu_positionlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType Adu_bodycontrol_0x333_333::adu_positionlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_positionlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType >(adu_positionlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_positionlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_positionlampcontrolType_IsValid(value));
  set_has_adu_positionlampcontrol();
  adu_positionlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_positionlampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_hazardlampcontrolType adu_hazardlampcontrol = 10;
bool Adu_bodycontrol_0x333_333::has_adu_hazardlampcontrol() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_hazardlampcontrol() {
  _has_bits_[0] |= 0x00000200u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_hazardlampcontrol() {
  _has_bits_[0] &= ~0x00000200u;
}
void Adu_bodycontrol_0x333_333::clear_adu_hazardlampcontrol() {
  adu_hazardlampcontrol_ = 0;
  clear_has_adu_hazardlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType Adu_bodycontrol_0x333_333::adu_hazardlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_hazardlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType >(adu_hazardlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_hazardlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_hazardlampcontrolType_IsValid(value));
  set_has_adu_hazardlampcontrol();
  adu_hazardlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_hazardlampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_rightturnlampcontrolType adu_rightturnlampcontrol = 11;
bool Adu_bodycontrol_0x333_333::has_adu_rightturnlampcontrol() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_rightturnlampcontrol() {
  _has_bits_[0] |= 0x00000400u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_rightturnlampcontrol() {
  _has_bits_[0] &= ~0x00000400u;
}
void Adu_bodycontrol_0x333_333::clear_adu_rightturnlampcontrol() {
  adu_rightturnlampcontrol_ = 0;
  clear_has_adu_rightturnlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType Adu_bodycontrol_0x333_333::adu_rightturnlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_rightturnlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType >(adu_rightturnlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_rightturnlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_rightturnlampcontrolType_IsValid(value));
  set_has_adu_rightturnlampcontrol();
  adu_rightturnlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_rightturnlampcontrol)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333.Adu_leftturnlampcontrolType adu_leftturnlampcontrol = 12;
bool Adu_bodycontrol_0x333_333::has_adu_leftturnlampcontrol() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Adu_bodycontrol_0x333_333::set_has_adu_leftturnlampcontrol() {
  _has_bits_[0] |= 0x00000800u;
}
void Adu_bodycontrol_0x333_333::clear_has_adu_leftturnlampcontrol() {
  _has_bits_[0] &= ~0x00000800u;
}
void Adu_bodycontrol_0x333_333::clear_adu_leftturnlampcontrol() {
  adu_leftturnlampcontrol_ = 0;
  clear_has_adu_leftturnlampcontrol();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType Adu_bodycontrol_0x333_333::adu_leftturnlampcontrol() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_leftturnlampcontrol)
  return static_cast< ::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType >(adu_leftturnlampcontrol_);
}
void Adu_bodycontrol_0x333_333::set_adu_leftturnlampcontrol(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType value) {
  assert(::jmc_auto::canbus::Adu_bodycontrol_0x333_333_Adu_leftturnlampcontrolType_IsValid(value));
  set_has_adu_leftturnlampcontrol();
  adu_leftturnlampcontrol_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Adu_bodycontrol_0x333_333.adu_leftturnlampcontrol)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_bms_sts_0x181_181::kChecksum0X181FieldNumber;
const int Gw_bms_sts_0x181_181::kRollingCounter0X181FieldNumber;
const int Gw_bms_sts_0x181_181::kBmsErrLevFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsIduStatusFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsBatbalanceErrFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsSocactualEstFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsPackcurMeasFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsChgStsFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsPackvolMeasFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsBalanceStsFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsPacknumEstFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsHvdownReqFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsHvonoffStsFieldNumber;
const int Gw_bms_sts_0x181_181::kBmsSysStsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_bms_sts_0x181_181::Gw_bms_sts_0x181_181()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_bms_sts_0x181_181)
}
Gw_bms_sts_0x181_181::Gw_bms_sts_0x181_181(const Gw_bms_sts_0x181_181& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x181_, &from.checksum_0x181_,
    reinterpret_cast<char*>(&bms_sys_sts_) -
    reinterpret_cast<char*>(&checksum_0x181_) + sizeof(bms_sys_sts_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_bms_sts_0x181_181)
}

void Gw_bms_sts_0x181_181::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x181_, 0, reinterpret_cast<char*>(&bms_sys_sts_) -
    reinterpret_cast<char*>(&checksum_0x181_) + sizeof(bms_sys_sts_));
}

Gw_bms_sts_0x181_181::~Gw_bms_sts_0x181_181() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  SharedDtor();
}

void Gw_bms_sts_0x181_181::SharedDtor() {
}

void Gw_bms_sts_0x181_181::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_bms_sts_0x181_181::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_bms_sts_0x181_181& Gw_bms_sts_0x181_181::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_bms_sts_0x181_181* Gw_bms_sts_0x181_181::New(::google::protobuf::Arena* arena) const {
  Gw_bms_sts_0x181_181* n = new Gw_bms_sts_0x181_181;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_bms_sts_0x181_181::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&checksum_0x181_, 0, reinterpret_cast<char*>(&bms_packcur_meas_) -
      reinterpret_cast<char*>(&checksum_0x181_) + sizeof(bms_packcur_meas_));
  }
  if (_has_bits_[8 / 32] & 16128u) {
    ::memset(&bms_packvol_meas_, 0, reinterpret_cast<char*>(&bms_sys_sts_) -
      reinterpret_cast<char*>(&bms_packvol_meas_) + sizeof(bms_sys_sts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_bms_sts_0x181_181::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x181 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x181();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x181_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x181 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x181();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x181_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_err_levType bms_err_lev = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType_IsValid(value)) {
            set_bms_err_lev(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_idu_statusType bms_idu_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType_IsValid(value)) {
            set_bms_idu_status(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_batbalance_errType bms_batbalance_err = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType_IsValid(value)) {
            set_bms_batbalance_err(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_socactual_est = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_bms_socactual_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_socactual_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_packcur_meas = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_bms_packcur_meas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_packcur_meas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_chg_stsType bms_chg_sts = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType_IsValid(value)) {
            set_bms_chg_sts(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double bms_packvol_meas = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_bms_packvol_meas();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bms_packvol_meas_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_balance_stsType bms_balance_sts = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType_IsValid(value)) {
            set_bms_balance_sts(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bms_packnum_est = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_bms_packnum_est();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bms_packnum_est_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvdown_reqType bms_hvdown_req = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType_IsValid(value)) {
            set_bms_hvdown_req(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvonoff_stsType bms_hvonoff_sts = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType_IsValid(value)) {
            set_bms_hvonoff_sts(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_sys_stsType bms_sys_sts = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType_IsValid(value)) {
            set_bms_sys_sts(static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  return false;
#undef DO_
}

void Gw_bms_sts_0x181_181::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x181 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x181(), output);
  }

  // optional int32 rolling_counter_0x181 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x181(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_err_levType bms_err_lev = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bms_err_lev(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_idu_statusType bms_idu_status = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bms_idu_status(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_batbalance_errType bms_batbalance_err = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->bms_batbalance_err(), output);
  }

  // optional double bms_socactual_est = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bms_socactual_est(), output);
  }

  // optional double bms_packcur_meas = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->bms_packcur_meas(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_chg_stsType bms_chg_sts = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->bms_chg_sts(), output);
  }

  // optional double bms_packvol_meas = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->bms_packvol_meas(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_balance_stsType bms_balance_sts = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->bms_balance_sts(), output);
  }

  // optional int32 bms_packnum_est = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->bms_packnum_est(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvdown_reqType bms_hvdown_req = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->bms_hvdown_req(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvonoff_stsType bms_hvonoff_sts = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->bms_hvonoff_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_sys_stsType bms_sys_sts = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->bms_sys_sts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_bms_sts_0x181_181)
}

::google::protobuf::uint8* Gw_bms_sts_0x181_181::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x181 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x181(), target);
  }

  // optional int32 rolling_counter_0x181 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x181(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_err_levType bms_err_lev = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bms_err_lev(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_idu_statusType bms_idu_status = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bms_idu_status(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_batbalance_errType bms_batbalance_err = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->bms_batbalance_err(), target);
  }

  // optional double bms_socactual_est = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bms_socactual_est(), target);
  }

  // optional double bms_packcur_meas = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->bms_packcur_meas(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_chg_stsType bms_chg_sts = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->bms_chg_sts(), target);
  }

  // optional double bms_packvol_meas = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->bms_packvol_meas(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_balance_stsType bms_balance_sts = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->bms_balance_sts(), target);
  }

  // optional int32 bms_packnum_est = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->bms_packnum_est(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvdown_reqType bms_hvdown_req = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->bms_hvdown_req(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvonoff_stsType bms_hvonoff_sts = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->bms_hvonoff_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_sys_stsType bms_sys_sts = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->bms_sys_sts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  return target;
}

size_t Gw_bms_sts_0x181_181::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 checksum_0x181 = 1;
    if (has_checksum_0x181()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x181());
    }

    // optional int32 rolling_counter_0x181 = 2;
    if (has_rolling_counter_0x181()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x181());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_err_levType bms_err_lev = 3;
    if (has_bms_err_lev()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_err_lev());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_idu_statusType bms_idu_status = 4;
    if (has_bms_idu_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_idu_status());
    }

    // optional double bms_socactual_est = 6;
    if (has_bms_socactual_est()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_batbalance_errType bms_batbalance_err = 5;
    if (has_bms_batbalance_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_batbalance_err());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_chg_stsType bms_chg_sts = 8;
    if (has_bms_chg_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_chg_sts());
    }

    // optional double bms_packcur_meas = 7;
    if (has_bms_packcur_meas()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional double bms_packvol_meas = 9;
    if (has_bms_packvol_meas()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_balance_stsType bms_balance_sts = 10;
    if (has_bms_balance_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_balance_sts());
    }

    // optional int32 bms_packnum_est = 11;
    if (has_bms_packnum_est()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bms_packnum_est());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvdown_reqType bms_hvdown_req = 12;
    if (has_bms_hvdown_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_hvdown_req());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvonoff_stsType bms_hvonoff_sts = 13;
    if (has_bms_hvonoff_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_hvonoff_sts());
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_sys_stsType bms_sys_sts = 14;
    if (has_bms_sys_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->bms_sys_sts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_bms_sts_0x181_181::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_bms_sts_0x181_181* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_bms_sts_0x181_181>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_bms_sts_0x181_181)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_bms_sts_0x181_181)
    MergeFrom(*source);
  }
}

void Gw_bms_sts_0x181_181::MergeFrom(const Gw_bms_sts_0x181_181& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x181_ = from.checksum_0x181_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x181_ = from.rolling_counter_0x181_;
    }
    if (cached_has_bits & 0x00000004u) {
      bms_err_lev_ = from.bms_err_lev_;
    }
    if (cached_has_bits & 0x00000008u) {
      bms_idu_status_ = from.bms_idu_status_;
    }
    if (cached_has_bits & 0x00000010u) {
      bms_socactual_est_ = from.bms_socactual_est_;
    }
    if (cached_has_bits & 0x00000020u) {
      bms_batbalance_err_ = from.bms_batbalance_err_;
    }
    if (cached_has_bits & 0x00000040u) {
      bms_chg_sts_ = from.bms_chg_sts_;
    }
    if (cached_has_bits & 0x00000080u) {
      bms_packcur_meas_ = from.bms_packcur_meas_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      bms_packvol_meas_ = from.bms_packvol_meas_;
    }
    if (cached_has_bits & 0x00000200u) {
      bms_balance_sts_ = from.bms_balance_sts_;
    }
    if (cached_has_bits & 0x00000400u) {
      bms_packnum_est_ = from.bms_packnum_est_;
    }
    if (cached_has_bits & 0x00000800u) {
      bms_hvdown_req_ = from.bms_hvdown_req_;
    }
    if (cached_has_bits & 0x00001000u) {
      bms_hvonoff_sts_ = from.bms_hvonoff_sts_;
    }
    if (cached_has_bits & 0x00002000u) {
      bms_sys_sts_ = from.bms_sys_sts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_bms_sts_0x181_181::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_bms_sts_0x181_181::CopyFrom(const Gw_bms_sts_0x181_181& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_bms_sts_0x181_181)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_bms_sts_0x181_181::IsInitialized() const {
  return true;
}

void Gw_bms_sts_0x181_181::Swap(Gw_bms_sts_0x181_181* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_bms_sts_0x181_181::InternalSwap(Gw_bms_sts_0x181_181* other) {
  std::swap(checksum_0x181_, other->checksum_0x181_);
  std::swap(rolling_counter_0x181_, other->rolling_counter_0x181_);
  std::swap(bms_err_lev_, other->bms_err_lev_);
  std::swap(bms_idu_status_, other->bms_idu_status_);
  std::swap(bms_socactual_est_, other->bms_socactual_est_);
  std::swap(bms_batbalance_err_, other->bms_batbalance_err_);
  std::swap(bms_chg_sts_, other->bms_chg_sts_);
  std::swap(bms_packcur_meas_, other->bms_packcur_meas_);
  std::swap(bms_packvol_meas_, other->bms_packvol_meas_);
  std::swap(bms_balance_sts_, other->bms_balance_sts_);
  std::swap(bms_packnum_est_, other->bms_packnum_est_);
  std::swap(bms_hvdown_req_, other->bms_hvdown_req_);
  std::swap(bms_hvonoff_sts_, other->bms_hvonoff_sts_);
  std::swap(bms_sys_sts_, other->bms_sys_sts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_bms_sts_0x181_181::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_bms_sts_0x181_181

// optional int32 checksum_0x181 = 1;
bool Gw_bms_sts_0x181_181::has_checksum_0x181() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_checksum_0x181() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_bms_sts_0x181_181::clear_has_checksum_0x181() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_bms_sts_0x181_181::clear_checksum_0x181() {
  checksum_0x181_ = 0;
  clear_has_checksum_0x181();
}
::google::protobuf::int32 Gw_bms_sts_0x181_181::checksum_0x181() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.checksum_0x181)
  return checksum_0x181_;
}
void Gw_bms_sts_0x181_181::set_checksum_0x181(::google::protobuf::int32 value) {
  set_has_checksum_0x181();
  checksum_0x181_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.checksum_0x181)
}

// optional int32 rolling_counter_0x181 = 2;
bool Gw_bms_sts_0x181_181::has_rolling_counter_0x181() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_rolling_counter_0x181() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_bms_sts_0x181_181::clear_has_rolling_counter_0x181() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_bms_sts_0x181_181::clear_rolling_counter_0x181() {
  rolling_counter_0x181_ = 0;
  clear_has_rolling_counter_0x181();
}
::google::protobuf::int32 Gw_bms_sts_0x181_181::rolling_counter_0x181() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.rolling_counter_0x181)
  return rolling_counter_0x181_;
}
void Gw_bms_sts_0x181_181::set_rolling_counter_0x181(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x181();
  rolling_counter_0x181_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.rolling_counter_0x181)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_err_levType bms_err_lev = 3;
bool Gw_bms_sts_0x181_181::has_bms_err_lev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_err_lev() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_err_lev() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_bms_sts_0x181_181::clear_bms_err_lev() {
  bms_err_lev_ = 0;
  clear_has_bms_err_lev();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType Gw_bms_sts_0x181_181::bms_err_lev() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_err_lev)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType >(bms_err_lev_);
}
void Gw_bms_sts_0x181_181::set_bms_err_lev(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_err_levType_IsValid(value));
  set_has_bms_err_lev();
  bms_err_lev_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_err_lev)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_idu_statusType bms_idu_status = 4;
bool Gw_bms_sts_0x181_181::has_bms_idu_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_idu_status() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_idu_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_bms_sts_0x181_181::clear_bms_idu_status() {
  bms_idu_status_ = 0;
  clear_has_bms_idu_status();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType Gw_bms_sts_0x181_181::bms_idu_status() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_idu_status)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType >(bms_idu_status_);
}
void Gw_bms_sts_0x181_181::set_bms_idu_status(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_idu_statusType_IsValid(value));
  set_has_bms_idu_status();
  bms_idu_status_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_idu_status)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_batbalance_errType bms_batbalance_err = 5;
bool Gw_bms_sts_0x181_181::has_bms_batbalance_err() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_batbalance_err() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_batbalance_err() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_bms_sts_0x181_181::clear_bms_batbalance_err() {
  bms_batbalance_err_ = 0;
  clear_has_bms_batbalance_err();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType Gw_bms_sts_0x181_181::bms_batbalance_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_batbalance_err)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType >(bms_batbalance_err_);
}
void Gw_bms_sts_0x181_181::set_bms_batbalance_err(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_batbalance_errType_IsValid(value));
  set_has_bms_batbalance_err();
  bms_batbalance_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_batbalance_err)
}

// optional double bms_socactual_est = 6;
bool Gw_bms_sts_0x181_181::has_bms_socactual_est() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_socactual_est() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_socactual_est() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_bms_sts_0x181_181::clear_bms_socactual_est() {
  bms_socactual_est_ = 0;
  clear_has_bms_socactual_est();
}
double Gw_bms_sts_0x181_181::bms_socactual_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_socactual_est)
  return bms_socactual_est_;
}
void Gw_bms_sts_0x181_181::set_bms_socactual_est(double value) {
  set_has_bms_socactual_est();
  bms_socactual_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_socactual_est)
}

// optional double bms_packcur_meas = 7;
bool Gw_bms_sts_0x181_181::has_bms_packcur_meas() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_packcur_meas() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_packcur_meas() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_bms_sts_0x181_181::clear_bms_packcur_meas() {
  bms_packcur_meas_ = 0;
  clear_has_bms_packcur_meas();
}
double Gw_bms_sts_0x181_181::bms_packcur_meas() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packcur_meas)
  return bms_packcur_meas_;
}
void Gw_bms_sts_0x181_181::set_bms_packcur_meas(double value) {
  set_has_bms_packcur_meas();
  bms_packcur_meas_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packcur_meas)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_chg_stsType bms_chg_sts = 8;
bool Gw_bms_sts_0x181_181::has_bms_chg_sts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_chg_sts() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_chg_sts() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_bms_sts_0x181_181::clear_bms_chg_sts() {
  bms_chg_sts_ = 0;
  clear_has_bms_chg_sts();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType Gw_bms_sts_0x181_181::bms_chg_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_chg_sts)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType >(bms_chg_sts_);
}
void Gw_bms_sts_0x181_181::set_bms_chg_sts(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_chg_stsType_IsValid(value));
  set_has_bms_chg_sts();
  bms_chg_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_chg_sts)
}

// optional double bms_packvol_meas = 9;
bool Gw_bms_sts_0x181_181::has_bms_packvol_meas() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_packvol_meas() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_packvol_meas() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_bms_sts_0x181_181::clear_bms_packvol_meas() {
  bms_packvol_meas_ = 0;
  clear_has_bms_packvol_meas();
}
double Gw_bms_sts_0x181_181::bms_packvol_meas() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packvol_meas)
  return bms_packvol_meas_;
}
void Gw_bms_sts_0x181_181::set_bms_packvol_meas(double value) {
  set_has_bms_packvol_meas();
  bms_packvol_meas_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packvol_meas)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_balance_stsType bms_balance_sts = 10;
bool Gw_bms_sts_0x181_181::has_bms_balance_sts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_balance_sts() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_balance_sts() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_bms_sts_0x181_181::clear_bms_balance_sts() {
  bms_balance_sts_ = 0;
  clear_has_bms_balance_sts();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType Gw_bms_sts_0x181_181::bms_balance_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_balance_sts)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType >(bms_balance_sts_);
}
void Gw_bms_sts_0x181_181::set_bms_balance_sts(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_balance_stsType_IsValid(value));
  set_has_bms_balance_sts();
  bms_balance_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_balance_sts)
}

// optional int32 bms_packnum_est = 11;
bool Gw_bms_sts_0x181_181::has_bms_packnum_est() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_packnum_est() {
  _has_bits_[0] |= 0x00000400u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_packnum_est() {
  _has_bits_[0] &= ~0x00000400u;
}
void Gw_bms_sts_0x181_181::clear_bms_packnum_est() {
  bms_packnum_est_ = 0;
  clear_has_bms_packnum_est();
}
::google::protobuf::int32 Gw_bms_sts_0x181_181::bms_packnum_est() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packnum_est)
  return bms_packnum_est_;
}
void Gw_bms_sts_0x181_181::set_bms_packnum_est(::google::protobuf::int32 value) {
  set_has_bms_packnum_est();
  bms_packnum_est_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_packnum_est)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvdown_reqType bms_hvdown_req = 12;
bool Gw_bms_sts_0x181_181::has_bms_hvdown_req() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_hvdown_req() {
  _has_bits_[0] |= 0x00000800u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_hvdown_req() {
  _has_bits_[0] &= ~0x00000800u;
}
void Gw_bms_sts_0x181_181::clear_bms_hvdown_req() {
  bms_hvdown_req_ = 0;
  clear_has_bms_hvdown_req();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType Gw_bms_sts_0x181_181::bms_hvdown_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_hvdown_req)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType >(bms_hvdown_req_);
}
void Gw_bms_sts_0x181_181::set_bms_hvdown_req(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvdown_reqType_IsValid(value));
  set_has_bms_hvdown_req();
  bms_hvdown_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_hvdown_req)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_hvonoff_stsType bms_hvonoff_sts = 13;
bool Gw_bms_sts_0x181_181::has_bms_hvonoff_sts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_hvonoff_sts() {
  _has_bits_[0] |= 0x00001000u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_hvonoff_sts() {
  _has_bits_[0] &= ~0x00001000u;
}
void Gw_bms_sts_0x181_181::clear_bms_hvonoff_sts() {
  bms_hvonoff_sts_ = 0;
  clear_has_bms_hvonoff_sts();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType Gw_bms_sts_0x181_181::bms_hvonoff_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_hvonoff_sts)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType >(bms_hvonoff_sts_);
}
void Gw_bms_sts_0x181_181::set_bms_hvonoff_sts(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_hvonoff_stsType_IsValid(value));
  set_has_bms_hvonoff_sts();
  bms_hvonoff_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_hvonoff_sts)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181.Bms_sys_stsType bms_sys_sts = 14;
bool Gw_bms_sts_0x181_181::has_bms_sys_sts() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Gw_bms_sts_0x181_181::set_has_bms_sys_sts() {
  _has_bits_[0] |= 0x00002000u;
}
void Gw_bms_sts_0x181_181::clear_has_bms_sys_sts() {
  _has_bits_[0] &= ~0x00002000u;
}
void Gw_bms_sts_0x181_181::clear_bms_sys_sts() {
  bms_sys_sts_ = 0;
  clear_has_bms_sys_sts();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType Gw_bms_sts_0x181_181::bms_sys_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_sys_sts)
  return static_cast< ::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType >(bms_sys_sts_);
}
void Gw_bms_sts_0x181_181::set_bms_sys_sts(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType value) {
  assert(::jmc_auto::canbus::Gw_bms_sts_0x181_181_Bms_sys_stsType_IsValid(value));
  set_has_bms_sys_sts();
  bms_sys_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_bms_sts_0x181_181.bms_sys_sts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_control_0x185_185::kChecksum0X185FieldNumber;
const int Gw_vcu_control_0x185_185::kRollingCounter0X185FieldNumber;
const int Gw_vcu_control_0x185_185::kVcuEmsEngoperationstatusFieldNumber;
const int Gw_vcu_control_0x185_185::kVcuMaxchgpwrAlwFieldNumber;
const int Gw_vcu_control_0x185_185::kVcuMaxdischgpwrAlwFieldNumber;
const int Gw_vcu_control_0x185_185::kVcuMcuAsdReqFieldNumber;
const int Gw_vcu_control_0x185_185::kVcuMcuMotor1CtrmodeReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_control_0x185_185::Gw_vcu_control_0x185_185()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_control_0x185_185)
}
Gw_vcu_control_0x185_185::Gw_vcu_control_0x185_185(const Gw_vcu_control_0x185_185& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x185_, &from.checksum_0x185_,
    reinterpret_cast<char*>(&vcu_mcu_motor1_ctrmode_req_) -
    reinterpret_cast<char*>(&checksum_0x185_) + sizeof(vcu_mcu_motor1_ctrmode_req_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_control_0x185_185)
}

void Gw_vcu_control_0x185_185::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x185_, 0, reinterpret_cast<char*>(&vcu_mcu_motor1_ctrmode_req_) -
    reinterpret_cast<char*>(&checksum_0x185_) + sizeof(vcu_mcu_motor1_ctrmode_req_));
}

Gw_vcu_control_0x185_185::~Gw_vcu_control_0x185_185() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  SharedDtor();
}

void Gw_vcu_control_0x185_185::SharedDtor() {
}

void Gw_vcu_control_0x185_185::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_control_0x185_185::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_control_0x185_185& Gw_vcu_control_0x185_185::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_control_0x185_185* Gw_vcu_control_0x185_185::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_control_0x185_185* n = new Gw_vcu_control_0x185_185;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_control_0x185_185::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&checksum_0x185_, 0, reinterpret_cast<char*>(&vcu_mcu_motor1_ctrmode_req_) -
      reinterpret_cast<char*>(&checksum_0x185_) + sizeof(vcu_mcu_motor1_ctrmode_req_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_control_0x185_185::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x185 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x185();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x185_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x185 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x185();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x185_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_ems_engoperationstatusType vcu_ems_engoperationstatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType_IsValid(value)) {
            set_vcu_ems_engoperationstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_maxchgpwr_alw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_vcu_maxchgpwr_alw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_maxchgpwr_alw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_maxdischgpwr_alw = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_vcu_maxdischgpwr_alw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_maxdischgpwr_alw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_asd_reqType vcu_mcu_asd_req = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType_IsValid(value)) {
            set_vcu_mcu_asd_req(static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_motor1_ctrmode_reqType vcu_mcu_motor1_ctrmode_req = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType_IsValid(value)) {
            set_vcu_mcu_motor1_ctrmode_req(static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  return false;
#undef DO_
}

void Gw_vcu_control_0x185_185::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x185 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x185(), output);
  }

  // optional int32 rolling_counter_0x185 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x185(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_ems_engoperationstatusType vcu_ems_engoperationstatus = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vcu_ems_engoperationstatus(), output);
  }

  // optional double vcu_maxchgpwr_alw = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->vcu_maxchgpwr_alw(), output);
  }

  // optional double vcu_maxdischgpwr_alw = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->vcu_maxdischgpwr_alw(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_asd_reqType vcu_mcu_asd_req = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->vcu_mcu_asd_req(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_motor1_ctrmode_reqType vcu_mcu_motor1_ctrmode_req = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->vcu_mcu_motor1_ctrmode_req(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_control_0x185_185)
}

::google::protobuf::uint8* Gw_vcu_control_0x185_185::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x185 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x185(), target);
  }

  // optional int32 rolling_counter_0x185 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x185(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_ems_engoperationstatusType vcu_ems_engoperationstatus = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vcu_ems_engoperationstatus(), target);
  }

  // optional double vcu_maxchgpwr_alw = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->vcu_maxchgpwr_alw(), target);
  }

  // optional double vcu_maxdischgpwr_alw = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->vcu_maxdischgpwr_alw(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_asd_reqType vcu_mcu_asd_req = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->vcu_mcu_asd_req(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_motor1_ctrmode_reqType vcu_mcu_motor1_ctrmode_req = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->vcu_mcu_motor1_ctrmode_req(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  return target;
}

size_t Gw_vcu_control_0x185_185::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 checksum_0x185 = 1;
    if (has_checksum_0x185()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x185());
    }

    // optional int32 rolling_counter_0x185 = 2;
    if (has_rolling_counter_0x185()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x185());
    }

    // optional double vcu_maxchgpwr_alw = 4;
    if (has_vcu_maxchgpwr_alw()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_ems_engoperationstatusType vcu_ems_engoperationstatus = 3;
    if (has_vcu_ems_engoperationstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_ems_engoperationstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_asd_reqType vcu_mcu_asd_req = 6;
    if (has_vcu_mcu_asd_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_mcu_asd_req());
    }

    // optional double vcu_maxdischgpwr_alw = 5;
    if (has_vcu_maxdischgpwr_alw()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_motor1_ctrmode_reqType vcu_mcu_motor1_ctrmode_req = 7;
    if (has_vcu_mcu_motor1_ctrmode_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_mcu_motor1_ctrmode_req());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_control_0x185_185::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_control_0x185_185* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_control_0x185_185>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_control_0x185_185)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_control_0x185_185)
    MergeFrom(*source);
  }
}

void Gw_vcu_control_0x185_185::MergeFrom(const Gw_vcu_control_0x185_185& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x185_ = from.checksum_0x185_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x185_ = from.rolling_counter_0x185_;
    }
    if (cached_has_bits & 0x00000004u) {
      vcu_maxchgpwr_alw_ = from.vcu_maxchgpwr_alw_;
    }
    if (cached_has_bits & 0x00000008u) {
      vcu_ems_engoperationstatus_ = from.vcu_ems_engoperationstatus_;
    }
    if (cached_has_bits & 0x00000010u) {
      vcu_mcu_asd_req_ = from.vcu_mcu_asd_req_;
    }
    if (cached_has_bits & 0x00000020u) {
      vcu_maxdischgpwr_alw_ = from.vcu_maxdischgpwr_alw_;
    }
    if (cached_has_bits & 0x00000040u) {
      vcu_mcu_motor1_ctrmode_req_ = from.vcu_mcu_motor1_ctrmode_req_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_vcu_control_0x185_185::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_control_0x185_185::CopyFrom(const Gw_vcu_control_0x185_185& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_control_0x185_185)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_control_0x185_185::IsInitialized() const {
  return true;
}

void Gw_vcu_control_0x185_185::Swap(Gw_vcu_control_0x185_185* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_control_0x185_185::InternalSwap(Gw_vcu_control_0x185_185* other) {
  std::swap(checksum_0x185_, other->checksum_0x185_);
  std::swap(rolling_counter_0x185_, other->rolling_counter_0x185_);
  std::swap(vcu_maxchgpwr_alw_, other->vcu_maxchgpwr_alw_);
  std::swap(vcu_ems_engoperationstatus_, other->vcu_ems_engoperationstatus_);
  std::swap(vcu_mcu_asd_req_, other->vcu_mcu_asd_req_);
  std::swap(vcu_maxdischgpwr_alw_, other->vcu_maxdischgpwr_alw_);
  std::swap(vcu_mcu_motor1_ctrmode_req_, other->vcu_mcu_motor1_ctrmode_req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_control_0x185_185::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_control_0x185_185

// optional int32 checksum_0x185 = 1;
bool Gw_vcu_control_0x185_185::has_checksum_0x185() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_checksum_0x185() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_control_0x185_185::clear_has_checksum_0x185() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_control_0x185_185::clear_checksum_0x185() {
  checksum_0x185_ = 0;
  clear_has_checksum_0x185();
}
::google::protobuf::int32 Gw_vcu_control_0x185_185::checksum_0x185() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.checksum_0x185)
  return checksum_0x185_;
}
void Gw_vcu_control_0x185_185::set_checksum_0x185(::google::protobuf::int32 value) {
  set_has_checksum_0x185();
  checksum_0x185_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.checksum_0x185)
}

// optional int32 rolling_counter_0x185 = 2;
bool Gw_vcu_control_0x185_185::has_rolling_counter_0x185() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_rolling_counter_0x185() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_control_0x185_185::clear_has_rolling_counter_0x185() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_control_0x185_185::clear_rolling_counter_0x185() {
  rolling_counter_0x185_ = 0;
  clear_has_rolling_counter_0x185();
}
::google::protobuf::int32 Gw_vcu_control_0x185_185::rolling_counter_0x185() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.rolling_counter_0x185)
  return rolling_counter_0x185_;
}
void Gw_vcu_control_0x185_185::set_rolling_counter_0x185(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x185();
  rolling_counter_0x185_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.rolling_counter_0x185)
}

// optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_ems_engoperationstatusType vcu_ems_engoperationstatus = 3;
bool Gw_vcu_control_0x185_185::has_vcu_ems_engoperationstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_vcu_ems_engoperationstatus() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_control_0x185_185::clear_has_vcu_ems_engoperationstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_control_0x185_185::clear_vcu_ems_engoperationstatus() {
  vcu_ems_engoperationstatus_ = 0;
  clear_has_vcu_ems_engoperationstatus();
}
::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType Gw_vcu_control_0x185_185::vcu_ems_engoperationstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_ems_engoperationstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType >(vcu_ems_engoperationstatus_);
}
void Gw_vcu_control_0x185_185::set_vcu_ems_engoperationstatus(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_ems_engoperationstatusType_IsValid(value));
  set_has_vcu_ems_engoperationstatus();
  vcu_ems_engoperationstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_ems_engoperationstatus)
}

// optional double vcu_maxchgpwr_alw = 4;
bool Gw_vcu_control_0x185_185::has_vcu_maxchgpwr_alw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_vcu_maxchgpwr_alw() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_control_0x185_185::clear_has_vcu_maxchgpwr_alw() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_control_0x185_185::clear_vcu_maxchgpwr_alw() {
  vcu_maxchgpwr_alw_ = 0;
  clear_has_vcu_maxchgpwr_alw();
}
double Gw_vcu_control_0x185_185::vcu_maxchgpwr_alw() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_maxchgpwr_alw)
  return vcu_maxchgpwr_alw_;
}
void Gw_vcu_control_0x185_185::set_vcu_maxchgpwr_alw(double value) {
  set_has_vcu_maxchgpwr_alw();
  vcu_maxchgpwr_alw_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_maxchgpwr_alw)
}

// optional double vcu_maxdischgpwr_alw = 5;
bool Gw_vcu_control_0x185_185::has_vcu_maxdischgpwr_alw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_vcu_maxdischgpwr_alw() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_control_0x185_185::clear_has_vcu_maxdischgpwr_alw() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_control_0x185_185::clear_vcu_maxdischgpwr_alw() {
  vcu_maxdischgpwr_alw_ = 0;
  clear_has_vcu_maxdischgpwr_alw();
}
double Gw_vcu_control_0x185_185::vcu_maxdischgpwr_alw() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_maxdischgpwr_alw)
  return vcu_maxdischgpwr_alw_;
}
void Gw_vcu_control_0x185_185::set_vcu_maxdischgpwr_alw(double value) {
  set_has_vcu_maxdischgpwr_alw();
  vcu_maxdischgpwr_alw_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_maxdischgpwr_alw)
}

// optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_asd_reqType vcu_mcu_asd_req = 6;
bool Gw_vcu_control_0x185_185::has_vcu_mcu_asd_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_vcu_mcu_asd_req() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_control_0x185_185::clear_has_vcu_mcu_asd_req() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_control_0x185_185::clear_vcu_mcu_asd_req() {
  vcu_mcu_asd_req_ = 0;
  clear_has_vcu_mcu_asd_req();
}
::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType Gw_vcu_control_0x185_185::vcu_mcu_asd_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_mcu_asd_req)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType >(vcu_mcu_asd_req_);
}
void Gw_vcu_control_0x185_185::set_vcu_mcu_asd_req(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_asd_reqType_IsValid(value));
  set_has_vcu_mcu_asd_req();
  vcu_mcu_asd_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_mcu_asd_req)
}

// optional .jmc_auto.canbus.Gw_vcu_control_0x185_185.Vcu_mcu_motor1_ctrmode_reqType vcu_mcu_motor1_ctrmode_req = 7;
bool Gw_vcu_control_0x185_185::has_vcu_mcu_motor1_ctrmode_req() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_control_0x185_185::set_has_vcu_mcu_motor1_ctrmode_req() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_control_0x185_185::clear_has_vcu_mcu_motor1_ctrmode_req() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_control_0x185_185::clear_vcu_mcu_motor1_ctrmode_req() {
  vcu_mcu_motor1_ctrmode_req_ = 0;
  clear_has_vcu_mcu_motor1_ctrmode_req();
}
::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType Gw_vcu_control_0x185_185::vcu_mcu_motor1_ctrmode_req() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_mcu_motor1_ctrmode_req)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType >(vcu_mcu_motor1_ctrmode_req_);
}
void Gw_vcu_control_0x185_185::set_vcu_mcu_motor1_ctrmode_req(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType value) {
  assert(::jmc_auto::canbus::Gw_vcu_control_0x185_185_Vcu_mcu_motor1_ctrmode_reqType_IsValid(value));
  set_has_vcu_mcu_motor1_ctrmode_req();
  vcu_mcu_motor1_ctrmode_req_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_control_0x185_185.vcu_mcu_motor1_ctrmode_req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ibc_status2_0x124_124::kChecksum0X124FieldNumber;
const int Ibc_status2_0x124_124::kRollingCounter0X124FieldNumber;
const int Ibc_status2_0x124_124::kIbcDecelerationvaildFieldNumber;
const int Ibc_status2_0x124_124::kIbcDecelerationFieldNumber;
const int Ibc_status2_0x124_124::kIbcBrktmcpositionvaildFieldNumber;
const int Ibc_status2_0x124_124::kIbcBrktmcpositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ibc_status2_0x124_124::Ibc_status2_0x124_124()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Ibc_status2_0x124_124)
}
Ibc_status2_0x124_124::Ibc_status2_0x124_124(const Ibc_status2_0x124_124& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&checksum_0x124_, &from.checksum_0x124_,
    reinterpret_cast<char*>(&ibc_brktmcposition_) -
    reinterpret_cast<char*>(&checksum_0x124_) + sizeof(ibc_brktmcposition_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Ibc_status2_0x124_124)
}

void Ibc_status2_0x124_124::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&checksum_0x124_, 0, reinterpret_cast<char*>(&ibc_brktmcposition_) -
    reinterpret_cast<char*>(&checksum_0x124_) + sizeof(ibc_brktmcposition_));
}

Ibc_status2_0x124_124::~Ibc_status2_0x124_124() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Ibc_status2_0x124_124)
  SharedDtor();
}

void Ibc_status2_0x124_124::SharedDtor() {
}

void Ibc_status2_0x124_124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ibc_status2_0x124_124::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ibc_status2_0x124_124& Ibc_status2_0x124_124::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Ibc_status2_0x124_124* Ibc_status2_0x124_124::New(::google::protobuf::Arena* arena) const {
  Ibc_status2_0x124_124* n = new Ibc_status2_0x124_124;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ibc_status2_0x124_124::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&checksum_0x124_, 0, reinterpret_cast<char*>(&ibc_brktmcposition_) -
      reinterpret_cast<char*>(&checksum_0x124_) + sizeof(ibc_brktmcposition_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ibc_status2_0x124_124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 checksum_0x124 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_checksum_0x124();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_0x124_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 rolling_counter_0x124 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rolling_counter_0x124();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolling_counter_0x124_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_decelerationvaildType ibc_decelerationvaild = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType_IsValid(value)) {
            set_ibc_decelerationvaild(static_cast< ::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ibc_deceleration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_ibc_deceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ibc_deceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_brktmcpositionvaildType ibc_brktmcpositionvaild = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType_IsValid(value)) {
            set_ibc_brktmcpositionvaild(static_cast< ::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double ibc_brktmcposition = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_ibc_brktmcposition();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ibc_brktmcposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Ibc_status2_0x124_124)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Ibc_status2_0x124_124)
  return false;
#undef DO_
}

void Ibc_status2_0x124_124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x124 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->checksum_0x124(), output);
  }

  // optional int32 rolling_counter_0x124 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolling_counter_0x124(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_decelerationvaildType ibc_decelerationvaild = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->ibc_decelerationvaild(), output);
  }

  // optional double ibc_deceleration = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->ibc_deceleration(), output);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_brktmcpositionvaildType ibc_brktmcpositionvaild = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->ibc_brktmcpositionvaild(), output);
  }

  // optional double ibc_brktmcposition = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->ibc_brktmcposition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Ibc_status2_0x124_124)
}

::google::protobuf::uint8* Ibc_status2_0x124_124::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 checksum_0x124 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->checksum_0x124(), target);
  }

  // optional int32 rolling_counter_0x124 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolling_counter_0x124(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_decelerationvaildType ibc_decelerationvaild = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->ibc_decelerationvaild(), target);
  }

  // optional double ibc_deceleration = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->ibc_deceleration(), target);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_brktmcpositionvaildType ibc_brktmcpositionvaild = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->ibc_brktmcpositionvaild(), target);
  }

  // optional double ibc_brktmcposition = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->ibc_brktmcposition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Ibc_status2_0x124_124)
  return target;
}

size_t Ibc_status2_0x124_124::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional int32 checksum_0x124 = 1;
    if (has_checksum_0x124()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->checksum_0x124());
    }

    // optional int32 rolling_counter_0x124 = 2;
    if (has_rolling_counter_0x124()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolling_counter_0x124());
    }

    // optional double ibc_deceleration = 4;
    if (has_ibc_deceleration()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_decelerationvaildType ibc_decelerationvaild = 3;
    if (has_ibc_decelerationvaild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_decelerationvaild());
    }

    // optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_brktmcpositionvaildType ibc_brktmcpositionvaild = 5;
    if (has_ibc_brktmcpositionvaild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ibc_brktmcpositionvaild());
    }

    // optional double ibc_brktmcposition = 6;
    if (has_ibc_brktmcposition()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ibc_status2_0x124_124::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  GOOGLE_DCHECK_NE(&from, this);
  const Ibc_status2_0x124_124* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ibc_status2_0x124_124>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Ibc_status2_0x124_124)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Ibc_status2_0x124_124)
    MergeFrom(*source);
  }
}

void Ibc_status2_0x124_124::MergeFrom(const Ibc_status2_0x124_124& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      checksum_0x124_ = from.checksum_0x124_;
    }
    if (cached_has_bits & 0x00000002u) {
      rolling_counter_0x124_ = from.rolling_counter_0x124_;
    }
    if (cached_has_bits & 0x00000004u) {
      ibc_deceleration_ = from.ibc_deceleration_;
    }
    if (cached_has_bits & 0x00000008u) {
      ibc_decelerationvaild_ = from.ibc_decelerationvaild_;
    }
    if (cached_has_bits & 0x00000010u) {
      ibc_brktmcpositionvaild_ = from.ibc_brktmcpositionvaild_;
    }
    if (cached_has_bits & 0x00000020u) {
      ibc_brktmcposition_ = from.ibc_brktmcposition_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ibc_status2_0x124_124::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ibc_status2_0x124_124::CopyFrom(const Ibc_status2_0x124_124& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Ibc_status2_0x124_124)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ibc_status2_0x124_124::IsInitialized() const {
  return true;
}

void Ibc_status2_0x124_124::Swap(Ibc_status2_0x124_124* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ibc_status2_0x124_124::InternalSwap(Ibc_status2_0x124_124* other) {
  std::swap(checksum_0x124_, other->checksum_0x124_);
  std::swap(rolling_counter_0x124_, other->rolling_counter_0x124_);
  std::swap(ibc_deceleration_, other->ibc_deceleration_);
  std::swap(ibc_decelerationvaild_, other->ibc_decelerationvaild_);
  std::swap(ibc_brktmcpositionvaild_, other->ibc_brktmcpositionvaild_);
  std::swap(ibc_brktmcposition_, other->ibc_brktmcposition_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ibc_status2_0x124_124::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ibc_status2_0x124_124

// optional int32 checksum_0x124 = 1;
bool Ibc_status2_0x124_124::has_checksum_0x124() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Ibc_status2_0x124_124::set_has_checksum_0x124() {
  _has_bits_[0] |= 0x00000001u;
}
void Ibc_status2_0x124_124::clear_has_checksum_0x124() {
  _has_bits_[0] &= ~0x00000001u;
}
void Ibc_status2_0x124_124::clear_checksum_0x124() {
  checksum_0x124_ = 0;
  clear_has_checksum_0x124();
}
::google::protobuf::int32 Ibc_status2_0x124_124::checksum_0x124() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.checksum_0x124)
  return checksum_0x124_;
}
void Ibc_status2_0x124_124::set_checksum_0x124(::google::protobuf::int32 value) {
  set_has_checksum_0x124();
  checksum_0x124_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.checksum_0x124)
}

// optional int32 rolling_counter_0x124 = 2;
bool Ibc_status2_0x124_124::has_rolling_counter_0x124() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Ibc_status2_0x124_124::set_has_rolling_counter_0x124() {
  _has_bits_[0] |= 0x00000002u;
}
void Ibc_status2_0x124_124::clear_has_rolling_counter_0x124() {
  _has_bits_[0] &= ~0x00000002u;
}
void Ibc_status2_0x124_124::clear_rolling_counter_0x124() {
  rolling_counter_0x124_ = 0;
  clear_has_rolling_counter_0x124();
}
::google::protobuf::int32 Ibc_status2_0x124_124::rolling_counter_0x124() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.rolling_counter_0x124)
  return rolling_counter_0x124_;
}
void Ibc_status2_0x124_124::set_rolling_counter_0x124(::google::protobuf::int32 value) {
  set_has_rolling_counter_0x124();
  rolling_counter_0x124_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.rolling_counter_0x124)
}

// optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_decelerationvaildType ibc_decelerationvaild = 3;
bool Ibc_status2_0x124_124::has_ibc_decelerationvaild() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Ibc_status2_0x124_124::set_has_ibc_decelerationvaild() {
  _has_bits_[0] |= 0x00000008u;
}
void Ibc_status2_0x124_124::clear_has_ibc_decelerationvaild() {
  _has_bits_[0] &= ~0x00000008u;
}
void Ibc_status2_0x124_124::clear_ibc_decelerationvaild() {
  ibc_decelerationvaild_ = 0;
  clear_has_ibc_decelerationvaild();
}
::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType Ibc_status2_0x124_124::ibc_decelerationvaild() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_decelerationvaild)
  return static_cast< ::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType >(ibc_decelerationvaild_);
}
void Ibc_status2_0x124_124::set_ibc_decelerationvaild(::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType value) {
  assert(::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_decelerationvaildType_IsValid(value));
  set_has_ibc_decelerationvaild();
  ibc_decelerationvaild_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_decelerationvaild)
}

// optional double ibc_deceleration = 4;
bool Ibc_status2_0x124_124::has_ibc_deceleration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Ibc_status2_0x124_124::set_has_ibc_deceleration() {
  _has_bits_[0] |= 0x00000004u;
}
void Ibc_status2_0x124_124::clear_has_ibc_deceleration() {
  _has_bits_[0] &= ~0x00000004u;
}
void Ibc_status2_0x124_124::clear_ibc_deceleration() {
  ibc_deceleration_ = 0;
  clear_has_ibc_deceleration();
}
double Ibc_status2_0x124_124::ibc_deceleration() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_deceleration)
  return ibc_deceleration_;
}
void Ibc_status2_0x124_124::set_ibc_deceleration(double value) {
  set_has_ibc_deceleration();
  ibc_deceleration_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_deceleration)
}

// optional .jmc_auto.canbus.Ibc_status2_0x124_124.Ibc_brktmcpositionvaildType ibc_brktmcpositionvaild = 5;
bool Ibc_status2_0x124_124::has_ibc_brktmcpositionvaild() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Ibc_status2_0x124_124::set_has_ibc_brktmcpositionvaild() {
  _has_bits_[0] |= 0x00000010u;
}
void Ibc_status2_0x124_124::clear_has_ibc_brktmcpositionvaild() {
  _has_bits_[0] &= ~0x00000010u;
}
void Ibc_status2_0x124_124::clear_ibc_brktmcpositionvaild() {
  ibc_brktmcpositionvaild_ = 0;
  clear_has_ibc_brktmcpositionvaild();
}
::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType Ibc_status2_0x124_124::ibc_brktmcpositionvaild() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_brktmcpositionvaild)
  return static_cast< ::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType >(ibc_brktmcpositionvaild_);
}
void Ibc_status2_0x124_124::set_ibc_brktmcpositionvaild(::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType value) {
  assert(::jmc_auto::canbus::Ibc_status2_0x124_124_Ibc_brktmcpositionvaildType_IsValid(value));
  set_has_ibc_brktmcpositionvaild();
  ibc_brktmcpositionvaild_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_brktmcpositionvaild)
}

// optional double ibc_brktmcposition = 6;
bool Ibc_status2_0x124_124::has_ibc_brktmcposition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Ibc_status2_0x124_124::set_has_ibc_brktmcposition() {
  _has_bits_[0] |= 0x00000020u;
}
void Ibc_status2_0x124_124::clear_has_ibc_brktmcposition() {
  _has_bits_[0] &= ~0x00000020u;
}
void Ibc_status2_0x124_124::clear_ibc_brktmcposition() {
  ibc_brktmcposition_ = 0;
  clear_has_ibc_brktmcposition();
}
double Ibc_status2_0x124_124::ibc_brktmcposition() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_brktmcposition)
  return ibc_brktmcposition_;
}
void Ibc_status2_0x124_124::set_ibc_brktmcposition(double value) {
  set_has_ibc_brktmcposition();
  ibc_brktmcposition_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Ibc_status2_0x124_124.ibc_brktmcposition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gw_vcu_hmi_0x358_358::kVcuChecksum0X358FieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuRollingcounter0X358FieldNumber;
const int Gw_vcu_hmi_0x358_358::kVehiclehvstatusFieldNumber;
const int Gw_vcu_hmi_0x358_358::kPackheatcircuiterrorFieldNumber;
const int Gw_vcu_hmi_0x358_358::kPackheatstatusFieldNumber;
const int Gw_vcu_hmi_0x358_358::kPackcoolingcircuiterrorFieldNumber;
const int Gw_vcu_hmi_0x358_358::kMotorcoolingcircuiterrorFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuBatteryvoltageerrorFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuBattervoltageFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuTargcruisespeedFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuCruisecontrolstatusFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuDriverstatusStsFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuDrivemodeStsFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuVehchgStsFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuTboxVehStsFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmEnergyrecoverymodeFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmVehhvilErrFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmMotErrFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmPackvoltoffErrFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmChggearlvFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmPacksysErrFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmDrvsysErrFieldNumber;
const int Gw_vcu_hmi_0x358_358::kVcuIcmVehErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gw_vcu_hmi_0x358_358::Gw_vcu_hmi_0x358_358()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
}
Gw_vcu_hmi_0x358_358::Gw_vcu_hmi_0x358_358(const Gw_vcu_hmi_0x358_358& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vcu_checksum_0x358_, &from.vcu_checksum_0x358_,
    reinterpret_cast<char*>(&vcu_icm_veh_err_) -
    reinterpret_cast<char*>(&vcu_checksum_0x358_) + sizeof(vcu_icm_veh_err_));
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
}

void Gw_vcu_hmi_0x358_358::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&vcu_checksum_0x358_, 0, reinterpret_cast<char*>(&vcu_icm_veh_err_) -
    reinterpret_cast<char*>(&vcu_checksum_0x358_) + sizeof(vcu_icm_veh_err_));
}

Gw_vcu_hmi_0x358_358::~Gw_vcu_hmi_0x358_358() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  SharedDtor();
}

void Gw_vcu_hmi_0x358_358::SharedDtor() {
}

void Gw_vcu_hmi_0x358_358::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gw_vcu_hmi_0x358_358::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gw_vcu_hmi_0x358_358& Gw_vcu_hmi_0x358_358::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gw_vcu_hmi_0x358_358* Gw_vcu_hmi_0x358_358::New(::google::protobuf::Arena* arena) const {
  Gw_vcu_hmi_0x358_358* n = new Gw_vcu_hmi_0x358_358;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gw_vcu_hmi_0x358_358::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&vcu_checksum_0x358_, 0, reinterpret_cast<char*>(&vcu_batteryvoltageerror_) -
      reinterpret_cast<char*>(&vcu_checksum_0x358_) + sizeof(vcu_batteryvoltageerror_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&vcu_battervoltage_, 0, reinterpret_cast<char*>(&vcu_icm_energyrecoverymode_) -
      reinterpret_cast<char*>(&vcu_battervoltage_) + sizeof(vcu_icm_energyrecoverymode_));
  }
  if (_has_bits_[16 / 32] & 8323072u) {
    ::memset(&vcu_icm_vehhvil_err_, 0, reinterpret_cast<char*>(&vcu_icm_veh_err_) -
      reinterpret_cast<char*>(&vcu_icm_vehhvil_err_) + sizeof(vcu_icm_veh_err_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Gw_vcu_hmi_0x358_358::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vcu_checksum_0x358 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_vcu_checksum_0x358();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_checksum_0x358_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vcu_rollingcounter_0x358 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_vcu_rollingcounter_0x358();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vcu_rollingcounter_0x358_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.VehiclehvstatusType vehiclehvstatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType_IsValid(value)) {
            set_vehiclehvstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatcircuiterrorType packheatcircuiterror = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType_IsValid(value)) {
            set_packheatcircuiterror(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatstatusType packheatstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType_IsValid(value)) {
            set_packheatstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackcoolingcircuiterrorType packcoolingcircuiterror = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType_IsValid(value)) {
            set_packcoolingcircuiterror(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.MotorcoolingcircuiterrorType motorcoolingcircuiterror = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType_IsValid(value)) {
            set_motorcoolingcircuiterror(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_batteryvoltageerrorType vcu_batteryvoltageerror = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType_IsValid(value)) {
            set_vcu_batteryvoltageerror(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_battervoltage = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_vcu_battervoltage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_battervoltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vcu_targcruisespeed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_vcu_targcruisespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vcu_targcruisespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_cruisecontrolstatusType vcu_cruisecontrolstatus = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType_IsValid(value)) {
            set_vcu_cruisecontrolstatus(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_driverstatus_stsType vcu_driverstatus_sts = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType_IsValid(value)) {
            set_vcu_driverstatus_sts(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_drivemode_stsType vcu_drivemode_sts = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType_IsValid(value)) {
            set_vcu_drivemode_sts(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_stsType vcu_vehchg_sts = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType_IsValid(value)) {
            set_vcu_vehchg_sts(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(14, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbox_veh_stsType vcu_tbox_veh_sts = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType_IsValid(value)) {
            set_vcu_tbox_veh_sts(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_energyrecoverymodeType vcu_icm_energyrecoverymode = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType_IsValid(value)) {
            set_vcu_icm_energyrecoverymode(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(16, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehhvil_errType vcu_icm_vehhvil_err = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType_IsValid(value)) {
            set_vcu_icm_vehhvil_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_mot_errType vcu_icm_mot_err = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType_IsValid(value)) {
            set_vcu_icm_mot_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(18, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packvoltoff_errType vcu_icm_packvoltoff_err = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType_IsValid(value)) {
            set_vcu_icm_packvoltoff_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(19, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvType vcu_icm_chggearlv = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType_IsValid(value)) {
            set_vcu_icm_chggearlv(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(20, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packsys_errType vcu_icm_packsys_err = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType_IsValid(value)) {
            set_vcu_icm_packsys_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(21, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_drvsys_errType vcu_icm_drvsys_err = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType_IsValid(value)) {
            set_vcu_icm_drvsys_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(22, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_veh_errType vcu_icm_veh_err = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType_IsValid(value)) {
            set_vcu_icm_veh_err(static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(23, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  return false;
#undef DO_
}

void Gw_vcu_hmi_0x358_358::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vcu_checksum_0x358 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vcu_checksum_0x358(), output);
  }

  // optional int32 vcu_rollingcounter_0x358 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vcu_rollingcounter_0x358(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.VehiclehvstatusType vehiclehvstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->vehiclehvstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatcircuiterrorType packheatcircuiterror = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->packheatcircuiterror(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatstatusType packheatstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->packheatstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackcoolingcircuiterrorType packcoolingcircuiterror = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->packcoolingcircuiterror(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.MotorcoolingcircuiterrorType motorcoolingcircuiterror = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->motorcoolingcircuiterror(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_batteryvoltageerrorType vcu_batteryvoltageerror = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->vcu_batteryvoltageerror(), output);
  }

  // optional double vcu_battervoltage = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vcu_battervoltage(), output);
  }

  // optional double vcu_targcruisespeed = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->vcu_targcruisespeed(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_cruisecontrolstatusType vcu_cruisecontrolstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->vcu_cruisecontrolstatus(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_driverstatus_stsType vcu_driverstatus_sts = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->vcu_driverstatus_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_drivemode_stsType vcu_drivemode_sts = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->vcu_drivemode_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_stsType vcu_vehchg_sts = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->vcu_vehchg_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbox_veh_stsType vcu_tbox_veh_sts = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->vcu_tbox_veh_sts(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_energyrecoverymodeType vcu_icm_energyrecoverymode = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->vcu_icm_energyrecoverymode(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehhvil_errType vcu_icm_vehhvil_err = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->vcu_icm_vehhvil_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_mot_errType vcu_icm_mot_err = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->vcu_icm_mot_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packvoltoff_errType vcu_icm_packvoltoff_err = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->vcu_icm_packvoltoff_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvType vcu_icm_chggearlv = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->vcu_icm_chggearlv(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packsys_errType vcu_icm_packsys_err = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->vcu_icm_packsys_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_drvsys_errType vcu_icm_drvsys_err = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->vcu_icm_drvsys_err(), output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_veh_errType vcu_icm_veh_err = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->vcu_icm_veh_err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
}

::google::protobuf::uint8* Gw_vcu_hmi_0x358_358::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vcu_checksum_0x358 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vcu_checksum_0x358(), target);
  }

  // optional int32 vcu_rollingcounter_0x358 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vcu_rollingcounter_0x358(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.VehiclehvstatusType vehiclehvstatus = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->vehiclehvstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatcircuiterrorType packheatcircuiterror = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->packheatcircuiterror(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatstatusType packheatstatus = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->packheatstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackcoolingcircuiterrorType packcoolingcircuiterror = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->packcoolingcircuiterror(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.MotorcoolingcircuiterrorType motorcoolingcircuiterror = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->motorcoolingcircuiterror(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_batteryvoltageerrorType vcu_batteryvoltageerror = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->vcu_batteryvoltageerror(), target);
  }

  // optional double vcu_battervoltage = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vcu_battervoltage(), target);
  }

  // optional double vcu_targcruisespeed = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->vcu_targcruisespeed(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_cruisecontrolstatusType vcu_cruisecontrolstatus = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->vcu_cruisecontrolstatus(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_driverstatus_stsType vcu_driverstatus_sts = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->vcu_driverstatus_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_drivemode_stsType vcu_drivemode_sts = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->vcu_drivemode_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_stsType vcu_vehchg_sts = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->vcu_vehchg_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbox_veh_stsType vcu_tbox_veh_sts = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->vcu_tbox_veh_sts(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_energyrecoverymodeType vcu_icm_energyrecoverymode = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->vcu_icm_energyrecoverymode(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehhvil_errType vcu_icm_vehhvil_err = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->vcu_icm_vehhvil_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_mot_errType vcu_icm_mot_err = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->vcu_icm_mot_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packvoltoff_errType vcu_icm_packvoltoff_err = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->vcu_icm_packvoltoff_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvType vcu_icm_chggearlv = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->vcu_icm_chggearlv(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packsys_errType vcu_icm_packsys_err = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->vcu_icm_packsys_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_drvsys_errType vcu_icm_drvsys_err = 22;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->vcu_icm_drvsys_err(), target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_veh_errType vcu_icm_veh_err = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->vcu_icm_veh_err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  return target;
}

size_t Gw_vcu_hmi_0x358_358::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional int32 vcu_checksum_0x358 = 1;
    if (has_vcu_checksum_0x358()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_checksum_0x358());
    }

    // optional int32 vcu_rollingcounter_0x358 = 2;
    if (has_vcu_rollingcounter_0x358()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vcu_rollingcounter_0x358());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.VehiclehvstatusType vehiclehvstatus = 3;
    if (has_vehiclehvstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vehiclehvstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatcircuiterrorType packheatcircuiterror = 4;
    if (has_packheatcircuiterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packheatcircuiterror());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatstatusType packheatstatus = 5;
    if (has_packheatstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packheatstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackcoolingcircuiterrorType packcoolingcircuiterror = 6;
    if (has_packcoolingcircuiterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packcoolingcircuiterror());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.MotorcoolingcircuiterrorType motorcoolingcircuiterror = 7;
    if (has_motorcoolingcircuiterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->motorcoolingcircuiterror());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_batteryvoltageerrorType vcu_batteryvoltageerror = 8;
    if (has_vcu_batteryvoltageerror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_batteryvoltageerror());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional double vcu_battervoltage = 9;
    if (has_vcu_battervoltage()) {
      total_size += 1 + 8;
    }

    // optional double vcu_targcruisespeed = 10;
    if (has_vcu_targcruisespeed()) {
      total_size += 1 + 8;
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_cruisecontrolstatusType vcu_cruisecontrolstatus = 11;
    if (has_vcu_cruisecontrolstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_cruisecontrolstatus());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_driverstatus_stsType vcu_driverstatus_sts = 12;
    if (has_vcu_driverstatus_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_driverstatus_sts());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_drivemode_stsType vcu_drivemode_sts = 13;
    if (has_vcu_drivemode_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_drivemode_sts());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_stsType vcu_vehchg_sts = 14;
    if (has_vcu_vehchg_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_vehchg_sts());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbox_veh_stsType vcu_tbox_veh_sts = 15;
    if (has_vcu_tbox_veh_sts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_tbox_veh_sts());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_energyrecoverymodeType vcu_icm_energyrecoverymode = 16;
    if (has_vcu_icm_energyrecoverymode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_energyrecoverymode());
    }

  }
  if (_has_bits_[16 / 32] & 8323072u) {
    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehhvil_errType vcu_icm_vehhvil_err = 17;
    if (has_vcu_icm_vehhvil_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_vehhvil_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_mot_errType vcu_icm_mot_err = 18;
    if (has_vcu_icm_mot_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_mot_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packvoltoff_errType vcu_icm_packvoltoff_err = 19;
    if (has_vcu_icm_packvoltoff_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_packvoltoff_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvType vcu_icm_chggearlv = 20;
    if (has_vcu_icm_chggearlv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_chggearlv());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packsys_errType vcu_icm_packsys_err = 21;
    if (has_vcu_icm_packsys_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_packsys_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_drvsys_errType vcu_icm_drvsys_err = 22;
    if (has_vcu_icm_drvsys_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_drvsys_err());
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_veh_errType vcu_icm_veh_err = 23;
    if (has_vcu_icm_veh_err()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->vcu_icm_veh_err());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gw_vcu_hmi_0x358_358::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  GOOGLE_DCHECK_NE(&from, this);
  const Gw_vcu_hmi_0x358_358* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gw_vcu_hmi_0x358_358>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
    MergeFrom(*source);
  }
}

void Gw_vcu_hmi_0x358_358::MergeFrom(const Gw_vcu_hmi_0x358_358& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      vcu_checksum_0x358_ = from.vcu_checksum_0x358_;
    }
    if (cached_has_bits & 0x00000002u) {
      vcu_rollingcounter_0x358_ = from.vcu_rollingcounter_0x358_;
    }
    if (cached_has_bits & 0x00000004u) {
      vehiclehvstatus_ = from.vehiclehvstatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      packheatcircuiterror_ = from.packheatcircuiterror_;
    }
    if (cached_has_bits & 0x00000010u) {
      packheatstatus_ = from.packheatstatus_;
    }
    if (cached_has_bits & 0x00000020u) {
      packcoolingcircuiterror_ = from.packcoolingcircuiterror_;
    }
    if (cached_has_bits & 0x00000040u) {
      motorcoolingcircuiterror_ = from.motorcoolingcircuiterror_;
    }
    if (cached_has_bits & 0x00000080u) {
      vcu_batteryvoltageerror_ = from.vcu_batteryvoltageerror_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      vcu_battervoltage_ = from.vcu_battervoltage_;
    }
    if (cached_has_bits & 0x00000200u) {
      vcu_targcruisespeed_ = from.vcu_targcruisespeed_;
    }
    if (cached_has_bits & 0x00000400u) {
      vcu_cruisecontrolstatus_ = from.vcu_cruisecontrolstatus_;
    }
    if (cached_has_bits & 0x00000800u) {
      vcu_driverstatus_sts_ = from.vcu_driverstatus_sts_;
    }
    if (cached_has_bits & 0x00001000u) {
      vcu_drivemode_sts_ = from.vcu_drivemode_sts_;
    }
    if (cached_has_bits & 0x00002000u) {
      vcu_vehchg_sts_ = from.vcu_vehchg_sts_;
    }
    if (cached_has_bits & 0x00004000u) {
      vcu_tbox_veh_sts_ = from.vcu_tbox_veh_sts_;
    }
    if (cached_has_bits & 0x00008000u) {
      vcu_icm_energyrecoverymode_ = from.vcu_icm_energyrecoverymode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      vcu_icm_vehhvil_err_ = from.vcu_icm_vehhvil_err_;
    }
    if (cached_has_bits & 0x00020000u) {
      vcu_icm_mot_err_ = from.vcu_icm_mot_err_;
    }
    if (cached_has_bits & 0x00040000u) {
      vcu_icm_packvoltoff_err_ = from.vcu_icm_packvoltoff_err_;
    }
    if (cached_has_bits & 0x00080000u) {
      vcu_icm_chggearlv_ = from.vcu_icm_chggearlv_;
    }
    if (cached_has_bits & 0x00100000u) {
      vcu_icm_packsys_err_ = from.vcu_icm_packsys_err_;
    }
    if (cached_has_bits & 0x00200000u) {
      vcu_icm_drvsys_err_ = from.vcu_icm_drvsys_err_;
    }
    if (cached_has_bits & 0x00400000u) {
      vcu_icm_veh_err_ = from.vcu_icm_veh_err_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Gw_vcu_hmi_0x358_358::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gw_vcu_hmi_0x358_358::CopyFrom(const Gw_vcu_hmi_0x358_358& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Gw_vcu_hmi_0x358_358)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gw_vcu_hmi_0x358_358::IsInitialized() const {
  return true;
}

void Gw_vcu_hmi_0x358_358::Swap(Gw_vcu_hmi_0x358_358* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gw_vcu_hmi_0x358_358::InternalSwap(Gw_vcu_hmi_0x358_358* other) {
  std::swap(vcu_checksum_0x358_, other->vcu_checksum_0x358_);
  std::swap(vcu_rollingcounter_0x358_, other->vcu_rollingcounter_0x358_);
  std::swap(vehiclehvstatus_, other->vehiclehvstatus_);
  std::swap(packheatcircuiterror_, other->packheatcircuiterror_);
  std::swap(packheatstatus_, other->packheatstatus_);
  std::swap(packcoolingcircuiterror_, other->packcoolingcircuiterror_);
  std::swap(motorcoolingcircuiterror_, other->motorcoolingcircuiterror_);
  std::swap(vcu_batteryvoltageerror_, other->vcu_batteryvoltageerror_);
  std::swap(vcu_battervoltage_, other->vcu_battervoltage_);
  std::swap(vcu_targcruisespeed_, other->vcu_targcruisespeed_);
  std::swap(vcu_cruisecontrolstatus_, other->vcu_cruisecontrolstatus_);
  std::swap(vcu_driverstatus_sts_, other->vcu_driverstatus_sts_);
  std::swap(vcu_drivemode_sts_, other->vcu_drivemode_sts_);
  std::swap(vcu_vehchg_sts_, other->vcu_vehchg_sts_);
  std::swap(vcu_tbox_veh_sts_, other->vcu_tbox_veh_sts_);
  std::swap(vcu_icm_energyrecoverymode_, other->vcu_icm_energyrecoverymode_);
  std::swap(vcu_icm_vehhvil_err_, other->vcu_icm_vehhvil_err_);
  std::swap(vcu_icm_mot_err_, other->vcu_icm_mot_err_);
  std::swap(vcu_icm_packvoltoff_err_, other->vcu_icm_packvoltoff_err_);
  std::swap(vcu_icm_chggearlv_, other->vcu_icm_chggearlv_);
  std::swap(vcu_icm_packsys_err_, other->vcu_icm_packsys_err_);
  std::swap(vcu_icm_drvsys_err_, other->vcu_icm_drvsys_err_);
  std::swap(vcu_icm_veh_err_, other->vcu_icm_veh_err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gw_vcu_hmi_0x358_358::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gw_vcu_hmi_0x358_358

// optional int32 vcu_checksum_0x358 = 1;
bool Gw_vcu_hmi_0x358_358::has_vcu_checksum_0x358() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_checksum_0x358() {
  _has_bits_[0] |= 0x00000001u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_checksum_0x358() {
  _has_bits_[0] &= ~0x00000001u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_checksum_0x358() {
  vcu_checksum_0x358_ = 0;
  clear_has_vcu_checksum_0x358();
}
::google::protobuf::int32 Gw_vcu_hmi_0x358_358::vcu_checksum_0x358() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_checksum_0x358)
  return vcu_checksum_0x358_;
}
void Gw_vcu_hmi_0x358_358::set_vcu_checksum_0x358(::google::protobuf::int32 value) {
  set_has_vcu_checksum_0x358();
  vcu_checksum_0x358_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_checksum_0x358)
}

// optional int32 vcu_rollingcounter_0x358 = 2;
bool Gw_vcu_hmi_0x358_358::has_vcu_rollingcounter_0x358() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_rollingcounter_0x358() {
  _has_bits_[0] |= 0x00000002u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_rollingcounter_0x358() {
  _has_bits_[0] &= ~0x00000002u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_rollingcounter_0x358() {
  vcu_rollingcounter_0x358_ = 0;
  clear_has_vcu_rollingcounter_0x358();
}
::google::protobuf::int32 Gw_vcu_hmi_0x358_358::vcu_rollingcounter_0x358() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_rollingcounter_0x358)
  return vcu_rollingcounter_0x358_;
}
void Gw_vcu_hmi_0x358_358::set_vcu_rollingcounter_0x358(::google::protobuf::int32 value) {
  set_has_vcu_rollingcounter_0x358();
  vcu_rollingcounter_0x358_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_rollingcounter_0x358)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.VehiclehvstatusType vehiclehvstatus = 3;
bool Gw_vcu_hmi_0x358_358::has_vehiclehvstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vehiclehvstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vehiclehvstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Gw_vcu_hmi_0x358_358::clear_vehiclehvstatus() {
  vehiclehvstatus_ = 0;
  clear_has_vehiclehvstatus();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType Gw_vcu_hmi_0x358_358::vehiclehvstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vehiclehvstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType >(vehiclehvstatus_);
}
void Gw_vcu_hmi_0x358_358::set_vehiclehvstatus(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_VehiclehvstatusType_IsValid(value));
  set_has_vehiclehvstatus();
  vehiclehvstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vehiclehvstatus)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatcircuiterrorType packheatcircuiterror = 4;
bool Gw_vcu_hmi_0x358_358::has_packheatcircuiterror() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_packheatcircuiterror() {
  _has_bits_[0] |= 0x00000008u;
}
void Gw_vcu_hmi_0x358_358::clear_has_packheatcircuiterror() {
  _has_bits_[0] &= ~0x00000008u;
}
void Gw_vcu_hmi_0x358_358::clear_packheatcircuiterror() {
  packheatcircuiterror_ = 0;
  clear_has_packheatcircuiterror();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType Gw_vcu_hmi_0x358_358::packheatcircuiterror() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packheatcircuiterror)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType >(packheatcircuiterror_);
}
void Gw_vcu_hmi_0x358_358::set_packheatcircuiterror(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatcircuiterrorType_IsValid(value));
  set_has_packheatcircuiterror();
  packheatcircuiterror_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packheatcircuiterror)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackheatstatusType packheatstatus = 5;
bool Gw_vcu_hmi_0x358_358::has_packheatstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_packheatstatus() {
  _has_bits_[0] |= 0x00000010u;
}
void Gw_vcu_hmi_0x358_358::clear_has_packheatstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
void Gw_vcu_hmi_0x358_358::clear_packheatstatus() {
  packheatstatus_ = 0;
  clear_has_packheatstatus();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType Gw_vcu_hmi_0x358_358::packheatstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packheatstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType >(packheatstatus_);
}
void Gw_vcu_hmi_0x358_358::set_packheatstatus(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackheatstatusType_IsValid(value));
  set_has_packheatstatus();
  packheatstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packheatstatus)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.PackcoolingcircuiterrorType packcoolingcircuiterror = 6;
bool Gw_vcu_hmi_0x358_358::has_packcoolingcircuiterror() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_packcoolingcircuiterror() {
  _has_bits_[0] |= 0x00000020u;
}
void Gw_vcu_hmi_0x358_358::clear_has_packcoolingcircuiterror() {
  _has_bits_[0] &= ~0x00000020u;
}
void Gw_vcu_hmi_0x358_358::clear_packcoolingcircuiterror() {
  packcoolingcircuiterror_ = 0;
  clear_has_packcoolingcircuiterror();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::packcoolingcircuiterror() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packcoolingcircuiterror)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType >(packcoolingcircuiterror_);
}
void Gw_vcu_hmi_0x358_358::set_packcoolingcircuiterror(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_PackcoolingcircuiterrorType_IsValid(value));
  set_has_packcoolingcircuiterror();
  packcoolingcircuiterror_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.packcoolingcircuiterror)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.MotorcoolingcircuiterrorType motorcoolingcircuiterror = 7;
bool Gw_vcu_hmi_0x358_358::has_motorcoolingcircuiterror() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_motorcoolingcircuiterror() {
  _has_bits_[0] |= 0x00000040u;
}
void Gw_vcu_hmi_0x358_358::clear_has_motorcoolingcircuiterror() {
  _has_bits_[0] &= ~0x00000040u;
}
void Gw_vcu_hmi_0x358_358::clear_motorcoolingcircuiterror() {
  motorcoolingcircuiterror_ = 0;
  clear_has_motorcoolingcircuiterror();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType Gw_vcu_hmi_0x358_358::motorcoolingcircuiterror() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.motorcoolingcircuiterror)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType >(motorcoolingcircuiterror_);
}
void Gw_vcu_hmi_0x358_358::set_motorcoolingcircuiterror(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_MotorcoolingcircuiterrorType_IsValid(value));
  set_has_motorcoolingcircuiterror();
  motorcoolingcircuiterror_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.motorcoolingcircuiterror)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_batteryvoltageerrorType vcu_batteryvoltageerror = 8;
bool Gw_vcu_hmi_0x358_358::has_vcu_batteryvoltageerror() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_batteryvoltageerror() {
  _has_bits_[0] |= 0x00000080u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_batteryvoltageerror() {
  _has_bits_[0] &= ~0x00000080u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_batteryvoltageerror() {
  vcu_batteryvoltageerror_ = 0;
  clear_has_vcu_batteryvoltageerror();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType Gw_vcu_hmi_0x358_358::vcu_batteryvoltageerror() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_batteryvoltageerror)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType >(vcu_batteryvoltageerror_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_batteryvoltageerror(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_batteryvoltageerrorType_IsValid(value));
  set_has_vcu_batteryvoltageerror();
  vcu_batteryvoltageerror_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_batteryvoltageerror)
}

// optional double vcu_battervoltage = 9;
bool Gw_vcu_hmi_0x358_358::has_vcu_battervoltage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_battervoltage() {
  _has_bits_[0] |= 0x00000100u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_battervoltage() {
  _has_bits_[0] &= ~0x00000100u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_battervoltage() {
  vcu_battervoltage_ = 0;
  clear_has_vcu_battervoltage();
}
double Gw_vcu_hmi_0x358_358::vcu_battervoltage() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_battervoltage)
  return vcu_battervoltage_;
}
void Gw_vcu_hmi_0x358_358::set_vcu_battervoltage(double value) {
  set_has_vcu_battervoltage();
  vcu_battervoltage_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_battervoltage)
}

// optional double vcu_targcruisespeed = 10;
bool Gw_vcu_hmi_0x358_358::has_vcu_targcruisespeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_targcruisespeed() {
  _has_bits_[0] |= 0x00000200u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_targcruisespeed() {
  _has_bits_[0] &= ~0x00000200u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_targcruisespeed() {
  vcu_targcruisespeed_ = 0;
  clear_has_vcu_targcruisespeed();
}
double Gw_vcu_hmi_0x358_358::vcu_targcruisespeed() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_targcruisespeed)
  return vcu_targcruisespeed_;
}
void Gw_vcu_hmi_0x358_358::set_vcu_targcruisespeed(double value) {
  set_has_vcu_targcruisespeed();
  vcu_targcruisespeed_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_targcruisespeed)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_cruisecontrolstatusType vcu_cruisecontrolstatus = 11;
bool Gw_vcu_hmi_0x358_358::has_vcu_cruisecontrolstatus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_cruisecontrolstatus() {
  _has_bits_[0] |= 0x00000400u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_cruisecontrolstatus() {
  _has_bits_[0] &= ~0x00000400u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_cruisecontrolstatus() {
  vcu_cruisecontrolstatus_ = 0;
  clear_has_vcu_cruisecontrolstatus();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType Gw_vcu_hmi_0x358_358::vcu_cruisecontrolstatus() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_cruisecontrolstatus)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType >(vcu_cruisecontrolstatus_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_cruisecontrolstatus(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_cruisecontrolstatusType_IsValid(value));
  set_has_vcu_cruisecontrolstatus();
  vcu_cruisecontrolstatus_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_cruisecontrolstatus)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_driverstatus_stsType vcu_driverstatus_sts = 12;
bool Gw_vcu_hmi_0x358_358::has_vcu_driverstatus_sts() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_driverstatus_sts() {
  _has_bits_[0] |= 0x00000800u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_driverstatus_sts() {
  _has_bits_[0] &= ~0x00000800u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_driverstatus_sts() {
  vcu_driverstatus_sts_ = 0;
  clear_has_vcu_driverstatus_sts();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType Gw_vcu_hmi_0x358_358::vcu_driverstatus_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_driverstatus_sts)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType >(vcu_driverstatus_sts_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_driverstatus_sts(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_driverstatus_stsType_IsValid(value));
  set_has_vcu_driverstatus_sts();
  vcu_driverstatus_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_driverstatus_sts)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_drivemode_stsType vcu_drivemode_sts = 13;
bool Gw_vcu_hmi_0x358_358::has_vcu_drivemode_sts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_drivemode_sts() {
  _has_bits_[0] |= 0x00001000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_drivemode_sts() {
  _has_bits_[0] &= ~0x00001000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_drivemode_sts() {
  vcu_drivemode_sts_ = 0;
  clear_has_vcu_drivemode_sts();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType Gw_vcu_hmi_0x358_358::vcu_drivemode_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_drivemode_sts)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType >(vcu_drivemode_sts_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_drivemode_sts(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_drivemode_stsType_IsValid(value));
  set_has_vcu_drivemode_sts();
  vcu_drivemode_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_drivemode_sts)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_vehchg_stsType vcu_vehchg_sts = 14;
bool Gw_vcu_hmi_0x358_358::has_vcu_vehchg_sts() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_vehchg_sts() {
  _has_bits_[0] |= 0x00002000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_vehchg_sts() {
  _has_bits_[0] &= ~0x00002000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_vehchg_sts() {
  vcu_vehchg_sts_ = 0;
  clear_has_vcu_vehchg_sts();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType Gw_vcu_hmi_0x358_358::vcu_vehchg_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_vehchg_sts)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType >(vcu_vehchg_sts_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_vehchg_sts(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_vehchg_stsType_IsValid(value));
  set_has_vcu_vehchg_sts();
  vcu_vehchg_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_vehchg_sts)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_tbox_veh_stsType vcu_tbox_veh_sts = 15;
bool Gw_vcu_hmi_0x358_358::has_vcu_tbox_veh_sts() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_tbox_veh_sts() {
  _has_bits_[0] |= 0x00004000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_tbox_veh_sts() {
  _has_bits_[0] &= ~0x00004000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_tbox_veh_sts() {
  vcu_tbox_veh_sts_ = 0;
  clear_has_vcu_tbox_veh_sts();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType Gw_vcu_hmi_0x358_358::vcu_tbox_veh_sts() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_tbox_veh_sts)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType >(vcu_tbox_veh_sts_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_tbox_veh_sts(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_tbox_veh_stsType_IsValid(value));
  set_has_vcu_tbox_veh_sts();
  vcu_tbox_veh_sts_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_tbox_veh_sts)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_energyrecoverymodeType vcu_icm_energyrecoverymode = 16;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_energyrecoverymode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_energyrecoverymode() {
  _has_bits_[0] |= 0x00008000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_energyrecoverymode() {
  _has_bits_[0] &= ~0x00008000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_energyrecoverymode() {
  vcu_icm_energyrecoverymode_ = 0;
  clear_has_vcu_icm_energyrecoverymode();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType Gw_vcu_hmi_0x358_358::vcu_icm_energyrecoverymode() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_energyrecoverymode)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType >(vcu_icm_energyrecoverymode_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_energyrecoverymode(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_energyrecoverymodeType_IsValid(value));
  set_has_vcu_icm_energyrecoverymode();
  vcu_icm_energyrecoverymode_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_energyrecoverymode)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_vehhvil_errType vcu_icm_vehhvil_err = 17;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_vehhvil_err() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_vehhvil_err() {
  _has_bits_[0] |= 0x00010000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_vehhvil_err() {
  _has_bits_[0] &= ~0x00010000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_vehhvil_err() {
  vcu_icm_vehhvil_err_ = 0;
  clear_has_vcu_icm_vehhvil_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType Gw_vcu_hmi_0x358_358::vcu_icm_vehhvil_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_vehhvil_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType >(vcu_icm_vehhvil_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_vehhvil_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_vehhvil_errType_IsValid(value));
  set_has_vcu_icm_vehhvil_err();
  vcu_icm_vehhvil_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_vehhvil_err)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_mot_errType vcu_icm_mot_err = 18;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_mot_err() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_mot_err() {
  _has_bits_[0] |= 0x00020000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_mot_err() {
  _has_bits_[0] &= ~0x00020000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_mot_err() {
  vcu_icm_mot_err_ = 0;
  clear_has_vcu_icm_mot_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType Gw_vcu_hmi_0x358_358::vcu_icm_mot_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_mot_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType >(vcu_icm_mot_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_mot_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_mot_errType_IsValid(value));
  set_has_vcu_icm_mot_err();
  vcu_icm_mot_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_mot_err)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packvoltoff_errType vcu_icm_packvoltoff_err = 19;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_packvoltoff_err() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_packvoltoff_err() {
  _has_bits_[0] |= 0x00040000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_packvoltoff_err() {
  _has_bits_[0] &= ~0x00040000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_packvoltoff_err() {
  vcu_icm_packvoltoff_err_ = 0;
  clear_has_vcu_icm_packvoltoff_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType Gw_vcu_hmi_0x358_358::vcu_icm_packvoltoff_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_packvoltoff_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType >(vcu_icm_packvoltoff_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_packvoltoff_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packvoltoff_errType_IsValid(value));
  set_has_vcu_icm_packvoltoff_err();
  vcu_icm_packvoltoff_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_packvoltoff_err)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_chggearlvType vcu_icm_chggearlv = 20;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_chggearlv() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_chggearlv() {
  _has_bits_[0] |= 0x00080000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_chggearlv() {
  _has_bits_[0] &= ~0x00080000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_chggearlv() {
  vcu_icm_chggearlv_ = 0;
  clear_has_vcu_icm_chggearlv();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType Gw_vcu_hmi_0x358_358::vcu_icm_chggearlv() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_chggearlv)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType >(vcu_icm_chggearlv_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_chggearlv(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_chggearlvType_IsValid(value));
  set_has_vcu_icm_chggearlv();
  vcu_icm_chggearlv_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_chggearlv)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_packsys_errType vcu_icm_packsys_err = 21;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_packsys_err() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_packsys_err() {
  _has_bits_[0] |= 0x00100000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_packsys_err() {
  _has_bits_[0] &= ~0x00100000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_packsys_err() {
  vcu_icm_packsys_err_ = 0;
  clear_has_vcu_icm_packsys_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType Gw_vcu_hmi_0x358_358::vcu_icm_packsys_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_packsys_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType >(vcu_icm_packsys_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_packsys_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_packsys_errType_IsValid(value));
  set_has_vcu_icm_packsys_err();
  vcu_icm_packsys_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_packsys_err)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_drvsys_errType vcu_icm_drvsys_err = 22;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_drvsys_err() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_drvsys_err() {
  _has_bits_[0] |= 0x00200000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_drvsys_err() {
  _has_bits_[0] &= ~0x00200000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_drvsys_err() {
  vcu_icm_drvsys_err_ = 0;
  clear_has_vcu_icm_drvsys_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType Gw_vcu_hmi_0x358_358::vcu_icm_drvsys_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_drvsys_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType >(vcu_icm_drvsys_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_drvsys_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_drvsys_errType_IsValid(value));
  set_has_vcu_icm_drvsys_err();
  vcu_icm_drvsys_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_drvsys_err)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358.Vcu_icm_veh_errType vcu_icm_veh_err = 23;
bool Gw_vcu_hmi_0x358_358::has_vcu_icm_veh_err() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void Gw_vcu_hmi_0x358_358::set_has_vcu_icm_veh_err() {
  _has_bits_[0] |= 0x00400000u;
}
void Gw_vcu_hmi_0x358_358::clear_has_vcu_icm_veh_err() {
  _has_bits_[0] &= ~0x00400000u;
}
void Gw_vcu_hmi_0x358_358::clear_vcu_icm_veh_err() {
  vcu_icm_veh_err_ = 0;
  clear_has_vcu_icm_veh_err();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType Gw_vcu_hmi_0x358_358::vcu_icm_veh_err() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_veh_err)
  return static_cast< ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType >(vcu_icm_veh_err_);
}
void Gw_vcu_hmi_0x358_358::set_vcu_icm_veh_err(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType value) {
  assert(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358_Vcu_icm_veh_errType_IsValid(value));
  set_has_vcu_icm_veh_err();
  vcu_icm_veh_err_ = value;
  // @@protoc_insertion_point(field_set:jmc_auto.canbus.Gw_vcu_hmi_0x358_358.vcu_icm_veh_err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Teshun::kEpbStatus0X152152FieldNumber;
const int Teshun::kGwAbs0X211211FieldNumber;
const int Teshun::kBcmDoor0X310310FieldNumber;
const int Teshun::kGwVcuSts0X218218FieldNumber;
const int Teshun::kAduControldrive0X120120FieldNumber;
const int Teshun::kGwVcuControl20X131131FieldNumber;
const int Teshun::kGwScuShiftersts0Xc8C8FieldNumber;
const int Teshun::kGwVcuDrivests0X10A10AFieldNumber;
const int Teshun::kAduControlbrake0X110110FieldNumber;
const int Teshun::kEps2Status0X112112FieldNumber;
const int Teshun::kGwMcuPower0X226226FieldNumber;
const int Teshun::kAduControleps20X100100FieldNumber;
const int Teshun::kGwMcuOutput0X225225FieldNumber;
const int Teshun::kGwAbsSts0X221221FieldNumber;
const int Teshun::kIbcStatus0X122122FieldNumber;
const int Teshun::kGwVcuWhltq0X107107FieldNumber;
const int Teshun::kBcmBodysts0X344344FieldNumber;
const int Teshun::kGwBmsDisplay0X323323FieldNumber;
const int Teshun::kAduBodycontrol0X333333FieldNumber;
const int Teshun::kGwBmsSts0X181181FieldNumber;
const int Teshun::kGwVcuControl0X185185FieldNumber;
const int Teshun::kIbcStatus20X124124FieldNumber;
const int Teshun::kGwVcuHmi0X358358FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Teshun::Teshun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jmc_auto.canbus.Teshun)
}
Teshun::Teshun(const Teshun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_epb_status_0x152_152()) {
    epb_status_0x152_152_ = new ::jmc_auto::canbus::Epb_status_0x152_152(*from.epb_status_0x152_152_);
  } else {
    epb_status_0x152_152_ = NULL;
  }
  if (from.has_gw_abs_0x211_211()) {
    gw_abs_0x211_211_ = new ::jmc_auto::canbus::Gw_abs_0x211_211(*from.gw_abs_0x211_211_);
  } else {
    gw_abs_0x211_211_ = NULL;
  }
  if (from.has_bcm_door_0x310_310()) {
    bcm_door_0x310_310_ = new ::jmc_auto::canbus::Bcm_door_0x310_310(*from.bcm_door_0x310_310_);
  } else {
    bcm_door_0x310_310_ = NULL;
  }
  if (from.has_gw_vcu_sts_0x218_218()) {
    gw_vcu_sts_0x218_218_ = new ::jmc_auto::canbus::Gw_vcu_sts_0x218_218(*from.gw_vcu_sts_0x218_218_);
  } else {
    gw_vcu_sts_0x218_218_ = NULL;
  }
  if (from.has_adu_controldrive_0x120_120()) {
    adu_controldrive_0x120_120_ = new ::jmc_auto::canbus::Adu_controldrive_0x120_120(*from.adu_controldrive_0x120_120_);
  } else {
    adu_controldrive_0x120_120_ = NULL;
  }
  if (from.has_gw_vcu_control2_0x131_131()) {
    gw_vcu_control2_0x131_131_ = new ::jmc_auto::canbus::Gw_vcu_control2_0x131_131(*from.gw_vcu_control2_0x131_131_);
  } else {
    gw_vcu_control2_0x131_131_ = NULL;
  }
  if (from.has_gw_scu_shiftersts_0xc8_c8()) {
    gw_scu_shiftersts_0xc8_c8_ = new ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8(*from.gw_scu_shiftersts_0xc8_c8_);
  } else {
    gw_scu_shiftersts_0xc8_c8_ = NULL;
  }
  if (from.has_gw_vcu_drivests_0x10a_10a()) {
    gw_vcu_drivests_0x10a_10a_ = new ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a(*from.gw_vcu_drivests_0x10a_10a_);
  } else {
    gw_vcu_drivests_0x10a_10a_ = NULL;
  }
  if (from.has_adu_controlbrake_0x110_110()) {
    adu_controlbrake_0x110_110_ = new ::jmc_auto::canbus::Adu_controlbrake_0x110_110(*from.adu_controlbrake_0x110_110_);
  } else {
    adu_controlbrake_0x110_110_ = NULL;
  }
  if (from.has_eps2_status_0x112_112()) {
    eps2_status_0x112_112_ = new ::jmc_auto::canbus::Eps2_status_0x112_112(*from.eps2_status_0x112_112_);
  } else {
    eps2_status_0x112_112_ = NULL;
  }
  if (from.has_gw_mcu_power_0x226_226()) {
    gw_mcu_power_0x226_226_ = new ::jmc_auto::canbus::Gw_mcu_power_0x226_226(*from.gw_mcu_power_0x226_226_);
  } else {
    gw_mcu_power_0x226_226_ = NULL;
  }
  if (from.has_adu_controleps2_0x100_100()) {
    adu_controleps2_0x100_100_ = new ::jmc_auto::canbus::Adu_controleps2_0x100_100(*from.adu_controleps2_0x100_100_);
  } else {
    adu_controleps2_0x100_100_ = NULL;
  }
  if (from.has_gw_mcu_output_0x225_225()) {
    gw_mcu_output_0x225_225_ = new ::jmc_auto::canbus::Gw_mcu_output_0x225_225(*from.gw_mcu_output_0x225_225_);
  } else {
    gw_mcu_output_0x225_225_ = NULL;
  }
  if (from.has_gw_abs_sts_0x221_221()) {
    gw_abs_sts_0x221_221_ = new ::jmc_auto::canbus::Gw_abs_sts_0x221_221(*from.gw_abs_sts_0x221_221_);
  } else {
    gw_abs_sts_0x221_221_ = NULL;
  }
  if (from.has_ibc_status_0x122_122()) {
    ibc_status_0x122_122_ = new ::jmc_auto::canbus::Ibc_status_0x122_122(*from.ibc_status_0x122_122_);
  } else {
    ibc_status_0x122_122_ = NULL;
  }
  if (from.has_gw_vcu_whltq_0x107_107()) {
    gw_vcu_whltq_0x107_107_ = new ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107(*from.gw_vcu_whltq_0x107_107_);
  } else {
    gw_vcu_whltq_0x107_107_ = NULL;
  }
  if (from.has_bcm_bodysts_0x344_344()) {
    bcm_bodysts_0x344_344_ = new ::jmc_auto::canbus::Bcm_bodysts_0x344_344(*from.bcm_bodysts_0x344_344_);
  } else {
    bcm_bodysts_0x344_344_ = NULL;
  }
  if (from.has_gw_bms_display_0x323_323()) {
    gw_bms_display_0x323_323_ = new ::jmc_auto::canbus::Gw_bms_display_0x323_323(*from.gw_bms_display_0x323_323_);
  } else {
    gw_bms_display_0x323_323_ = NULL;
  }
  if (from.has_adu_bodycontrol_0x333_333()) {
    adu_bodycontrol_0x333_333_ = new ::jmc_auto::canbus::Adu_bodycontrol_0x333_333(*from.adu_bodycontrol_0x333_333_);
  } else {
    adu_bodycontrol_0x333_333_ = NULL;
  }
  if (from.has_gw_bms_sts_0x181_181()) {
    gw_bms_sts_0x181_181_ = new ::jmc_auto::canbus::Gw_bms_sts_0x181_181(*from.gw_bms_sts_0x181_181_);
  } else {
    gw_bms_sts_0x181_181_ = NULL;
  }
  if (from.has_gw_vcu_control_0x185_185()) {
    gw_vcu_control_0x185_185_ = new ::jmc_auto::canbus::Gw_vcu_control_0x185_185(*from.gw_vcu_control_0x185_185_);
  } else {
    gw_vcu_control_0x185_185_ = NULL;
  }
  if (from.has_ibc_status2_0x124_124()) {
    ibc_status2_0x124_124_ = new ::jmc_auto::canbus::Ibc_status2_0x124_124(*from.ibc_status2_0x124_124_);
  } else {
    ibc_status2_0x124_124_ = NULL;
  }
  if (from.has_gw_vcu_hmi_0x358_358()) {
    gw_vcu_hmi_0x358_358_ = new ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358(*from.gw_vcu_hmi_0x358_358_);
  } else {
    gw_vcu_hmi_0x358_358_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:jmc_auto.canbus.Teshun)
}

void Teshun::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&epb_status_0x152_152_, 0, reinterpret_cast<char*>(&gw_vcu_hmi_0x358_358_) -
    reinterpret_cast<char*>(&epb_status_0x152_152_) + sizeof(gw_vcu_hmi_0x358_358_));
}

Teshun::~Teshun() {
  // @@protoc_insertion_point(destructor:jmc_auto.canbus.Teshun)
  SharedDtor();
}

void Teshun::SharedDtor() {
  if (this != internal_default_instance()) {
    delete epb_status_0x152_152_;
  }
  if (this != internal_default_instance()) {
    delete gw_abs_0x211_211_;
  }
  if (this != internal_default_instance()) {
    delete bcm_door_0x310_310_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_sts_0x218_218_;
  }
  if (this != internal_default_instance()) {
    delete adu_controldrive_0x120_120_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_control2_0x131_131_;
  }
  if (this != internal_default_instance()) {
    delete gw_scu_shiftersts_0xc8_c8_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_drivests_0x10a_10a_;
  }
  if (this != internal_default_instance()) {
    delete adu_controlbrake_0x110_110_;
  }
  if (this != internal_default_instance()) {
    delete eps2_status_0x112_112_;
  }
  if (this != internal_default_instance()) {
    delete gw_mcu_power_0x226_226_;
  }
  if (this != internal_default_instance()) {
    delete adu_controleps2_0x100_100_;
  }
  if (this != internal_default_instance()) {
    delete gw_mcu_output_0x225_225_;
  }
  if (this != internal_default_instance()) {
    delete gw_abs_sts_0x221_221_;
  }
  if (this != internal_default_instance()) {
    delete ibc_status_0x122_122_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_whltq_0x107_107_;
  }
  if (this != internal_default_instance()) {
    delete bcm_bodysts_0x344_344_;
  }
  if (this != internal_default_instance()) {
    delete gw_bms_display_0x323_323_;
  }
  if (this != internal_default_instance()) {
    delete adu_bodycontrol_0x333_333_;
  }
  if (this != internal_default_instance()) {
    delete gw_bms_sts_0x181_181_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_control_0x185_185_;
  }
  if (this != internal_default_instance()) {
    delete ibc_status2_0x124_124_;
  }
  if (this != internal_default_instance()) {
    delete gw_vcu_hmi_0x358_358_;
  }
}

void Teshun::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Teshun::descriptor() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Teshun& Teshun::default_instance() {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::InitDefaults();
  return *internal_default_instance();
}

Teshun* Teshun::New(::google::protobuf::Arena* arena) const {
  Teshun* n = new Teshun;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Teshun::Clear() {
// @@protoc_insertion_point(message_clear_start:jmc_auto.canbus.Teshun)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_epb_status_0x152_152()) {
      GOOGLE_DCHECK(epb_status_0x152_152_ != NULL);
      epb_status_0x152_152_->::jmc_auto::canbus::Epb_status_0x152_152::Clear();
    }
    if (has_gw_abs_0x211_211()) {
      GOOGLE_DCHECK(gw_abs_0x211_211_ != NULL);
      gw_abs_0x211_211_->::jmc_auto::canbus::Gw_abs_0x211_211::Clear();
    }
    if (has_bcm_door_0x310_310()) {
      GOOGLE_DCHECK(bcm_door_0x310_310_ != NULL);
      bcm_door_0x310_310_->::jmc_auto::canbus::Bcm_door_0x310_310::Clear();
    }
    if (has_gw_vcu_sts_0x218_218()) {
      GOOGLE_DCHECK(gw_vcu_sts_0x218_218_ != NULL);
      gw_vcu_sts_0x218_218_->::jmc_auto::canbus::Gw_vcu_sts_0x218_218::Clear();
    }
    if (has_adu_controldrive_0x120_120()) {
      GOOGLE_DCHECK(adu_controldrive_0x120_120_ != NULL);
      adu_controldrive_0x120_120_->::jmc_auto::canbus::Adu_controldrive_0x120_120::Clear();
    }
    if (has_gw_vcu_control2_0x131_131()) {
      GOOGLE_DCHECK(gw_vcu_control2_0x131_131_ != NULL);
      gw_vcu_control2_0x131_131_->::jmc_auto::canbus::Gw_vcu_control2_0x131_131::Clear();
    }
    if (has_gw_scu_shiftersts_0xc8_c8()) {
      GOOGLE_DCHECK(gw_scu_shiftersts_0xc8_c8_ != NULL);
      gw_scu_shiftersts_0xc8_c8_->::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8::Clear();
    }
    if (has_gw_vcu_drivests_0x10a_10a()) {
      GOOGLE_DCHECK(gw_vcu_drivests_0x10a_10a_ != NULL);
      gw_vcu_drivests_0x10a_10a_->::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_adu_controlbrake_0x110_110()) {
      GOOGLE_DCHECK(adu_controlbrake_0x110_110_ != NULL);
      adu_controlbrake_0x110_110_->::jmc_auto::canbus::Adu_controlbrake_0x110_110::Clear();
    }
    if (has_eps2_status_0x112_112()) {
      GOOGLE_DCHECK(eps2_status_0x112_112_ != NULL);
      eps2_status_0x112_112_->::jmc_auto::canbus::Eps2_status_0x112_112::Clear();
    }
    if (has_gw_mcu_power_0x226_226()) {
      GOOGLE_DCHECK(gw_mcu_power_0x226_226_ != NULL);
      gw_mcu_power_0x226_226_->::jmc_auto::canbus::Gw_mcu_power_0x226_226::Clear();
    }
    if (has_adu_controleps2_0x100_100()) {
      GOOGLE_DCHECK(adu_controleps2_0x100_100_ != NULL);
      adu_controleps2_0x100_100_->::jmc_auto::canbus::Adu_controleps2_0x100_100::Clear();
    }
    if (has_gw_mcu_output_0x225_225()) {
      GOOGLE_DCHECK(gw_mcu_output_0x225_225_ != NULL);
      gw_mcu_output_0x225_225_->::jmc_auto::canbus::Gw_mcu_output_0x225_225::Clear();
    }
    if (has_gw_abs_sts_0x221_221()) {
      GOOGLE_DCHECK(gw_abs_sts_0x221_221_ != NULL);
      gw_abs_sts_0x221_221_->::jmc_auto::canbus::Gw_abs_sts_0x221_221::Clear();
    }
    if (has_ibc_status_0x122_122()) {
      GOOGLE_DCHECK(ibc_status_0x122_122_ != NULL);
      ibc_status_0x122_122_->::jmc_auto::canbus::Ibc_status_0x122_122::Clear();
    }
    if (has_gw_vcu_whltq_0x107_107()) {
      GOOGLE_DCHECK(gw_vcu_whltq_0x107_107_ != NULL);
      gw_vcu_whltq_0x107_107_->::jmc_auto::canbus::Gw_vcu_whltq_0x107_107::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 8323072u) {
    if (has_bcm_bodysts_0x344_344()) {
      GOOGLE_DCHECK(bcm_bodysts_0x344_344_ != NULL);
      bcm_bodysts_0x344_344_->::jmc_auto::canbus::Bcm_bodysts_0x344_344::Clear();
    }
    if (has_gw_bms_display_0x323_323()) {
      GOOGLE_DCHECK(gw_bms_display_0x323_323_ != NULL);
      gw_bms_display_0x323_323_->::jmc_auto::canbus::Gw_bms_display_0x323_323::Clear();
    }
    if (has_adu_bodycontrol_0x333_333()) {
      GOOGLE_DCHECK(adu_bodycontrol_0x333_333_ != NULL);
      adu_bodycontrol_0x333_333_->::jmc_auto::canbus::Adu_bodycontrol_0x333_333::Clear();
    }
    if (has_gw_bms_sts_0x181_181()) {
      GOOGLE_DCHECK(gw_bms_sts_0x181_181_ != NULL);
      gw_bms_sts_0x181_181_->::jmc_auto::canbus::Gw_bms_sts_0x181_181::Clear();
    }
    if (has_gw_vcu_control_0x185_185()) {
      GOOGLE_DCHECK(gw_vcu_control_0x185_185_ != NULL);
      gw_vcu_control_0x185_185_->::jmc_auto::canbus::Gw_vcu_control_0x185_185::Clear();
    }
    if (has_ibc_status2_0x124_124()) {
      GOOGLE_DCHECK(ibc_status2_0x124_124_ != NULL);
      ibc_status2_0x124_124_->::jmc_auto::canbus::Ibc_status2_0x124_124::Clear();
    }
    if (has_gw_vcu_hmi_0x358_358()) {
      GOOGLE_DCHECK(gw_vcu_hmi_0x358_358_ != NULL);
      gw_vcu_hmi_0x358_358_->::jmc_auto::canbus::Gw_vcu_hmi_0x358_358::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Teshun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jmc_auto.canbus.Teshun)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .jmc_auto.canbus.Epb_status_0x152_152 epb_status_0x152_152 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_epb_status_0x152_152()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_0x211_211 gw_abs_0x211_211 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_abs_0x211_211()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_door_0x310_310 bcm_door_0x310_310 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bcm_door_0x310_310()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218 gw_vcu_sts_0x218_218 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_sts_0x218_218()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controldrive_0x120_120 adu_controldrive_0x120_120 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adu_controldrive_0x120_120()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131 gw_vcu_control2_0x131_131 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_control2_0x131_131()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8 gw_scu_shiftersts_0xc8_c8 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_scu_shiftersts_0xc8_c8()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a gw_vcu_drivests_0x10a_10a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_drivests_0x10a_10a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110 adu_controlbrake_0x110_110 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adu_controlbrake_0x110_110()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Eps2_status_0x112_112 eps2_status_0x112_112 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_eps2_status_0x112_112()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226 gw_mcu_power_0x226_226 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_mcu_power_0x226_226()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_controleps2_0x100_100 adu_controleps2_0x100_100 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adu_controleps2_0x100_100()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225 gw_mcu_output_0x225_225 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_mcu_output_0x225_225()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221 gw_abs_sts_0x221_221 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_abs_sts_0x221_221()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status_0x122_122 ibc_status_0x122_122 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ibc_status_0x122_122()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107 gw_vcu_whltq_0x107_107 = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_whltq_0x107_107()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344 bcm_bodysts_0x344_344 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bcm_bodysts_0x344_344()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_display_0x323_323 gw_bms_display_0x323_323 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_bms_display_0x323_323()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333 adu_bodycontrol_0x333_333 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adu_bodycontrol_0x333_333()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181 gw_bms_sts_0x181_181 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_bms_sts_0x181_181()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185 gw_vcu_control_0x185_185 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_control_0x185_185()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Ibc_status2_0x124_124 ibc_status2_0x124_124 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ibc_status2_0x124_124()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358 gw_vcu_hmi_0x358_358 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gw_vcu_hmi_0x358_358()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jmc_auto.canbus.Teshun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jmc_auto.canbus.Teshun)
  return false;
#undef DO_
}

void Teshun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jmc_auto.canbus.Teshun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Epb_status_0x152_152 epb_status_0x152_152 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->epb_status_0x152_152_, output);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211 gw_abs_0x211_211 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->gw_abs_0x211_211_, output);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310 bcm_door_0x310_310 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->bcm_door_0x310_310_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218 gw_vcu_sts_0x218_218 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->gw_vcu_sts_0x218_218_, output);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120 adu_controldrive_0x120_120 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->adu_controldrive_0x120_120_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131 gw_vcu_control2_0x131_131 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->gw_vcu_control2_0x131_131_, output);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8 gw_scu_shiftersts_0xc8_c8 = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->gw_scu_shiftersts_0xc8_c8_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a gw_vcu_drivests_0x10a_10a = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->gw_vcu_drivests_0x10a_10a_, output);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110 adu_controlbrake_0x110_110 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->adu_controlbrake_0x110_110_, output);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112 eps2_status_0x112_112 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->eps2_status_0x112_112_, output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226 gw_mcu_power_0x226_226 = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->gw_mcu_power_0x226_226_, output);
  }

  // optional .jmc_auto.canbus.Adu_controleps2_0x100_100 adu_controleps2_0x100_100 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->adu_controleps2_0x100_100_, output);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225 gw_mcu_output_0x225_225 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->gw_mcu_output_0x225_225_, output);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221 gw_abs_sts_0x221_221 = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->gw_abs_sts_0x221_221_, output);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122 ibc_status_0x122_122 = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->ibc_status_0x122_122_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107 gw_vcu_whltq_0x107_107 = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->gw_vcu_whltq_0x107_107_, output);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344 bcm_bodysts_0x344_344 = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->bcm_bodysts_0x344_344_, output);
  }

  // optional .jmc_auto.canbus.Gw_bms_display_0x323_323 gw_bms_display_0x323_323 = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->gw_bms_display_0x323_323_, output);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333 adu_bodycontrol_0x333_333 = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->adu_bodycontrol_0x333_333_, output);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181 gw_bms_sts_0x181_181 = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->gw_bms_sts_0x181_181_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185 gw_vcu_control_0x185_185 = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->gw_vcu_control_0x185_185_, output);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124 ibc_status2_0x124_124 = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->ibc_status2_0x124_124_, output);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358 gw_vcu_hmi_0x358_358 = 23;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->gw_vcu_hmi_0x358_358_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:jmc_auto.canbus.Teshun)
}

::google::protobuf::uint8* Teshun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:jmc_auto.canbus.Teshun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .jmc_auto.canbus.Epb_status_0x152_152 epb_status_0x152_152 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->epb_status_0x152_152_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_abs_0x211_211 gw_abs_0x211_211 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->gw_abs_0x211_211_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Bcm_door_0x310_310 bcm_door_0x310_310 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->bcm_door_0x310_310_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218 gw_vcu_sts_0x218_218 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->gw_vcu_sts_0x218_218_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Adu_controldrive_0x120_120 adu_controldrive_0x120_120 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->adu_controldrive_0x120_120_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131 gw_vcu_control2_0x131_131 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->gw_vcu_control2_0x131_131_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8 gw_scu_shiftersts_0xc8_c8 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->gw_scu_shiftersts_0xc8_c8_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a gw_vcu_drivests_0x10a_10a = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->gw_vcu_drivests_0x10a_10a_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110 adu_controlbrake_0x110_110 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->adu_controlbrake_0x110_110_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Eps2_status_0x112_112 eps2_status_0x112_112 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->eps2_status_0x112_112_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226 gw_mcu_power_0x226_226 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->gw_mcu_power_0x226_226_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Adu_controleps2_0x100_100 adu_controleps2_0x100_100 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->adu_controleps2_0x100_100_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225 gw_mcu_output_0x225_225 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->gw_mcu_output_0x225_225_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221 gw_abs_sts_0x221_221 = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->gw_abs_sts_0x221_221_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Ibc_status_0x122_122 ibc_status_0x122_122 = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->ibc_status_0x122_122_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107 gw_vcu_whltq_0x107_107 = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->gw_vcu_whltq_0x107_107_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344 bcm_bodysts_0x344_344 = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->bcm_bodysts_0x344_344_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_bms_display_0x323_323 gw_bms_display_0x323_323 = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->gw_bms_display_0x323_323_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333 adu_bodycontrol_0x333_333 = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->adu_bodycontrol_0x333_333_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181 gw_bms_sts_0x181_181 = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->gw_bms_sts_0x181_181_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185 gw_vcu_control_0x185_185 = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->gw_vcu_control_0x185_185_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Ibc_status2_0x124_124 ibc_status2_0x124_124 = 22;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->ibc_status2_0x124_124_, deterministic, target);
  }

  // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358 gw_vcu_hmi_0x358_358 = 23;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->gw_vcu_hmi_0x358_358_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:jmc_auto.canbus.Teshun)
  return target;
}

size_t Teshun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jmc_auto.canbus.Teshun)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .jmc_auto.canbus.Epb_status_0x152_152 epb_status_0x152_152 = 1;
    if (has_epb_status_0x152_152()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->epb_status_0x152_152_);
    }

    // optional .jmc_auto.canbus.Gw_abs_0x211_211 gw_abs_0x211_211 = 2;
    if (has_gw_abs_0x211_211()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_abs_0x211_211_);
    }

    // optional .jmc_auto.canbus.Bcm_door_0x310_310 bcm_door_0x310_310 = 3;
    if (has_bcm_door_0x310_310()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bcm_door_0x310_310_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218 gw_vcu_sts_0x218_218 = 4;
    if (has_gw_vcu_sts_0x218_218()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_sts_0x218_218_);
    }

    // optional .jmc_auto.canbus.Adu_controldrive_0x120_120 adu_controldrive_0x120_120 = 5;
    if (has_adu_controldrive_0x120_120()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->adu_controldrive_0x120_120_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131 gw_vcu_control2_0x131_131 = 6;
    if (has_gw_vcu_control2_0x131_131()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_control2_0x131_131_);
    }

    // optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8 gw_scu_shiftersts_0xc8_c8 = 7;
    if (has_gw_scu_shiftersts_0xc8_c8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_scu_shiftersts_0xc8_c8_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a gw_vcu_drivests_0x10a_10a = 8;
    if (has_gw_vcu_drivests_0x10a_10a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_drivests_0x10a_10a_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .jmc_auto.canbus.Adu_controlbrake_0x110_110 adu_controlbrake_0x110_110 = 9;
    if (has_adu_controlbrake_0x110_110()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->adu_controlbrake_0x110_110_);
    }

    // optional .jmc_auto.canbus.Eps2_status_0x112_112 eps2_status_0x112_112 = 10;
    if (has_eps2_status_0x112_112()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->eps2_status_0x112_112_);
    }

    // optional .jmc_auto.canbus.Gw_mcu_power_0x226_226 gw_mcu_power_0x226_226 = 11;
    if (has_gw_mcu_power_0x226_226()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_mcu_power_0x226_226_);
    }

    // optional .jmc_auto.canbus.Adu_controleps2_0x100_100 adu_controleps2_0x100_100 = 12;
    if (has_adu_controleps2_0x100_100()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->adu_controleps2_0x100_100_);
    }

    // optional .jmc_auto.canbus.Gw_mcu_output_0x225_225 gw_mcu_output_0x225_225 = 13;
    if (has_gw_mcu_output_0x225_225()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_mcu_output_0x225_225_);
    }

    // optional .jmc_auto.canbus.Gw_abs_sts_0x221_221 gw_abs_sts_0x221_221 = 14;
    if (has_gw_abs_sts_0x221_221()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_abs_sts_0x221_221_);
    }

    // optional .jmc_auto.canbus.Ibc_status_0x122_122 ibc_status_0x122_122 = 15;
    if (has_ibc_status_0x122_122()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ibc_status_0x122_122_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107 gw_vcu_whltq_0x107_107 = 16;
    if (has_gw_vcu_whltq_0x107_107()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_whltq_0x107_107_);
    }

  }
  if (_has_bits_[16 / 32] & 8323072u) {
    // optional .jmc_auto.canbus.Bcm_bodysts_0x344_344 bcm_bodysts_0x344_344 = 17;
    if (has_bcm_bodysts_0x344_344()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bcm_bodysts_0x344_344_);
    }

    // optional .jmc_auto.canbus.Gw_bms_display_0x323_323 gw_bms_display_0x323_323 = 18;
    if (has_gw_bms_display_0x323_323()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_bms_display_0x323_323_);
    }

    // optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333 adu_bodycontrol_0x333_333 = 19;
    if (has_adu_bodycontrol_0x333_333()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->adu_bodycontrol_0x333_333_);
    }

    // optional .jmc_auto.canbus.Gw_bms_sts_0x181_181 gw_bms_sts_0x181_181 = 20;
    if (has_gw_bms_sts_0x181_181()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_bms_sts_0x181_181_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_control_0x185_185 gw_vcu_control_0x185_185 = 21;
    if (has_gw_vcu_control_0x185_185()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_control_0x185_185_);
    }

    // optional .jmc_auto.canbus.Ibc_status2_0x124_124 ibc_status2_0x124_124 = 22;
    if (has_ibc_status2_0x124_124()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ibc_status2_0x124_124_);
    }

    // optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358 gw_vcu_hmi_0x358_358 = 23;
    if (has_gw_vcu_hmi_0x358_358()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gw_vcu_hmi_0x358_358_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Teshun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jmc_auto.canbus.Teshun)
  GOOGLE_DCHECK_NE(&from, this);
  const Teshun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Teshun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jmc_auto.canbus.Teshun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jmc_auto.canbus.Teshun)
    MergeFrom(*source);
  }
}

void Teshun::MergeFrom(const Teshun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jmc_auto.canbus.Teshun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_epb_status_0x152_152()->::jmc_auto::canbus::Epb_status_0x152_152::MergeFrom(from.epb_status_0x152_152());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_gw_abs_0x211_211()->::jmc_auto::canbus::Gw_abs_0x211_211::MergeFrom(from.gw_abs_0x211_211());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_bcm_door_0x310_310()->::jmc_auto::canbus::Bcm_door_0x310_310::MergeFrom(from.bcm_door_0x310_310());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_gw_vcu_sts_0x218_218()->::jmc_auto::canbus::Gw_vcu_sts_0x218_218::MergeFrom(from.gw_vcu_sts_0x218_218());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_adu_controldrive_0x120_120()->::jmc_auto::canbus::Adu_controldrive_0x120_120::MergeFrom(from.adu_controldrive_0x120_120());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_gw_vcu_control2_0x131_131()->::jmc_auto::canbus::Gw_vcu_control2_0x131_131::MergeFrom(from.gw_vcu_control2_0x131_131());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_gw_scu_shiftersts_0xc8_c8()->::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8::MergeFrom(from.gw_scu_shiftersts_0xc8_c8());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_gw_vcu_drivests_0x10a_10a()->::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a::MergeFrom(from.gw_vcu_drivests_0x10a_10a());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_adu_controlbrake_0x110_110()->::jmc_auto::canbus::Adu_controlbrake_0x110_110::MergeFrom(from.adu_controlbrake_0x110_110());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_eps2_status_0x112_112()->::jmc_auto::canbus::Eps2_status_0x112_112::MergeFrom(from.eps2_status_0x112_112());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_gw_mcu_power_0x226_226()->::jmc_auto::canbus::Gw_mcu_power_0x226_226::MergeFrom(from.gw_mcu_power_0x226_226());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_adu_controleps2_0x100_100()->::jmc_auto::canbus::Adu_controleps2_0x100_100::MergeFrom(from.adu_controleps2_0x100_100());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_gw_mcu_output_0x225_225()->::jmc_auto::canbus::Gw_mcu_output_0x225_225::MergeFrom(from.gw_mcu_output_0x225_225());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_gw_abs_sts_0x221_221()->::jmc_auto::canbus::Gw_abs_sts_0x221_221::MergeFrom(from.gw_abs_sts_0x221_221());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable_ibc_status_0x122_122()->::jmc_auto::canbus::Ibc_status_0x122_122::MergeFrom(from.ibc_status_0x122_122());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_gw_vcu_whltq_0x107_107()->::jmc_auto::canbus::Gw_vcu_whltq_0x107_107::MergeFrom(from.gw_vcu_whltq_0x107_107());
    }
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_bcm_bodysts_0x344_344()->::jmc_auto::canbus::Bcm_bodysts_0x344_344::MergeFrom(from.bcm_bodysts_0x344_344());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_gw_bms_display_0x323_323()->::jmc_auto::canbus::Gw_bms_display_0x323_323::MergeFrom(from.gw_bms_display_0x323_323());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable_adu_bodycontrol_0x333_333()->::jmc_auto::canbus::Adu_bodycontrol_0x333_333::MergeFrom(from.adu_bodycontrol_0x333_333());
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_gw_bms_sts_0x181_181()->::jmc_auto::canbus::Gw_bms_sts_0x181_181::MergeFrom(from.gw_bms_sts_0x181_181());
    }
    if (cached_has_bits & 0x00100000u) {
      mutable_gw_vcu_control_0x185_185()->::jmc_auto::canbus::Gw_vcu_control_0x185_185::MergeFrom(from.gw_vcu_control_0x185_185());
    }
    if (cached_has_bits & 0x00200000u) {
      mutable_ibc_status2_0x124_124()->::jmc_auto::canbus::Ibc_status2_0x124_124::MergeFrom(from.ibc_status2_0x124_124());
    }
    if (cached_has_bits & 0x00400000u) {
      mutable_gw_vcu_hmi_0x358_358()->::jmc_auto::canbus::Gw_vcu_hmi_0x358_358::MergeFrom(from.gw_vcu_hmi_0x358_358());
    }
  }
}

void Teshun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jmc_auto.canbus.Teshun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Teshun::CopyFrom(const Teshun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jmc_auto.canbus.Teshun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Teshun::IsInitialized() const {
  return true;
}

void Teshun::Swap(Teshun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Teshun::InternalSwap(Teshun* other) {
  std::swap(epb_status_0x152_152_, other->epb_status_0x152_152_);
  std::swap(gw_abs_0x211_211_, other->gw_abs_0x211_211_);
  std::swap(bcm_door_0x310_310_, other->bcm_door_0x310_310_);
  std::swap(gw_vcu_sts_0x218_218_, other->gw_vcu_sts_0x218_218_);
  std::swap(adu_controldrive_0x120_120_, other->adu_controldrive_0x120_120_);
  std::swap(gw_vcu_control2_0x131_131_, other->gw_vcu_control2_0x131_131_);
  std::swap(gw_scu_shiftersts_0xc8_c8_, other->gw_scu_shiftersts_0xc8_c8_);
  std::swap(gw_vcu_drivests_0x10a_10a_, other->gw_vcu_drivests_0x10a_10a_);
  std::swap(adu_controlbrake_0x110_110_, other->adu_controlbrake_0x110_110_);
  std::swap(eps2_status_0x112_112_, other->eps2_status_0x112_112_);
  std::swap(gw_mcu_power_0x226_226_, other->gw_mcu_power_0x226_226_);
  std::swap(adu_controleps2_0x100_100_, other->adu_controleps2_0x100_100_);
  std::swap(gw_mcu_output_0x225_225_, other->gw_mcu_output_0x225_225_);
  std::swap(gw_abs_sts_0x221_221_, other->gw_abs_sts_0x221_221_);
  std::swap(ibc_status_0x122_122_, other->ibc_status_0x122_122_);
  std::swap(gw_vcu_whltq_0x107_107_, other->gw_vcu_whltq_0x107_107_);
  std::swap(bcm_bodysts_0x344_344_, other->bcm_bodysts_0x344_344_);
  std::swap(gw_bms_display_0x323_323_, other->gw_bms_display_0x323_323_);
  std::swap(adu_bodycontrol_0x333_333_, other->adu_bodycontrol_0x333_333_);
  std::swap(gw_bms_sts_0x181_181_, other->gw_bms_sts_0x181_181_);
  std::swap(gw_vcu_control_0x185_185_, other->gw_vcu_control_0x185_185_);
  std::swap(ibc_status2_0x124_124_, other->ibc_status2_0x124_124_);
  std::swap(gw_vcu_hmi_0x358_358_, other->gw_vcu_hmi_0x358_358_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Teshun::GetMetadata() const {
  protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modules_2fcanbus_2fproto_2fteshun_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Teshun

// optional .jmc_auto.canbus.Epb_status_0x152_152 epb_status_0x152_152 = 1;
bool Teshun::has_epb_status_0x152_152() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Teshun::set_has_epb_status_0x152_152() {
  _has_bits_[0] |= 0x00000001u;
}
void Teshun::clear_has_epb_status_0x152_152() {
  _has_bits_[0] &= ~0x00000001u;
}
void Teshun::clear_epb_status_0x152_152() {
  if (epb_status_0x152_152_ != NULL) epb_status_0x152_152_->::jmc_auto::canbus::Epb_status_0x152_152::Clear();
  clear_has_epb_status_0x152_152();
}
const ::jmc_auto::canbus::Epb_status_0x152_152& Teshun::epb_status_0x152_152() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.epb_status_0x152_152)
  return epb_status_0x152_152_ != NULL ? *epb_status_0x152_152_
                         : *::jmc_auto::canbus::Epb_status_0x152_152::internal_default_instance();
}
::jmc_auto::canbus::Epb_status_0x152_152* Teshun::mutable_epb_status_0x152_152() {
  set_has_epb_status_0x152_152();
  if (epb_status_0x152_152_ == NULL) {
    epb_status_0x152_152_ = new ::jmc_auto::canbus::Epb_status_0x152_152;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.epb_status_0x152_152)
  return epb_status_0x152_152_;
}
::jmc_auto::canbus::Epb_status_0x152_152* Teshun::release_epb_status_0x152_152() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.epb_status_0x152_152)
  clear_has_epb_status_0x152_152();
  ::jmc_auto::canbus::Epb_status_0x152_152* temp = epb_status_0x152_152_;
  epb_status_0x152_152_ = NULL;
  return temp;
}
void Teshun::set_allocated_epb_status_0x152_152(::jmc_auto::canbus::Epb_status_0x152_152* epb_status_0x152_152) {
  delete epb_status_0x152_152_;
  epb_status_0x152_152_ = epb_status_0x152_152;
  if (epb_status_0x152_152) {
    set_has_epb_status_0x152_152();
  } else {
    clear_has_epb_status_0x152_152();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.epb_status_0x152_152)
}

// optional .jmc_auto.canbus.Gw_abs_0x211_211 gw_abs_0x211_211 = 2;
bool Teshun::has_gw_abs_0x211_211() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Teshun::set_has_gw_abs_0x211_211() {
  _has_bits_[0] |= 0x00000002u;
}
void Teshun::clear_has_gw_abs_0x211_211() {
  _has_bits_[0] &= ~0x00000002u;
}
void Teshun::clear_gw_abs_0x211_211() {
  if (gw_abs_0x211_211_ != NULL) gw_abs_0x211_211_->::jmc_auto::canbus::Gw_abs_0x211_211::Clear();
  clear_has_gw_abs_0x211_211();
}
const ::jmc_auto::canbus::Gw_abs_0x211_211& Teshun::gw_abs_0x211_211() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_abs_0x211_211)
  return gw_abs_0x211_211_ != NULL ? *gw_abs_0x211_211_
                         : *::jmc_auto::canbus::Gw_abs_0x211_211::internal_default_instance();
}
::jmc_auto::canbus::Gw_abs_0x211_211* Teshun::mutable_gw_abs_0x211_211() {
  set_has_gw_abs_0x211_211();
  if (gw_abs_0x211_211_ == NULL) {
    gw_abs_0x211_211_ = new ::jmc_auto::canbus::Gw_abs_0x211_211;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_abs_0x211_211)
  return gw_abs_0x211_211_;
}
::jmc_auto::canbus::Gw_abs_0x211_211* Teshun::release_gw_abs_0x211_211() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_abs_0x211_211)
  clear_has_gw_abs_0x211_211();
  ::jmc_auto::canbus::Gw_abs_0x211_211* temp = gw_abs_0x211_211_;
  gw_abs_0x211_211_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_abs_0x211_211(::jmc_auto::canbus::Gw_abs_0x211_211* gw_abs_0x211_211) {
  delete gw_abs_0x211_211_;
  gw_abs_0x211_211_ = gw_abs_0x211_211;
  if (gw_abs_0x211_211) {
    set_has_gw_abs_0x211_211();
  } else {
    clear_has_gw_abs_0x211_211();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_abs_0x211_211)
}

// optional .jmc_auto.canbus.Bcm_door_0x310_310 bcm_door_0x310_310 = 3;
bool Teshun::has_bcm_door_0x310_310() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Teshun::set_has_bcm_door_0x310_310() {
  _has_bits_[0] |= 0x00000004u;
}
void Teshun::clear_has_bcm_door_0x310_310() {
  _has_bits_[0] &= ~0x00000004u;
}
void Teshun::clear_bcm_door_0x310_310() {
  if (bcm_door_0x310_310_ != NULL) bcm_door_0x310_310_->::jmc_auto::canbus::Bcm_door_0x310_310::Clear();
  clear_has_bcm_door_0x310_310();
}
const ::jmc_auto::canbus::Bcm_door_0x310_310& Teshun::bcm_door_0x310_310() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.bcm_door_0x310_310)
  return bcm_door_0x310_310_ != NULL ? *bcm_door_0x310_310_
                         : *::jmc_auto::canbus::Bcm_door_0x310_310::internal_default_instance();
}
::jmc_auto::canbus::Bcm_door_0x310_310* Teshun::mutable_bcm_door_0x310_310() {
  set_has_bcm_door_0x310_310();
  if (bcm_door_0x310_310_ == NULL) {
    bcm_door_0x310_310_ = new ::jmc_auto::canbus::Bcm_door_0x310_310;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.bcm_door_0x310_310)
  return bcm_door_0x310_310_;
}
::jmc_auto::canbus::Bcm_door_0x310_310* Teshun::release_bcm_door_0x310_310() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.bcm_door_0x310_310)
  clear_has_bcm_door_0x310_310();
  ::jmc_auto::canbus::Bcm_door_0x310_310* temp = bcm_door_0x310_310_;
  bcm_door_0x310_310_ = NULL;
  return temp;
}
void Teshun::set_allocated_bcm_door_0x310_310(::jmc_auto::canbus::Bcm_door_0x310_310* bcm_door_0x310_310) {
  delete bcm_door_0x310_310_;
  bcm_door_0x310_310_ = bcm_door_0x310_310;
  if (bcm_door_0x310_310) {
    set_has_bcm_door_0x310_310();
  } else {
    clear_has_bcm_door_0x310_310();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.bcm_door_0x310_310)
}

// optional .jmc_auto.canbus.Gw_vcu_sts_0x218_218 gw_vcu_sts_0x218_218 = 4;
bool Teshun::has_gw_vcu_sts_0x218_218() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Teshun::set_has_gw_vcu_sts_0x218_218() {
  _has_bits_[0] |= 0x00000008u;
}
void Teshun::clear_has_gw_vcu_sts_0x218_218() {
  _has_bits_[0] &= ~0x00000008u;
}
void Teshun::clear_gw_vcu_sts_0x218_218() {
  if (gw_vcu_sts_0x218_218_ != NULL) gw_vcu_sts_0x218_218_->::jmc_auto::canbus::Gw_vcu_sts_0x218_218::Clear();
  clear_has_gw_vcu_sts_0x218_218();
}
const ::jmc_auto::canbus::Gw_vcu_sts_0x218_218& Teshun::gw_vcu_sts_0x218_218() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_sts_0x218_218)
  return gw_vcu_sts_0x218_218_ != NULL ? *gw_vcu_sts_0x218_218_
                         : *::jmc_auto::canbus::Gw_vcu_sts_0x218_218::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218* Teshun::mutable_gw_vcu_sts_0x218_218() {
  set_has_gw_vcu_sts_0x218_218();
  if (gw_vcu_sts_0x218_218_ == NULL) {
    gw_vcu_sts_0x218_218_ = new ::jmc_auto::canbus::Gw_vcu_sts_0x218_218;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_sts_0x218_218)
  return gw_vcu_sts_0x218_218_;
}
::jmc_auto::canbus::Gw_vcu_sts_0x218_218* Teshun::release_gw_vcu_sts_0x218_218() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_sts_0x218_218)
  clear_has_gw_vcu_sts_0x218_218();
  ::jmc_auto::canbus::Gw_vcu_sts_0x218_218* temp = gw_vcu_sts_0x218_218_;
  gw_vcu_sts_0x218_218_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_sts_0x218_218(::jmc_auto::canbus::Gw_vcu_sts_0x218_218* gw_vcu_sts_0x218_218) {
  delete gw_vcu_sts_0x218_218_;
  gw_vcu_sts_0x218_218_ = gw_vcu_sts_0x218_218;
  if (gw_vcu_sts_0x218_218) {
    set_has_gw_vcu_sts_0x218_218();
  } else {
    clear_has_gw_vcu_sts_0x218_218();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_sts_0x218_218)
}

// optional .jmc_auto.canbus.Adu_controldrive_0x120_120 adu_controldrive_0x120_120 = 5;
bool Teshun::has_adu_controldrive_0x120_120() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Teshun::set_has_adu_controldrive_0x120_120() {
  _has_bits_[0] |= 0x00000010u;
}
void Teshun::clear_has_adu_controldrive_0x120_120() {
  _has_bits_[0] &= ~0x00000010u;
}
void Teshun::clear_adu_controldrive_0x120_120() {
  if (adu_controldrive_0x120_120_ != NULL) adu_controldrive_0x120_120_->::jmc_auto::canbus::Adu_controldrive_0x120_120::Clear();
  clear_has_adu_controldrive_0x120_120();
}
const ::jmc_auto::canbus::Adu_controldrive_0x120_120& Teshun::adu_controldrive_0x120_120() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.adu_controldrive_0x120_120)
  return adu_controldrive_0x120_120_ != NULL ? *adu_controldrive_0x120_120_
                         : *::jmc_auto::canbus::Adu_controldrive_0x120_120::internal_default_instance();
}
::jmc_auto::canbus::Adu_controldrive_0x120_120* Teshun::mutable_adu_controldrive_0x120_120() {
  set_has_adu_controldrive_0x120_120();
  if (adu_controldrive_0x120_120_ == NULL) {
    adu_controldrive_0x120_120_ = new ::jmc_auto::canbus::Adu_controldrive_0x120_120;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.adu_controldrive_0x120_120)
  return adu_controldrive_0x120_120_;
}
::jmc_auto::canbus::Adu_controldrive_0x120_120* Teshun::release_adu_controldrive_0x120_120() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.adu_controldrive_0x120_120)
  clear_has_adu_controldrive_0x120_120();
  ::jmc_auto::canbus::Adu_controldrive_0x120_120* temp = adu_controldrive_0x120_120_;
  adu_controldrive_0x120_120_ = NULL;
  return temp;
}
void Teshun::set_allocated_adu_controldrive_0x120_120(::jmc_auto::canbus::Adu_controldrive_0x120_120* adu_controldrive_0x120_120) {
  delete adu_controldrive_0x120_120_;
  adu_controldrive_0x120_120_ = adu_controldrive_0x120_120;
  if (adu_controldrive_0x120_120) {
    set_has_adu_controldrive_0x120_120();
  } else {
    clear_has_adu_controldrive_0x120_120();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.adu_controldrive_0x120_120)
}

// optional .jmc_auto.canbus.Gw_vcu_control2_0x131_131 gw_vcu_control2_0x131_131 = 6;
bool Teshun::has_gw_vcu_control2_0x131_131() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Teshun::set_has_gw_vcu_control2_0x131_131() {
  _has_bits_[0] |= 0x00000020u;
}
void Teshun::clear_has_gw_vcu_control2_0x131_131() {
  _has_bits_[0] &= ~0x00000020u;
}
void Teshun::clear_gw_vcu_control2_0x131_131() {
  if (gw_vcu_control2_0x131_131_ != NULL) gw_vcu_control2_0x131_131_->::jmc_auto::canbus::Gw_vcu_control2_0x131_131::Clear();
  clear_has_gw_vcu_control2_0x131_131();
}
const ::jmc_auto::canbus::Gw_vcu_control2_0x131_131& Teshun::gw_vcu_control2_0x131_131() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_control2_0x131_131)
  return gw_vcu_control2_0x131_131_ != NULL ? *gw_vcu_control2_0x131_131_
                         : *::jmc_auto::canbus::Gw_vcu_control2_0x131_131::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131* Teshun::mutable_gw_vcu_control2_0x131_131() {
  set_has_gw_vcu_control2_0x131_131();
  if (gw_vcu_control2_0x131_131_ == NULL) {
    gw_vcu_control2_0x131_131_ = new ::jmc_auto::canbus::Gw_vcu_control2_0x131_131;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_control2_0x131_131)
  return gw_vcu_control2_0x131_131_;
}
::jmc_auto::canbus::Gw_vcu_control2_0x131_131* Teshun::release_gw_vcu_control2_0x131_131() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_control2_0x131_131)
  clear_has_gw_vcu_control2_0x131_131();
  ::jmc_auto::canbus::Gw_vcu_control2_0x131_131* temp = gw_vcu_control2_0x131_131_;
  gw_vcu_control2_0x131_131_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_control2_0x131_131(::jmc_auto::canbus::Gw_vcu_control2_0x131_131* gw_vcu_control2_0x131_131) {
  delete gw_vcu_control2_0x131_131_;
  gw_vcu_control2_0x131_131_ = gw_vcu_control2_0x131_131;
  if (gw_vcu_control2_0x131_131) {
    set_has_gw_vcu_control2_0x131_131();
  } else {
    clear_has_gw_vcu_control2_0x131_131();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_control2_0x131_131)
}

// optional .jmc_auto.canbus.Gw_scu_shiftersts_0xc8_c8 gw_scu_shiftersts_0xc8_c8 = 7;
bool Teshun::has_gw_scu_shiftersts_0xc8_c8() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Teshun::set_has_gw_scu_shiftersts_0xc8_c8() {
  _has_bits_[0] |= 0x00000040u;
}
void Teshun::clear_has_gw_scu_shiftersts_0xc8_c8() {
  _has_bits_[0] &= ~0x00000040u;
}
void Teshun::clear_gw_scu_shiftersts_0xc8_c8() {
  if (gw_scu_shiftersts_0xc8_c8_ != NULL) gw_scu_shiftersts_0xc8_c8_->::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8::Clear();
  clear_has_gw_scu_shiftersts_0xc8_c8();
}
const ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8& Teshun::gw_scu_shiftersts_0xc8_c8() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_scu_shiftersts_0xc8_c8)
  return gw_scu_shiftersts_0xc8_c8_ != NULL ? *gw_scu_shiftersts_0xc8_c8_
                         : *::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8::internal_default_instance();
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8* Teshun::mutable_gw_scu_shiftersts_0xc8_c8() {
  set_has_gw_scu_shiftersts_0xc8_c8();
  if (gw_scu_shiftersts_0xc8_c8_ == NULL) {
    gw_scu_shiftersts_0xc8_c8_ = new ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_scu_shiftersts_0xc8_c8)
  return gw_scu_shiftersts_0xc8_c8_;
}
::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8* Teshun::release_gw_scu_shiftersts_0xc8_c8() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_scu_shiftersts_0xc8_c8)
  clear_has_gw_scu_shiftersts_0xc8_c8();
  ::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8* temp = gw_scu_shiftersts_0xc8_c8_;
  gw_scu_shiftersts_0xc8_c8_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_scu_shiftersts_0xc8_c8(::jmc_auto::canbus::Gw_scu_shiftersts_0xc8_c8* gw_scu_shiftersts_0xc8_c8) {
  delete gw_scu_shiftersts_0xc8_c8_;
  gw_scu_shiftersts_0xc8_c8_ = gw_scu_shiftersts_0xc8_c8;
  if (gw_scu_shiftersts_0xc8_c8) {
    set_has_gw_scu_shiftersts_0xc8_c8();
  } else {
    clear_has_gw_scu_shiftersts_0xc8_c8();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_scu_shiftersts_0xc8_c8)
}

// optional .jmc_auto.canbus.Gw_vcu_drivests_0x10a_10a gw_vcu_drivests_0x10a_10a = 8;
bool Teshun::has_gw_vcu_drivests_0x10a_10a() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Teshun::set_has_gw_vcu_drivests_0x10a_10a() {
  _has_bits_[0] |= 0x00000080u;
}
void Teshun::clear_has_gw_vcu_drivests_0x10a_10a() {
  _has_bits_[0] &= ~0x00000080u;
}
void Teshun::clear_gw_vcu_drivests_0x10a_10a() {
  if (gw_vcu_drivests_0x10a_10a_ != NULL) gw_vcu_drivests_0x10a_10a_->::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a::Clear();
  clear_has_gw_vcu_drivests_0x10a_10a();
}
const ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a& Teshun::gw_vcu_drivests_0x10a_10a() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_drivests_0x10a_10a)
  return gw_vcu_drivests_0x10a_10a_ != NULL ? *gw_vcu_drivests_0x10a_10a_
                         : *::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a* Teshun::mutable_gw_vcu_drivests_0x10a_10a() {
  set_has_gw_vcu_drivests_0x10a_10a();
  if (gw_vcu_drivests_0x10a_10a_ == NULL) {
    gw_vcu_drivests_0x10a_10a_ = new ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_drivests_0x10a_10a)
  return gw_vcu_drivests_0x10a_10a_;
}
::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a* Teshun::release_gw_vcu_drivests_0x10a_10a() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_drivests_0x10a_10a)
  clear_has_gw_vcu_drivests_0x10a_10a();
  ::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a* temp = gw_vcu_drivests_0x10a_10a_;
  gw_vcu_drivests_0x10a_10a_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_drivests_0x10a_10a(::jmc_auto::canbus::Gw_vcu_drivests_0x10a_10a* gw_vcu_drivests_0x10a_10a) {
  delete gw_vcu_drivests_0x10a_10a_;
  gw_vcu_drivests_0x10a_10a_ = gw_vcu_drivests_0x10a_10a;
  if (gw_vcu_drivests_0x10a_10a) {
    set_has_gw_vcu_drivests_0x10a_10a();
  } else {
    clear_has_gw_vcu_drivests_0x10a_10a();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_drivests_0x10a_10a)
}

// optional .jmc_auto.canbus.Adu_controlbrake_0x110_110 adu_controlbrake_0x110_110 = 9;
bool Teshun::has_adu_controlbrake_0x110_110() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Teshun::set_has_adu_controlbrake_0x110_110() {
  _has_bits_[0] |= 0x00000100u;
}
void Teshun::clear_has_adu_controlbrake_0x110_110() {
  _has_bits_[0] &= ~0x00000100u;
}
void Teshun::clear_adu_controlbrake_0x110_110() {
  if (adu_controlbrake_0x110_110_ != NULL) adu_controlbrake_0x110_110_->::jmc_auto::canbus::Adu_controlbrake_0x110_110::Clear();
  clear_has_adu_controlbrake_0x110_110();
}
const ::jmc_auto::canbus::Adu_controlbrake_0x110_110& Teshun::adu_controlbrake_0x110_110() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.adu_controlbrake_0x110_110)
  return adu_controlbrake_0x110_110_ != NULL ? *adu_controlbrake_0x110_110_
                         : *::jmc_auto::canbus::Adu_controlbrake_0x110_110::internal_default_instance();
}
::jmc_auto::canbus::Adu_controlbrake_0x110_110* Teshun::mutable_adu_controlbrake_0x110_110() {
  set_has_adu_controlbrake_0x110_110();
  if (adu_controlbrake_0x110_110_ == NULL) {
    adu_controlbrake_0x110_110_ = new ::jmc_auto::canbus::Adu_controlbrake_0x110_110;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.adu_controlbrake_0x110_110)
  return adu_controlbrake_0x110_110_;
}
::jmc_auto::canbus::Adu_controlbrake_0x110_110* Teshun::release_adu_controlbrake_0x110_110() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.adu_controlbrake_0x110_110)
  clear_has_adu_controlbrake_0x110_110();
  ::jmc_auto::canbus::Adu_controlbrake_0x110_110* temp = adu_controlbrake_0x110_110_;
  adu_controlbrake_0x110_110_ = NULL;
  return temp;
}
void Teshun::set_allocated_adu_controlbrake_0x110_110(::jmc_auto::canbus::Adu_controlbrake_0x110_110* adu_controlbrake_0x110_110) {
  delete adu_controlbrake_0x110_110_;
  adu_controlbrake_0x110_110_ = adu_controlbrake_0x110_110;
  if (adu_controlbrake_0x110_110) {
    set_has_adu_controlbrake_0x110_110();
  } else {
    clear_has_adu_controlbrake_0x110_110();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.adu_controlbrake_0x110_110)
}

// optional .jmc_auto.canbus.Eps2_status_0x112_112 eps2_status_0x112_112 = 10;
bool Teshun::has_eps2_status_0x112_112() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Teshun::set_has_eps2_status_0x112_112() {
  _has_bits_[0] |= 0x00000200u;
}
void Teshun::clear_has_eps2_status_0x112_112() {
  _has_bits_[0] &= ~0x00000200u;
}
void Teshun::clear_eps2_status_0x112_112() {
  if (eps2_status_0x112_112_ != NULL) eps2_status_0x112_112_->::jmc_auto::canbus::Eps2_status_0x112_112::Clear();
  clear_has_eps2_status_0x112_112();
}
const ::jmc_auto::canbus::Eps2_status_0x112_112& Teshun::eps2_status_0x112_112() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.eps2_status_0x112_112)
  return eps2_status_0x112_112_ != NULL ? *eps2_status_0x112_112_
                         : *::jmc_auto::canbus::Eps2_status_0x112_112::internal_default_instance();
}
::jmc_auto::canbus::Eps2_status_0x112_112* Teshun::mutable_eps2_status_0x112_112() {
  set_has_eps2_status_0x112_112();
  if (eps2_status_0x112_112_ == NULL) {
    eps2_status_0x112_112_ = new ::jmc_auto::canbus::Eps2_status_0x112_112;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.eps2_status_0x112_112)
  return eps2_status_0x112_112_;
}
::jmc_auto::canbus::Eps2_status_0x112_112* Teshun::release_eps2_status_0x112_112() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.eps2_status_0x112_112)
  clear_has_eps2_status_0x112_112();
  ::jmc_auto::canbus::Eps2_status_0x112_112* temp = eps2_status_0x112_112_;
  eps2_status_0x112_112_ = NULL;
  return temp;
}
void Teshun::set_allocated_eps2_status_0x112_112(::jmc_auto::canbus::Eps2_status_0x112_112* eps2_status_0x112_112) {
  delete eps2_status_0x112_112_;
  eps2_status_0x112_112_ = eps2_status_0x112_112;
  if (eps2_status_0x112_112) {
    set_has_eps2_status_0x112_112();
  } else {
    clear_has_eps2_status_0x112_112();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.eps2_status_0x112_112)
}

// optional .jmc_auto.canbus.Gw_mcu_power_0x226_226 gw_mcu_power_0x226_226 = 11;
bool Teshun::has_gw_mcu_power_0x226_226() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Teshun::set_has_gw_mcu_power_0x226_226() {
  _has_bits_[0] |= 0x00000400u;
}
void Teshun::clear_has_gw_mcu_power_0x226_226() {
  _has_bits_[0] &= ~0x00000400u;
}
void Teshun::clear_gw_mcu_power_0x226_226() {
  if (gw_mcu_power_0x226_226_ != NULL) gw_mcu_power_0x226_226_->::jmc_auto::canbus::Gw_mcu_power_0x226_226::Clear();
  clear_has_gw_mcu_power_0x226_226();
}
const ::jmc_auto::canbus::Gw_mcu_power_0x226_226& Teshun::gw_mcu_power_0x226_226() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_mcu_power_0x226_226)
  return gw_mcu_power_0x226_226_ != NULL ? *gw_mcu_power_0x226_226_
                         : *::jmc_auto::canbus::Gw_mcu_power_0x226_226::internal_default_instance();
}
::jmc_auto::canbus::Gw_mcu_power_0x226_226* Teshun::mutable_gw_mcu_power_0x226_226() {
  set_has_gw_mcu_power_0x226_226();
  if (gw_mcu_power_0x226_226_ == NULL) {
    gw_mcu_power_0x226_226_ = new ::jmc_auto::canbus::Gw_mcu_power_0x226_226;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_mcu_power_0x226_226)
  return gw_mcu_power_0x226_226_;
}
::jmc_auto::canbus::Gw_mcu_power_0x226_226* Teshun::release_gw_mcu_power_0x226_226() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_mcu_power_0x226_226)
  clear_has_gw_mcu_power_0x226_226();
  ::jmc_auto::canbus::Gw_mcu_power_0x226_226* temp = gw_mcu_power_0x226_226_;
  gw_mcu_power_0x226_226_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_mcu_power_0x226_226(::jmc_auto::canbus::Gw_mcu_power_0x226_226* gw_mcu_power_0x226_226) {
  delete gw_mcu_power_0x226_226_;
  gw_mcu_power_0x226_226_ = gw_mcu_power_0x226_226;
  if (gw_mcu_power_0x226_226) {
    set_has_gw_mcu_power_0x226_226();
  } else {
    clear_has_gw_mcu_power_0x226_226();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_mcu_power_0x226_226)
}

// optional .jmc_auto.canbus.Adu_controleps2_0x100_100 adu_controleps2_0x100_100 = 12;
bool Teshun::has_adu_controleps2_0x100_100() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Teshun::set_has_adu_controleps2_0x100_100() {
  _has_bits_[0] |= 0x00000800u;
}
void Teshun::clear_has_adu_controleps2_0x100_100() {
  _has_bits_[0] &= ~0x00000800u;
}
void Teshun::clear_adu_controleps2_0x100_100() {
  if (adu_controleps2_0x100_100_ != NULL) adu_controleps2_0x100_100_->::jmc_auto::canbus::Adu_controleps2_0x100_100::Clear();
  clear_has_adu_controleps2_0x100_100();
}
const ::jmc_auto::canbus::Adu_controleps2_0x100_100& Teshun::adu_controleps2_0x100_100() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.adu_controleps2_0x100_100)
  return adu_controleps2_0x100_100_ != NULL ? *adu_controleps2_0x100_100_
                         : *::jmc_auto::canbus::Adu_controleps2_0x100_100::internal_default_instance();
}
::jmc_auto::canbus::Adu_controleps2_0x100_100* Teshun::mutable_adu_controleps2_0x100_100() {
  set_has_adu_controleps2_0x100_100();
  if (adu_controleps2_0x100_100_ == NULL) {
    adu_controleps2_0x100_100_ = new ::jmc_auto::canbus::Adu_controleps2_0x100_100;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.adu_controleps2_0x100_100)
  return adu_controleps2_0x100_100_;
}
::jmc_auto::canbus::Adu_controleps2_0x100_100* Teshun::release_adu_controleps2_0x100_100() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.adu_controleps2_0x100_100)
  clear_has_adu_controleps2_0x100_100();
  ::jmc_auto::canbus::Adu_controleps2_0x100_100* temp = adu_controleps2_0x100_100_;
  adu_controleps2_0x100_100_ = NULL;
  return temp;
}
void Teshun::set_allocated_adu_controleps2_0x100_100(::jmc_auto::canbus::Adu_controleps2_0x100_100* adu_controleps2_0x100_100) {
  delete adu_controleps2_0x100_100_;
  adu_controleps2_0x100_100_ = adu_controleps2_0x100_100;
  if (adu_controleps2_0x100_100) {
    set_has_adu_controleps2_0x100_100();
  } else {
    clear_has_adu_controleps2_0x100_100();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.adu_controleps2_0x100_100)
}

// optional .jmc_auto.canbus.Gw_mcu_output_0x225_225 gw_mcu_output_0x225_225 = 13;
bool Teshun::has_gw_mcu_output_0x225_225() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Teshun::set_has_gw_mcu_output_0x225_225() {
  _has_bits_[0] |= 0x00001000u;
}
void Teshun::clear_has_gw_mcu_output_0x225_225() {
  _has_bits_[0] &= ~0x00001000u;
}
void Teshun::clear_gw_mcu_output_0x225_225() {
  if (gw_mcu_output_0x225_225_ != NULL) gw_mcu_output_0x225_225_->::jmc_auto::canbus::Gw_mcu_output_0x225_225::Clear();
  clear_has_gw_mcu_output_0x225_225();
}
const ::jmc_auto::canbus::Gw_mcu_output_0x225_225& Teshun::gw_mcu_output_0x225_225() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_mcu_output_0x225_225)
  return gw_mcu_output_0x225_225_ != NULL ? *gw_mcu_output_0x225_225_
                         : *::jmc_auto::canbus::Gw_mcu_output_0x225_225::internal_default_instance();
}
::jmc_auto::canbus::Gw_mcu_output_0x225_225* Teshun::mutable_gw_mcu_output_0x225_225() {
  set_has_gw_mcu_output_0x225_225();
  if (gw_mcu_output_0x225_225_ == NULL) {
    gw_mcu_output_0x225_225_ = new ::jmc_auto::canbus::Gw_mcu_output_0x225_225;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_mcu_output_0x225_225)
  return gw_mcu_output_0x225_225_;
}
::jmc_auto::canbus::Gw_mcu_output_0x225_225* Teshun::release_gw_mcu_output_0x225_225() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_mcu_output_0x225_225)
  clear_has_gw_mcu_output_0x225_225();
  ::jmc_auto::canbus::Gw_mcu_output_0x225_225* temp = gw_mcu_output_0x225_225_;
  gw_mcu_output_0x225_225_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_mcu_output_0x225_225(::jmc_auto::canbus::Gw_mcu_output_0x225_225* gw_mcu_output_0x225_225) {
  delete gw_mcu_output_0x225_225_;
  gw_mcu_output_0x225_225_ = gw_mcu_output_0x225_225;
  if (gw_mcu_output_0x225_225) {
    set_has_gw_mcu_output_0x225_225();
  } else {
    clear_has_gw_mcu_output_0x225_225();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_mcu_output_0x225_225)
}

// optional .jmc_auto.canbus.Gw_abs_sts_0x221_221 gw_abs_sts_0x221_221 = 14;
bool Teshun::has_gw_abs_sts_0x221_221() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Teshun::set_has_gw_abs_sts_0x221_221() {
  _has_bits_[0] |= 0x00002000u;
}
void Teshun::clear_has_gw_abs_sts_0x221_221() {
  _has_bits_[0] &= ~0x00002000u;
}
void Teshun::clear_gw_abs_sts_0x221_221() {
  if (gw_abs_sts_0x221_221_ != NULL) gw_abs_sts_0x221_221_->::jmc_auto::canbus::Gw_abs_sts_0x221_221::Clear();
  clear_has_gw_abs_sts_0x221_221();
}
const ::jmc_auto::canbus::Gw_abs_sts_0x221_221& Teshun::gw_abs_sts_0x221_221() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_abs_sts_0x221_221)
  return gw_abs_sts_0x221_221_ != NULL ? *gw_abs_sts_0x221_221_
                         : *::jmc_auto::canbus::Gw_abs_sts_0x221_221::internal_default_instance();
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221* Teshun::mutable_gw_abs_sts_0x221_221() {
  set_has_gw_abs_sts_0x221_221();
  if (gw_abs_sts_0x221_221_ == NULL) {
    gw_abs_sts_0x221_221_ = new ::jmc_auto::canbus::Gw_abs_sts_0x221_221;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_abs_sts_0x221_221)
  return gw_abs_sts_0x221_221_;
}
::jmc_auto::canbus::Gw_abs_sts_0x221_221* Teshun::release_gw_abs_sts_0x221_221() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_abs_sts_0x221_221)
  clear_has_gw_abs_sts_0x221_221();
  ::jmc_auto::canbus::Gw_abs_sts_0x221_221* temp = gw_abs_sts_0x221_221_;
  gw_abs_sts_0x221_221_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_abs_sts_0x221_221(::jmc_auto::canbus::Gw_abs_sts_0x221_221* gw_abs_sts_0x221_221) {
  delete gw_abs_sts_0x221_221_;
  gw_abs_sts_0x221_221_ = gw_abs_sts_0x221_221;
  if (gw_abs_sts_0x221_221) {
    set_has_gw_abs_sts_0x221_221();
  } else {
    clear_has_gw_abs_sts_0x221_221();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_abs_sts_0x221_221)
}

// optional .jmc_auto.canbus.Ibc_status_0x122_122 ibc_status_0x122_122 = 15;
bool Teshun::has_ibc_status_0x122_122() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Teshun::set_has_ibc_status_0x122_122() {
  _has_bits_[0] |= 0x00004000u;
}
void Teshun::clear_has_ibc_status_0x122_122() {
  _has_bits_[0] &= ~0x00004000u;
}
void Teshun::clear_ibc_status_0x122_122() {
  if (ibc_status_0x122_122_ != NULL) ibc_status_0x122_122_->::jmc_auto::canbus::Ibc_status_0x122_122::Clear();
  clear_has_ibc_status_0x122_122();
}
const ::jmc_auto::canbus::Ibc_status_0x122_122& Teshun::ibc_status_0x122_122() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.ibc_status_0x122_122)
  return ibc_status_0x122_122_ != NULL ? *ibc_status_0x122_122_
                         : *::jmc_auto::canbus::Ibc_status_0x122_122::internal_default_instance();
}
::jmc_auto::canbus::Ibc_status_0x122_122* Teshun::mutable_ibc_status_0x122_122() {
  set_has_ibc_status_0x122_122();
  if (ibc_status_0x122_122_ == NULL) {
    ibc_status_0x122_122_ = new ::jmc_auto::canbus::Ibc_status_0x122_122;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.ibc_status_0x122_122)
  return ibc_status_0x122_122_;
}
::jmc_auto::canbus::Ibc_status_0x122_122* Teshun::release_ibc_status_0x122_122() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.ibc_status_0x122_122)
  clear_has_ibc_status_0x122_122();
  ::jmc_auto::canbus::Ibc_status_0x122_122* temp = ibc_status_0x122_122_;
  ibc_status_0x122_122_ = NULL;
  return temp;
}
void Teshun::set_allocated_ibc_status_0x122_122(::jmc_auto::canbus::Ibc_status_0x122_122* ibc_status_0x122_122) {
  delete ibc_status_0x122_122_;
  ibc_status_0x122_122_ = ibc_status_0x122_122;
  if (ibc_status_0x122_122) {
    set_has_ibc_status_0x122_122();
  } else {
    clear_has_ibc_status_0x122_122();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.ibc_status_0x122_122)
}

// optional .jmc_auto.canbus.Gw_vcu_whltq_0x107_107 gw_vcu_whltq_0x107_107 = 16;
bool Teshun::has_gw_vcu_whltq_0x107_107() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Teshun::set_has_gw_vcu_whltq_0x107_107() {
  _has_bits_[0] |= 0x00008000u;
}
void Teshun::clear_has_gw_vcu_whltq_0x107_107() {
  _has_bits_[0] &= ~0x00008000u;
}
void Teshun::clear_gw_vcu_whltq_0x107_107() {
  if (gw_vcu_whltq_0x107_107_ != NULL) gw_vcu_whltq_0x107_107_->::jmc_auto::canbus::Gw_vcu_whltq_0x107_107::Clear();
  clear_has_gw_vcu_whltq_0x107_107();
}
const ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107& Teshun::gw_vcu_whltq_0x107_107() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_whltq_0x107_107)
  return gw_vcu_whltq_0x107_107_ != NULL ? *gw_vcu_whltq_0x107_107_
                         : *::jmc_auto::canbus::Gw_vcu_whltq_0x107_107::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_whltq_0x107_107* Teshun::mutable_gw_vcu_whltq_0x107_107() {
  set_has_gw_vcu_whltq_0x107_107();
  if (gw_vcu_whltq_0x107_107_ == NULL) {
    gw_vcu_whltq_0x107_107_ = new ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_whltq_0x107_107)
  return gw_vcu_whltq_0x107_107_;
}
::jmc_auto::canbus::Gw_vcu_whltq_0x107_107* Teshun::release_gw_vcu_whltq_0x107_107() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_whltq_0x107_107)
  clear_has_gw_vcu_whltq_0x107_107();
  ::jmc_auto::canbus::Gw_vcu_whltq_0x107_107* temp = gw_vcu_whltq_0x107_107_;
  gw_vcu_whltq_0x107_107_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_whltq_0x107_107(::jmc_auto::canbus::Gw_vcu_whltq_0x107_107* gw_vcu_whltq_0x107_107) {
  delete gw_vcu_whltq_0x107_107_;
  gw_vcu_whltq_0x107_107_ = gw_vcu_whltq_0x107_107;
  if (gw_vcu_whltq_0x107_107) {
    set_has_gw_vcu_whltq_0x107_107();
  } else {
    clear_has_gw_vcu_whltq_0x107_107();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_whltq_0x107_107)
}

// optional .jmc_auto.canbus.Bcm_bodysts_0x344_344 bcm_bodysts_0x344_344 = 17;
bool Teshun::has_bcm_bodysts_0x344_344() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Teshun::set_has_bcm_bodysts_0x344_344() {
  _has_bits_[0] |= 0x00010000u;
}
void Teshun::clear_has_bcm_bodysts_0x344_344() {
  _has_bits_[0] &= ~0x00010000u;
}
void Teshun::clear_bcm_bodysts_0x344_344() {
  if (bcm_bodysts_0x344_344_ != NULL) bcm_bodysts_0x344_344_->::jmc_auto::canbus::Bcm_bodysts_0x344_344::Clear();
  clear_has_bcm_bodysts_0x344_344();
}
const ::jmc_auto::canbus::Bcm_bodysts_0x344_344& Teshun::bcm_bodysts_0x344_344() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.bcm_bodysts_0x344_344)
  return bcm_bodysts_0x344_344_ != NULL ? *bcm_bodysts_0x344_344_
                         : *::jmc_auto::canbus::Bcm_bodysts_0x344_344::internal_default_instance();
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344* Teshun::mutable_bcm_bodysts_0x344_344() {
  set_has_bcm_bodysts_0x344_344();
  if (bcm_bodysts_0x344_344_ == NULL) {
    bcm_bodysts_0x344_344_ = new ::jmc_auto::canbus::Bcm_bodysts_0x344_344;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.bcm_bodysts_0x344_344)
  return bcm_bodysts_0x344_344_;
}
::jmc_auto::canbus::Bcm_bodysts_0x344_344* Teshun::release_bcm_bodysts_0x344_344() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.bcm_bodysts_0x344_344)
  clear_has_bcm_bodysts_0x344_344();
  ::jmc_auto::canbus::Bcm_bodysts_0x344_344* temp = bcm_bodysts_0x344_344_;
  bcm_bodysts_0x344_344_ = NULL;
  return temp;
}
void Teshun::set_allocated_bcm_bodysts_0x344_344(::jmc_auto::canbus::Bcm_bodysts_0x344_344* bcm_bodysts_0x344_344) {
  delete bcm_bodysts_0x344_344_;
  bcm_bodysts_0x344_344_ = bcm_bodysts_0x344_344;
  if (bcm_bodysts_0x344_344) {
    set_has_bcm_bodysts_0x344_344();
  } else {
    clear_has_bcm_bodysts_0x344_344();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.bcm_bodysts_0x344_344)
}

// optional .jmc_auto.canbus.Gw_bms_display_0x323_323 gw_bms_display_0x323_323 = 18;
bool Teshun::has_gw_bms_display_0x323_323() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Teshun::set_has_gw_bms_display_0x323_323() {
  _has_bits_[0] |= 0x00020000u;
}
void Teshun::clear_has_gw_bms_display_0x323_323() {
  _has_bits_[0] &= ~0x00020000u;
}
void Teshun::clear_gw_bms_display_0x323_323() {
  if (gw_bms_display_0x323_323_ != NULL) gw_bms_display_0x323_323_->::jmc_auto::canbus::Gw_bms_display_0x323_323::Clear();
  clear_has_gw_bms_display_0x323_323();
}
const ::jmc_auto::canbus::Gw_bms_display_0x323_323& Teshun::gw_bms_display_0x323_323() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_bms_display_0x323_323)
  return gw_bms_display_0x323_323_ != NULL ? *gw_bms_display_0x323_323_
                         : *::jmc_auto::canbus::Gw_bms_display_0x323_323::internal_default_instance();
}
::jmc_auto::canbus::Gw_bms_display_0x323_323* Teshun::mutable_gw_bms_display_0x323_323() {
  set_has_gw_bms_display_0x323_323();
  if (gw_bms_display_0x323_323_ == NULL) {
    gw_bms_display_0x323_323_ = new ::jmc_auto::canbus::Gw_bms_display_0x323_323;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_bms_display_0x323_323)
  return gw_bms_display_0x323_323_;
}
::jmc_auto::canbus::Gw_bms_display_0x323_323* Teshun::release_gw_bms_display_0x323_323() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_bms_display_0x323_323)
  clear_has_gw_bms_display_0x323_323();
  ::jmc_auto::canbus::Gw_bms_display_0x323_323* temp = gw_bms_display_0x323_323_;
  gw_bms_display_0x323_323_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_bms_display_0x323_323(::jmc_auto::canbus::Gw_bms_display_0x323_323* gw_bms_display_0x323_323) {
  delete gw_bms_display_0x323_323_;
  gw_bms_display_0x323_323_ = gw_bms_display_0x323_323;
  if (gw_bms_display_0x323_323) {
    set_has_gw_bms_display_0x323_323();
  } else {
    clear_has_gw_bms_display_0x323_323();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_bms_display_0x323_323)
}

// optional .jmc_auto.canbus.Adu_bodycontrol_0x333_333 adu_bodycontrol_0x333_333 = 19;
bool Teshun::has_adu_bodycontrol_0x333_333() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void Teshun::set_has_adu_bodycontrol_0x333_333() {
  _has_bits_[0] |= 0x00040000u;
}
void Teshun::clear_has_adu_bodycontrol_0x333_333() {
  _has_bits_[0] &= ~0x00040000u;
}
void Teshun::clear_adu_bodycontrol_0x333_333() {
  if (adu_bodycontrol_0x333_333_ != NULL) adu_bodycontrol_0x333_333_->::jmc_auto::canbus::Adu_bodycontrol_0x333_333::Clear();
  clear_has_adu_bodycontrol_0x333_333();
}
const ::jmc_auto::canbus::Adu_bodycontrol_0x333_333& Teshun::adu_bodycontrol_0x333_333() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.adu_bodycontrol_0x333_333)
  return adu_bodycontrol_0x333_333_ != NULL ? *adu_bodycontrol_0x333_333_
                         : *::jmc_auto::canbus::Adu_bodycontrol_0x333_333::internal_default_instance();
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333* Teshun::mutable_adu_bodycontrol_0x333_333() {
  set_has_adu_bodycontrol_0x333_333();
  if (adu_bodycontrol_0x333_333_ == NULL) {
    adu_bodycontrol_0x333_333_ = new ::jmc_auto::canbus::Adu_bodycontrol_0x333_333;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.adu_bodycontrol_0x333_333)
  return adu_bodycontrol_0x333_333_;
}
::jmc_auto::canbus::Adu_bodycontrol_0x333_333* Teshun::release_adu_bodycontrol_0x333_333() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.adu_bodycontrol_0x333_333)
  clear_has_adu_bodycontrol_0x333_333();
  ::jmc_auto::canbus::Adu_bodycontrol_0x333_333* temp = adu_bodycontrol_0x333_333_;
  adu_bodycontrol_0x333_333_ = NULL;
  return temp;
}
void Teshun::set_allocated_adu_bodycontrol_0x333_333(::jmc_auto::canbus::Adu_bodycontrol_0x333_333* adu_bodycontrol_0x333_333) {
  delete adu_bodycontrol_0x333_333_;
  adu_bodycontrol_0x333_333_ = adu_bodycontrol_0x333_333;
  if (adu_bodycontrol_0x333_333) {
    set_has_adu_bodycontrol_0x333_333();
  } else {
    clear_has_adu_bodycontrol_0x333_333();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.adu_bodycontrol_0x333_333)
}

// optional .jmc_auto.canbus.Gw_bms_sts_0x181_181 gw_bms_sts_0x181_181 = 20;
bool Teshun::has_gw_bms_sts_0x181_181() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void Teshun::set_has_gw_bms_sts_0x181_181() {
  _has_bits_[0] |= 0x00080000u;
}
void Teshun::clear_has_gw_bms_sts_0x181_181() {
  _has_bits_[0] &= ~0x00080000u;
}
void Teshun::clear_gw_bms_sts_0x181_181() {
  if (gw_bms_sts_0x181_181_ != NULL) gw_bms_sts_0x181_181_->::jmc_auto::canbus::Gw_bms_sts_0x181_181::Clear();
  clear_has_gw_bms_sts_0x181_181();
}
const ::jmc_auto::canbus::Gw_bms_sts_0x181_181& Teshun::gw_bms_sts_0x181_181() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_bms_sts_0x181_181)
  return gw_bms_sts_0x181_181_ != NULL ? *gw_bms_sts_0x181_181_
                         : *::jmc_auto::canbus::Gw_bms_sts_0x181_181::internal_default_instance();
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181* Teshun::mutable_gw_bms_sts_0x181_181() {
  set_has_gw_bms_sts_0x181_181();
  if (gw_bms_sts_0x181_181_ == NULL) {
    gw_bms_sts_0x181_181_ = new ::jmc_auto::canbus::Gw_bms_sts_0x181_181;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_bms_sts_0x181_181)
  return gw_bms_sts_0x181_181_;
}
::jmc_auto::canbus::Gw_bms_sts_0x181_181* Teshun::release_gw_bms_sts_0x181_181() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_bms_sts_0x181_181)
  clear_has_gw_bms_sts_0x181_181();
  ::jmc_auto::canbus::Gw_bms_sts_0x181_181* temp = gw_bms_sts_0x181_181_;
  gw_bms_sts_0x181_181_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_bms_sts_0x181_181(::jmc_auto::canbus::Gw_bms_sts_0x181_181* gw_bms_sts_0x181_181) {
  delete gw_bms_sts_0x181_181_;
  gw_bms_sts_0x181_181_ = gw_bms_sts_0x181_181;
  if (gw_bms_sts_0x181_181) {
    set_has_gw_bms_sts_0x181_181();
  } else {
    clear_has_gw_bms_sts_0x181_181();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_bms_sts_0x181_181)
}

// optional .jmc_auto.canbus.Gw_vcu_control_0x185_185 gw_vcu_control_0x185_185 = 21;
bool Teshun::has_gw_vcu_control_0x185_185() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void Teshun::set_has_gw_vcu_control_0x185_185() {
  _has_bits_[0] |= 0x00100000u;
}
void Teshun::clear_has_gw_vcu_control_0x185_185() {
  _has_bits_[0] &= ~0x00100000u;
}
void Teshun::clear_gw_vcu_control_0x185_185() {
  if (gw_vcu_control_0x185_185_ != NULL) gw_vcu_control_0x185_185_->::jmc_auto::canbus::Gw_vcu_control_0x185_185::Clear();
  clear_has_gw_vcu_control_0x185_185();
}
const ::jmc_auto::canbus::Gw_vcu_control_0x185_185& Teshun::gw_vcu_control_0x185_185() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_control_0x185_185)
  return gw_vcu_control_0x185_185_ != NULL ? *gw_vcu_control_0x185_185_
                         : *::jmc_auto::canbus::Gw_vcu_control_0x185_185::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_control_0x185_185* Teshun::mutable_gw_vcu_control_0x185_185() {
  set_has_gw_vcu_control_0x185_185();
  if (gw_vcu_control_0x185_185_ == NULL) {
    gw_vcu_control_0x185_185_ = new ::jmc_auto::canbus::Gw_vcu_control_0x185_185;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_control_0x185_185)
  return gw_vcu_control_0x185_185_;
}
::jmc_auto::canbus::Gw_vcu_control_0x185_185* Teshun::release_gw_vcu_control_0x185_185() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_control_0x185_185)
  clear_has_gw_vcu_control_0x185_185();
  ::jmc_auto::canbus::Gw_vcu_control_0x185_185* temp = gw_vcu_control_0x185_185_;
  gw_vcu_control_0x185_185_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_control_0x185_185(::jmc_auto::canbus::Gw_vcu_control_0x185_185* gw_vcu_control_0x185_185) {
  delete gw_vcu_control_0x185_185_;
  gw_vcu_control_0x185_185_ = gw_vcu_control_0x185_185;
  if (gw_vcu_control_0x185_185) {
    set_has_gw_vcu_control_0x185_185();
  } else {
    clear_has_gw_vcu_control_0x185_185();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_control_0x185_185)
}

// optional .jmc_auto.canbus.Ibc_status2_0x124_124 ibc_status2_0x124_124 = 22;
bool Teshun::has_ibc_status2_0x124_124() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void Teshun::set_has_ibc_status2_0x124_124() {
  _has_bits_[0] |= 0x00200000u;
}
void Teshun::clear_has_ibc_status2_0x124_124() {
  _has_bits_[0] &= ~0x00200000u;
}
void Teshun::clear_ibc_status2_0x124_124() {
  if (ibc_status2_0x124_124_ != NULL) ibc_status2_0x124_124_->::jmc_auto::canbus::Ibc_status2_0x124_124::Clear();
  clear_has_ibc_status2_0x124_124();
}
const ::jmc_auto::canbus::Ibc_status2_0x124_124& Teshun::ibc_status2_0x124_124() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.ibc_status2_0x124_124)
  return ibc_status2_0x124_124_ != NULL ? *ibc_status2_0x124_124_
                         : *::jmc_auto::canbus::Ibc_status2_0x124_124::internal_default_instance();
}
::jmc_auto::canbus::Ibc_status2_0x124_124* Teshun::mutable_ibc_status2_0x124_124() {
  set_has_ibc_status2_0x124_124();
  if (ibc_status2_0x124_124_ == NULL) {
    ibc_status2_0x124_124_ = new ::jmc_auto::canbus::Ibc_status2_0x124_124;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.ibc_status2_0x124_124)
  return ibc_status2_0x124_124_;
}
::jmc_auto::canbus::Ibc_status2_0x124_124* Teshun::release_ibc_status2_0x124_124() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.ibc_status2_0x124_124)
  clear_has_ibc_status2_0x124_124();
  ::jmc_auto::canbus::Ibc_status2_0x124_124* temp = ibc_status2_0x124_124_;
  ibc_status2_0x124_124_ = NULL;
  return temp;
}
void Teshun::set_allocated_ibc_status2_0x124_124(::jmc_auto::canbus::Ibc_status2_0x124_124* ibc_status2_0x124_124) {
  delete ibc_status2_0x124_124_;
  ibc_status2_0x124_124_ = ibc_status2_0x124_124;
  if (ibc_status2_0x124_124) {
    set_has_ibc_status2_0x124_124();
  } else {
    clear_has_ibc_status2_0x124_124();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.ibc_status2_0x124_124)
}

// optional .jmc_auto.canbus.Gw_vcu_hmi_0x358_358 gw_vcu_hmi_0x358_358 = 23;
bool Teshun::has_gw_vcu_hmi_0x358_358() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void Teshun::set_has_gw_vcu_hmi_0x358_358() {
  _has_bits_[0] |= 0x00400000u;
}
void Teshun::clear_has_gw_vcu_hmi_0x358_358() {
  _has_bits_[0] &= ~0x00400000u;
}
void Teshun::clear_gw_vcu_hmi_0x358_358() {
  if (gw_vcu_hmi_0x358_358_ != NULL) gw_vcu_hmi_0x358_358_->::jmc_auto::canbus::Gw_vcu_hmi_0x358_358::Clear();
  clear_has_gw_vcu_hmi_0x358_358();
}
const ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358& Teshun::gw_vcu_hmi_0x358_358() const {
  // @@protoc_insertion_point(field_get:jmc_auto.canbus.Teshun.gw_vcu_hmi_0x358_358)
  return gw_vcu_hmi_0x358_358_ != NULL ? *gw_vcu_hmi_0x358_358_
                         : *::jmc_auto::canbus::Gw_vcu_hmi_0x358_358::internal_default_instance();
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358* Teshun::mutable_gw_vcu_hmi_0x358_358() {
  set_has_gw_vcu_hmi_0x358_358();
  if (gw_vcu_hmi_0x358_358_ == NULL) {
    gw_vcu_hmi_0x358_358_ = new ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358;
  }
  // @@protoc_insertion_point(field_mutable:jmc_auto.canbus.Teshun.gw_vcu_hmi_0x358_358)
  return gw_vcu_hmi_0x358_358_;
}
::jmc_auto::canbus::Gw_vcu_hmi_0x358_358* Teshun::release_gw_vcu_hmi_0x358_358() {
  // @@protoc_insertion_point(field_release:jmc_auto.canbus.Teshun.gw_vcu_hmi_0x358_358)
  clear_has_gw_vcu_hmi_0x358_358();
  ::jmc_auto::canbus::Gw_vcu_hmi_0x358_358* temp = gw_vcu_hmi_0x358_358_;
  gw_vcu_hmi_0x358_358_ = NULL;
  return temp;
}
void Teshun::set_allocated_gw_vcu_hmi_0x358_358(::jmc_auto::canbus::Gw_vcu_hmi_0x358_358* gw_vcu_hmi_0x358_358) {
  delete gw_vcu_hmi_0x358_358_;
  gw_vcu_hmi_0x358_358_ = gw_vcu_hmi_0x358_358;
  if (gw_vcu_hmi_0x358_358) {
    set_has_gw_vcu_hmi_0x358_358();
  } else {
    clear_has_gw_vcu_hmi_0x358_358();
  }
  // @@protoc_insertion_point(field_set_allocated:jmc_auto.canbus.Teshun.gw_vcu_hmi_0x358_358)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace jmc_auto

// @@protoc_insertion_point(global_scope)
