/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_monitormessage_h
#define impl_type_monitormessage_h



#include "impl_type_monitormessageitem.h"
#include "impl_type_header.h"


struct MonitorMessage {
    ::Header header;
    
    ::MonitorMessageItem item;
    

    static bool IsPlane()
    {
        return false;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(header);
        fun(item);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(header);
        fun(item);
    }

    bool operator == (const ::MonitorMessage& t) const {
        return (header == t.header) && (item == t.item);
    }
};


#endif // impl_type_monitormessage_h
