/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_canbusconf_h
#define impl_type_canbusconf_h





#include "impl_type_vehicleparameter.h"
#include "impl_type_bool.h"


struct CanbusConf {
    ::VehicleParameter vehicle_parameter;
    
    ::Bool enable_debug_mode;
    
    ::Bool enable_receiver_log;
    
    ::Bool enable_sender_log;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(vehicle_parameter);
        fun(enable_debug_mode);
        fun(enable_receiver_log);
        fun(enable_sender_log);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(vehicle_parameter);
        fun(enable_debug_mode);
        fun(enable_receiver_log);
        fun(enable_sender_log);
    }

    bool operator == (const ::CanbusConf& t) const {
        return (vehicle_parameter == t.vehicle_parameter) && (enable_debug_mode == t.enable_debug_mode) && (enable_receiver_log == t.enable_receiver_log) && (enable_sender_log == t.enable_sender_log);
    }
};


#endif // impl_type_canbusconf_h
