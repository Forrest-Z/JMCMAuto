/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_gw_mp5_0x530_530_h
#define impl_type_gw_mp5_0x530_530_h


























#include "impl_type_mp5_aeb_on_offtype.h"
#include "impl_type_mp5_alarmstatustype.h"
#include "impl_type_mp5_fcw_sensitivetype.h"
#include "impl_type_mp5_tpmsautolocationsettingtype.h"
#include "impl_type_mp5_view_choicetype.h"
#include "impl_type_mp5_bsdswitchststype.h"
#include "impl_type_mp5_icmenushift_buttontype.h"
#include "impl_type_mp5_alarmornottype.h"
#include "impl_type_mp5_avm_rotationdirectiontype.h"
#include "impl_type_mp5_bsdlca_activetype.h"
#include "impl_type_mp5_paakreset_reqtype.h"
#include "impl_type_mp5_apa_available_ststype.h"
#include "impl_type_mp5_ldwwarningtype.h"
#include "impl_type_mp5_doa_activetype.h"
#include "impl_type_mp5_ldwsensitvitytype.h"
#include "impl_type_mp5_cta_activetype.h"
#include "impl_type_mp5_ihcmenureqtype.h"
#include "impl_type_mp5_icmenuactive_buttontype.h"
#include "impl_type_mp5_avm_buttontype.h"
#include "impl_type_mp5_tsrmenureqtype.h"
#include "impl_type_mp5_laneassittypereqtype.h"
#include "impl_type_int32.h"
#include "impl_type_mp5_fcw_on_offtype.h"
#include "impl_type_mp5_avm_angletype.h"
#include "impl_type_mp5_afs_swtichststype.h"


struct Gw_mp5_0x530_530 {
    ::Mp5_fcw_sensitiveType mp5_fcw_sensitive;
    
    ::Mp5_icmenushift_buttonType mp5_icmenushift_button;
    
    ::Mp5_aeb_on_offType mp5_aeb_on_off;
    
    ::Mp5_fcw_on_offType mp5_fcw_on_off;
    
    ::Mp5_bsdswitchstsType mp5_bsdswitchsts;
    
    ::Mp5_afs_swtichstsType mp5_afs_swtichsts;
    
    ::Mp5_laneassittypereqType mp5_laneassittypereq;
    
    ::Mp5_icmenuactive_buttonType mp5_icmenuactive_button;
    
    ::Mp5_alarmstatusType mp5_alarmstatus;
    
    ::Mp5_alarmornotType mp5_alarmornot;
    
    ::Mp5_paakreset_reqType mp5_paakreset_req;
    
    ::Mp5_cta_activeType mp5_cta_active;
    
    ::Mp5_bsdlca_activeType mp5_bsdlca_active;
    
    ::Mp5_tsrmenureqType mp5_tsrmenureq;
    
    ::Mp5_ldwwarningType mp5_ldwwarning;
    
    ::Mp5_ldwsensitvityType mp5_ldwsensitvity;
    
    ::Mp5_avm_angleType mp5_avm_angle;
    
    ::Int32 mp5_avm_rotationchange;
    
    ::Mp5_ihcmenureqType mp5_ihcmenureq;
    
    ::Mp5_doa_activeType mp5_doa_active;
    
    ::Mp5_apa_available_stsType mp5_apa_available_sts;
    
    ::Mp5_tpmsautolocationsettingType mp5_tpmsautolocationsetting;
    
    ::Mp5_avm_rotationdirectionType mp5_avm_rotationdirection;
    
    ::Mp5_avm_buttonType mp5_avm_button;
    
    ::Mp5_view_choiceType mp5_view_choice;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(mp5_fcw_sensitive);
        fun(mp5_icmenushift_button);
        fun(mp5_aeb_on_off);
        fun(mp5_fcw_on_off);
        fun(mp5_bsdswitchsts);
        fun(mp5_afs_swtichsts);
        fun(mp5_laneassittypereq);
        fun(mp5_icmenuactive_button);
        fun(mp5_alarmstatus);
        fun(mp5_alarmornot);
        fun(mp5_paakreset_req);
        fun(mp5_cta_active);
        fun(mp5_bsdlca_active);
        fun(mp5_tsrmenureq);
        fun(mp5_ldwwarning);
        fun(mp5_ldwsensitvity);
        fun(mp5_avm_angle);
        fun(mp5_avm_rotationchange);
        fun(mp5_ihcmenureq);
        fun(mp5_doa_active);
        fun(mp5_apa_available_sts);
        fun(mp5_tpmsautolocationsetting);
        fun(mp5_avm_rotationdirection);
        fun(mp5_avm_button);
        fun(mp5_view_choice);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(mp5_fcw_sensitive);
        fun(mp5_icmenushift_button);
        fun(mp5_aeb_on_off);
        fun(mp5_fcw_on_off);
        fun(mp5_bsdswitchsts);
        fun(mp5_afs_swtichsts);
        fun(mp5_laneassittypereq);
        fun(mp5_icmenuactive_button);
        fun(mp5_alarmstatus);
        fun(mp5_alarmornot);
        fun(mp5_paakreset_req);
        fun(mp5_cta_active);
        fun(mp5_bsdlca_active);
        fun(mp5_tsrmenureq);
        fun(mp5_ldwwarning);
        fun(mp5_ldwsensitvity);
        fun(mp5_avm_angle);
        fun(mp5_avm_rotationchange);
        fun(mp5_ihcmenureq);
        fun(mp5_doa_active);
        fun(mp5_apa_available_sts);
        fun(mp5_tpmsautolocationsetting);
        fun(mp5_avm_rotationdirection);
        fun(mp5_avm_button);
        fun(mp5_view_choice);
    }

    bool operator == (const ::Gw_mp5_0x530_530& t) const {
        return (mp5_fcw_sensitive == t.mp5_fcw_sensitive) && (mp5_icmenushift_button == t.mp5_icmenushift_button) && (mp5_aeb_on_off == t.mp5_aeb_on_off) && (mp5_fcw_on_off == t.mp5_fcw_on_off) && (mp5_bsdswitchsts == t.mp5_bsdswitchsts) && (mp5_afs_swtichsts == t.mp5_afs_swtichsts) && (mp5_laneassittypereq == t.mp5_laneassittypereq) && (mp5_icmenuactive_button == t.mp5_icmenuactive_button) && (mp5_alarmstatus == t.mp5_alarmstatus) && (mp5_alarmornot == t.mp5_alarmornot) && (mp5_paakreset_req == t.mp5_paakreset_req) && (mp5_cta_active == t.mp5_cta_active) && (mp5_bsdlca_active == t.mp5_bsdlca_active) && (mp5_tsrmenureq == t.mp5_tsrmenureq) && (mp5_ldwwarning == t.mp5_ldwwarning) && (mp5_ldwsensitvity == t.mp5_ldwsensitvity) && (mp5_avm_angle == t.mp5_avm_angle) && (mp5_avm_rotationchange == t.mp5_avm_rotationchange) && (mp5_ihcmenureq == t.mp5_ihcmenureq) && (mp5_doa_active == t.mp5_doa_active) && (mp5_apa_available_sts == t.mp5_apa_available_sts) && (mp5_tpmsautolocationsetting == t.mp5_tpmsautolocationsetting) && (mp5_avm_rotationdirection == t.mp5_avm_rotationdirection) && (mp5_avm_button == t.mp5_avm_button) && (mp5_view_choice == t.mp5_view_choice);
    }
};


#endif // impl_type_gw_mp5_0x530_530_h
