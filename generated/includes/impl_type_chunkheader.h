/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_chunkheader_h
#define impl_type_chunkheader_h





#include "impl_type_uint64.h"


struct ChunkHeader {
    ::UInt64 begin_time;
    
    ::UInt64 end_time;
    
    ::UInt64 message_number;
    
    ::UInt64 raw_size;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(begin_time);
        fun(end_time);
        fun(message_number);
        fun(raw_size);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(begin_time);
        fun(end_time);
        fun(message_number);
        fun(raw_size);
    }

    bool operator == (const ::ChunkHeader& t) const {
        return (begin_time == t.begin_time) && (end_time == t.end_time) && (message_number == t.message_number) && (raw_size == t.raw_size);
    }
};


#endif // impl_type_chunkheader_h
