/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_sonar_h
#define impl_type_sonar_h




#include "impl_type_double.h"
#include "impl_type_wheelspeedtype.h"


struct Sonar {
    ::Double range;
    
    ::WheelSpeedType translation;
    
    ::Double rotation;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(range);
        fun(translation);
        fun(rotation);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(range);
        fun(translation);
        fun(rotation);
    }

    bool operator == (const ::Sonar& t) const {
        return (range == t.range) && (translation == t.translation) && (rotation == t.rotation);
    }
};


#endif // impl_type_sonar_h
