/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_esp_raw_0x212_212_h
#define impl_type_esp_raw_0x212_212_h











#include "impl_type_esp_vxwwheelrrvalidtype.h"
#include "impl_type_double.h"
#include "impl_type_esp_vxwwheelfrvalidtype.h"
#include "impl_type_int32.h"
#include "impl_type_esp_vxwwheelrlvalidtype.h"
#include "impl_type_esp_vxwwheelflvalidtype.h"


struct Esp_raw_0x212_212 {
    ::Double esp_vxwwheelrawfr;
    
    ::Double esp_vxwwheelrawrl;
    
    ::Double esp_vxwwheelrawrr;
    
    ::Int32 rolling_counter_0x212;
    
    ::Esp_vxwwheelrrvalidType esp_vxwwheelrrvalid;
    
    ::Esp_vxwwheelrlvalidType esp_vxwwheelrlvalid;
    
    ::Esp_vxwwheelfrvalidType esp_vxwwheelfrvalid;
    
    ::Esp_vxwwheelflvalidType esp_vxwwheelflvalid;
    
    ::Int32 checksum_0x212;
    
    ::Double esp_vxwwheelrawfl;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(esp_vxwwheelrawfr);
        fun(esp_vxwwheelrawrl);
        fun(esp_vxwwheelrawrr);
        fun(rolling_counter_0x212);
        fun(esp_vxwwheelrrvalid);
        fun(esp_vxwwheelrlvalid);
        fun(esp_vxwwheelfrvalid);
        fun(esp_vxwwheelflvalid);
        fun(checksum_0x212);
        fun(esp_vxwwheelrawfl);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(esp_vxwwheelrawfr);
        fun(esp_vxwwheelrawrl);
        fun(esp_vxwwheelrawrr);
        fun(rolling_counter_0x212);
        fun(esp_vxwwheelrrvalid);
        fun(esp_vxwwheelrlvalid);
        fun(esp_vxwwheelfrvalid);
        fun(esp_vxwwheelflvalid);
        fun(checksum_0x212);
        fun(esp_vxwwheelrawfl);
    }

    bool operator == (const ::Esp_raw_0x212_212& t) const {
        return (esp_vxwwheelrawfr == t.esp_vxwwheelrawfr) && (esp_vxwwheelrawrl == t.esp_vxwwheelrawrl) && (esp_vxwwheelrawrr == t.esp_vxwwheelrawrr) && (rolling_counter_0x212 == t.rolling_counter_0x212) && (esp_vxwwheelrrvalid == t.esp_vxwwheelrrvalid) && (esp_vxwwheelrlvalid == t.esp_vxwwheelrlvalid) && (esp_vxwwheelfrvalid == t.esp_vxwwheelfrvalid) && (esp_vxwwheelflvalid == t.esp_vxwwheelflvalid) && (checksum_0x212 == t.checksum_0x212) && (esp_vxwwheelrawfl == t.esp_vxwwheelrawfl);
    }
};


#endif // impl_type_esp_raw_0x212_212_h
