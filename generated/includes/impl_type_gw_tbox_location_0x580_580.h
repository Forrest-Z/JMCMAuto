/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_gw_tbox_location_0x580_580_h
#define impl_type_gw_tbox_location_0x580_580_h





#include "impl_type_double.h"
#include "impl_type_tbox_locationststype.h"
#include "impl_type_tbox_gps_ubtype.h"


struct Gw_tbox_location_0x580_580 {
    ::Double tbox_longitude;
    
    ::Double tbox_latidude;
    
    ::Tbox_gps_ubType tbox_gps_ub;
    
    ::Tbox_locationstsType tbox_locationsts;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(tbox_longitude);
        fun(tbox_latidude);
        fun(tbox_gps_ub);
        fun(tbox_locationsts);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(tbox_longitude);
        fun(tbox_latidude);
        fun(tbox_gps_ub);
        fun(tbox_locationsts);
    }

    bool operator == (const ::Gw_tbox_location_0x580_580& t) const {
        return (tbox_longitude == t.tbox_longitude) && (tbox_latidude == t.tbox_latidude) && (tbox_gps_ub == t.tbox_gps_ub) && (tbox_locationsts == t.tbox_locationsts);
    }
};


#endif // impl_type_gw_tbox_location_0x580_580_h
