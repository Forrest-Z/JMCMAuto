/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_wheel_speed_rpt_7a_h
#define impl_type_wheel_speed_rpt_7a_h





#include "impl_type_int32.h"


struct Wheel_speed_rpt_7a {
    ::Int32 wheel_spd_rear_right;
    
    ::Int32 wheel_spd_rear_left;
    
    ::Int32 wheel_spd_front_right;
    
    ::Int32 wheel_spd_front_left;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(wheel_spd_rear_right);
        fun(wheel_spd_rear_left);
        fun(wheel_spd_front_right);
        fun(wheel_spd_front_left);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(wheel_spd_rear_right);
        fun(wheel_spd_rear_left);
        fun(wheel_spd_front_right);
        fun(wheel_spd_front_left);
    }

    bool operator == (const ::Wheel_speed_rpt_7a& t) const {
        return (wheel_spd_rear_right == t.wheel_spd_rear_right) && (wheel_spd_rear_left == t.wheel_spd_rear_left) && (wheel_spd_front_right == t.wheel_spd_front_right) && (wheel_spd_front_left == t.wheel_spd_front_left);
    }
};


#endif // impl_type_wheel_speed_rpt_7a_h
