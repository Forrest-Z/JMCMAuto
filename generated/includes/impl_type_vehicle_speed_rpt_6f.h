/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_vehicle_speed_rpt_6f_h
#define impl_type_vehicle_speed_rpt_6f_h



#include "impl_type_double.h"
#include "impl_type_vehicle_speed_validtype.h"


struct Vehicle_speed_rpt_6f {
    ::Double vehicle_speed;
    
    ::Vehicle_speed_validType vehicle_speed_valid;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(vehicle_speed);
        fun(vehicle_speed_valid);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(vehicle_speed);
        fun(vehicle_speed_valid);
    }

    bool operator == (const ::Vehicle_speed_rpt_6f& t) const {
        return (vehicle_speed == t.vehicle_speed) && (vehicle_speed_valid == t.vehicle_speed_valid);
    }
};


#endif // impl_type_vehicle_speed_rpt_6f_h
