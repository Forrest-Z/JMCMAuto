/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_gw_ems_tqwhl_0x111_111_h
#define impl_type_gw_ems_tqwhl_0x111_111_h


















#include "impl_type_tcu_stgearmodetype.h"
#include "impl_type_tcu_trsmfaultflagtype.h"
#include "impl_type_tcu_displaygeartype.h"
#include "impl_type_tcu_driverinterventiontype.h"
#include "impl_type_tcu_targetgearreqtype.h"
#include "impl_type_tcu_gearshiftinprogresstype.h"
#include "impl_type_tcu_driving_mode_reqtype.h"
#include "impl_type_tcu_availabletype.h"
#include "impl_type_tcu_shiftlevertopreqinvalidtype.h"
#include "impl_type_tcu_currentgearpositiontype.h"
#include "impl_type_tcu_shiftlevertopreqtype.h"
#include "impl_type_tcu_transpmotoparkreqinvalidtype.h"
#include "impl_type_int32.h"
#include "impl_type_tcu_transpmotorparkreqtype.h"
#include "impl_type_tcu_shiftleverpos_sbwmtype.h"
#include "impl_type_tcu_gearselectorreqtype.h"


struct Gw_ems_tqwhl_0x111_111 {
    ::Tcu_displaygearType tcu_displaygear;
    
    ::Tcu_gearselectorreqType tcu_gearselectorreq;
    
    ::Tcu_transpmotoparkreqinvalidType tcu_transpmotoparkreqinvalid;
    
    ::Tcu_gearshiftinprogressType tcu_gearshiftinprogress;
    
    ::Tcu_shiftleverpos_sbwmType tcu_shiftleverpos_sbwm;
    
    ::Tcu_targetgearreqType tcu_targetgearreq;
    
    ::Tcu_availableType tcu_available;
    
    ::Tcu_driverinterventionType tcu_driverintervention;
    
    ::Tcu_trsmfaultflagType tcu_trsmfaultflag;
    
    ::Tcu_stgearmodeType tcu_stgearmode;
    
    ::Tcu_driving_mode_reqType tcu_driving_mode_req;
    
    ::Tcu_shiftlevertopreqinvalidType tcu_shiftlevertopreqinvalid;
    
    ::Int32 tcu_status_alivecounter0x123;
    
    ::Tcu_transpmotorparkreqType tcu_transpmotorparkreq;
    
    ::Tcu_shiftlevertopreqType tcu_shiftlevertopreq;
    
    ::Int32 tcu_status_checksum0x123;
    
    ::Tcu_currentgearpositionType tcu_currentgearposition;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(tcu_displaygear);
        fun(tcu_gearselectorreq);
        fun(tcu_transpmotoparkreqinvalid);
        fun(tcu_gearshiftinprogress);
        fun(tcu_shiftleverpos_sbwm);
        fun(tcu_targetgearreq);
        fun(tcu_available);
        fun(tcu_driverintervention);
        fun(tcu_trsmfaultflag);
        fun(tcu_stgearmode);
        fun(tcu_driving_mode_req);
        fun(tcu_shiftlevertopreqinvalid);
        fun(tcu_status_alivecounter0x123);
        fun(tcu_transpmotorparkreq);
        fun(tcu_shiftlevertopreq);
        fun(tcu_status_checksum0x123);
        fun(tcu_currentgearposition);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(tcu_displaygear);
        fun(tcu_gearselectorreq);
        fun(tcu_transpmotoparkreqinvalid);
        fun(tcu_gearshiftinprogress);
        fun(tcu_shiftleverpos_sbwm);
        fun(tcu_targetgearreq);
        fun(tcu_available);
        fun(tcu_driverintervention);
        fun(tcu_trsmfaultflag);
        fun(tcu_stgearmode);
        fun(tcu_driving_mode_req);
        fun(tcu_shiftlevertopreqinvalid);
        fun(tcu_status_alivecounter0x123);
        fun(tcu_transpmotorparkreq);
        fun(tcu_shiftlevertopreq);
        fun(tcu_status_checksum0x123);
        fun(tcu_currentgearposition);
    }

    bool operator == (const ::Gw_ems_tqwhl_0x111_111& t) const {
        return (tcu_displaygear == t.tcu_displaygear) && (tcu_gearselectorreq == t.tcu_gearselectorreq) && (tcu_transpmotoparkreqinvalid == t.tcu_transpmotoparkreqinvalid) && (tcu_gearshiftinprogress == t.tcu_gearshiftinprogress) && (tcu_shiftleverpos_sbwm == t.tcu_shiftleverpos_sbwm) && (tcu_targetgearreq == t.tcu_targetgearreq) && (tcu_available == t.tcu_available) && (tcu_driverintervention == t.tcu_driverintervention) && (tcu_trsmfaultflag == t.tcu_trsmfaultflag) && (tcu_stgearmode == t.tcu_stgearmode) && (tcu_driving_mode_req == t.tcu_driving_mode_req) && (tcu_shiftlevertopreqinvalid == t.tcu_shiftlevertopreqinvalid) && (tcu_status_alivecounter0x123 == t.tcu_status_alivecounter0x123) && (tcu_transpmotorparkreq == t.tcu_transpmotorparkreq) && (tcu_shiftlevertopreq == t.tcu_shiftlevertopreq) && (tcu_status_checksum0x123 == t.tcu_status_checksum0x123) && (tcu_currentgearposition == t.tcu_currentgearposition);
    }
};


#endif // impl_type_gw_ems_tqwhl_0x111_111_h
