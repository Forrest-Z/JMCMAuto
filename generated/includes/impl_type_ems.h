/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_ems_h
#define impl_type_ems_h












#include "impl_type_double.h"
#include "impl_type_bool.h"
#include "impl_type_int32.h"
#include "impl_type_emstype.h"


struct Ems {
    ::Bool is_engine_acc_available;
    
    ::Bool is_engine_acc_error;
    
    ::EmsType engine_state;
    
    ::Double max_engine_torq_percent;
    
    ::Double min_engine_torq_percent;
    
    ::Int32 base_engine_torq_constant;
    
    ::Bool is_engine_speed_error;
    
    ::Double engine_speed;
    
    ::Int32 engine_torque;
    
    ::Bool is_over_engine_torque;
    
    ::Double engine_rpm;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(is_engine_acc_available);
        fun(is_engine_acc_error);
        fun(engine_state);
        fun(max_engine_torq_percent);
        fun(min_engine_torq_percent);
        fun(base_engine_torq_constant);
        fun(is_engine_speed_error);
        fun(engine_speed);
        fun(engine_torque);
        fun(is_over_engine_torque);
        fun(engine_rpm);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(is_engine_acc_available);
        fun(is_engine_acc_error);
        fun(engine_state);
        fun(max_engine_torq_percent);
        fun(min_engine_torq_percent);
        fun(base_engine_torq_constant);
        fun(is_engine_speed_error);
        fun(engine_speed);
        fun(engine_torque);
        fun(is_over_engine_torque);
        fun(engine_rpm);
    }

    bool operator == (const ::Ems& t) const {
        return (is_engine_acc_available == t.is_engine_acc_available) && (is_engine_acc_error == t.is_engine_acc_error) && (engine_state == t.engine_state) && (max_engine_torq_percent == t.max_engine_torq_percent) && (min_engine_torq_percent == t.min_engine_torq_percent) && (base_engine_torq_constant == t.base_engine_torq_constant) && (is_engine_speed_error == t.is_engine_speed_error) && (engine_speed == t.engine_speed) && (engine_torque == t.engine_torque) && (is_over_engine_torque == t.is_over_engine_torque) && (engine_rpm == t.engine_rpm);
    }
};


#endif // impl_type_ems_h
