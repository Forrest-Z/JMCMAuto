/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_sod_nm_0x440_440_h
#define impl_type_sod_nm_0x440_440_h







#include "impl_type_sodnmringtype.h"
#include "impl_type_int32.h"
#include "impl_type_sodnmalivetype.h"
#include "impl_type_sodnmlimphometype.h"
#include "impl_type_sodnmsleepindtype.h"
#include "impl_type_sodnmsleepacktype.h"


struct Sod_nm_0x440_440 {
    ::SodnmlimphomeType sodnmlimphome;
    
    ::SodnmsleepindType sodnmsleepind;
    
    ::SodnmsleepackType sodnmsleepack;
    
    ::Int32 sodnmdestaddr;
    
    ::SodnmaliveType sodnmalive;
    
    ::SodnmringType sodnmring;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(sodnmlimphome);
        fun(sodnmsleepind);
        fun(sodnmsleepack);
        fun(sodnmdestaddr);
        fun(sodnmalive);
        fun(sodnmring);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(sodnmlimphome);
        fun(sodnmsleepind);
        fun(sodnmsleepack);
        fun(sodnmdestaddr);
        fun(sodnmalive);
        fun(sodnmring);
    }

    bool operator == (const ::Sod_nm_0x440_440& t) const {
        return (sodnmlimphome == t.sodnmlimphome) && (sodnmsleepind == t.sodnmsleepind) && (sodnmsleepack == t.sodnmsleepack) && (sodnmdestaddr == t.sodnmdestaddr) && (sodnmalive == t.sodnmalive) && (sodnmring == t.sodnmring);
    }
};


#endif // impl_type_sod_nm_0x440_440_h
