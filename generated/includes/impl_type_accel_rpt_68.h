/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_accel_rpt_68_h
#define impl_type_accel_rpt_68_h




#include "impl_type_double.h"


struct Accel_rpt_68 {
    ::Double manual_input;
    
    ::Double commanded_value;
    
    ::Double output_value;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(manual_input);
        fun(commanded_value);
        fun(output_value);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(manual_input);
        fun(commanded_value);
        fun(output_value);
    }

    bool operator == (const ::Accel_rpt_68& t) const {
        return (manual_input == t.manual_input) && (commanded_value == t.commanded_value) && (output_value == t.output_value);
    }
};


#endif // impl_type_accel_rpt_68_h
