/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_wheelspeed_h
#define impl_type_wheelspeed_h













#include "impl_type_double.h"
#include "impl_type_wheelspeedtype.h"
#include "impl_type_bool.h"


struct WheelSpeed {
    ::Bool is_wheel_spd_rr_valid;
    
    ::WheelSpeedType wheel_direction_rr;
    
    ::Double wheel_spd_rr;
    
    ::Bool is_wheel_spd_rl_valid;
    
    ::WheelSpeedType wheel_direction_rl;
    
    ::Double wheel_spd_rl;
    
    ::Bool is_wheel_spd_fr_valid;
    
    ::WheelSpeedType wheel_direction_fr;
    
    ::Double wheel_spd_fr;
    
    ::Bool is_wheel_spd_fl_valid;
    
    ::WheelSpeedType wheel_direction_fl;
    
    ::Double wheel_spd_fl;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(is_wheel_spd_rr_valid);
        fun(wheel_direction_rr);
        fun(wheel_spd_rr);
        fun(is_wheel_spd_rl_valid);
        fun(wheel_direction_rl);
        fun(wheel_spd_rl);
        fun(is_wheel_spd_fr_valid);
        fun(wheel_direction_fr);
        fun(wheel_spd_fr);
        fun(is_wheel_spd_fl_valid);
        fun(wheel_direction_fl);
        fun(wheel_spd_fl);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(is_wheel_spd_rr_valid);
        fun(wheel_direction_rr);
        fun(wheel_spd_rr);
        fun(is_wheel_spd_rl_valid);
        fun(wheel_direction_rl);
        fun(wheel_spd_rl);
        fun(is_wheel_spd_fr_valid);
        fun(wheel_direction_fr);
        fun(wheel_spd_fr);
        fun(is_wheel_spd_fl_valid);
        fun(wheel_direction_fl);
        fun(wheel_spd_fl);
    }

    bool operator == (const ::WheelSpeed& t) const {
        return (is_wheel_spd_rr_valid == t.is_wheel_spd_rr_valid) && (wheel_direction_rr == t.wheel_direction_rr) && (wheel_spd_rr == t.wheel_spd_rr) && (is_wheel_spd_rl_valid == t.is_wheel_spd_rl_valid) && (wheel_direction_rl == t.wheel_direction_rl) && (wheel_spd_rl == t.wheel_spd_rl) && (is_wheel_spd_fr_valid == t.is_wheel_spd_fr_valid) && (wheel_direction_fr == t.wheel_direction_fr) && (wheel_spd_fr == t.wheel_spd_fr) && (is_wheel_spd_fl_valid == t.is_wheel_spd_fl_valid) && (wheel_direction_fl == t.wheel_direction_fl) && (wheel_spd_fl == t.wheel_spd_fl);
    }
};


#endif // impl_type_wheelspeed_h
