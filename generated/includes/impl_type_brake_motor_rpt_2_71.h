/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_brake_motor_rpt_2_71_h
#define impl_type_brake_motor_rpt_2_71_h




#include "impl_type_double.h"
#include "impl_type_int32.h"


struct Brake_motor_rpt_2_71 {
    ::Int32 encoder_temperature;
    
    ::Int32 motor_temperature;
    
    ::Double angular_speed;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(encoder_temperature);
        fun(motor_temperature);
        fun(angular_speed);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(encoder_temperature);
        fun(motor_temperature);
        fun(angular_speed);
    }

    bool operator == (const ::Brake_motor_rpt_2_71& t) const {
        return (encoder_temperature == t.encoder_temperature) && (motor_temperature == t.motor_temperature) && (angular_speed == t.angular_speed);
    }
};


#endif // impl_type_brake_motor_rpt_2_71_h
