/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2012-2019. All rights reserved.
 * Generated by VRTF CM-Generator
 */

#ifndef impl_type_battery_h
#define impl_type_battery_h



#include "impl_type_double.h"


struct Battery {
    ::Double battery_percent;
    
    ::Double fuel_level;
    

    static bool IsPlane()
    {
        return true;
    }

    using IsEnumerableTag = void;
    template<typename F>
    void enumerate(F& fun)
    {
        fun(battery_percent);
        fun(fuel_level);
    }

    template<typename F>
    void enumerate(F& fun) const
    {
        fun(battery_percent);
        fun(fuel_level);
    }

    bool operator == (const ::Battery& t) const {
        return (battery_percent == t.battery_percent) && (fuel_level == t.fuel_level);
    }
};


#endif // impl_type_battery_h
